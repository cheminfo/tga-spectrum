{"version":3,"file":"tga-spectrum.min.js","sources":["../node_modules/common-spectrum/src/AnalysesManager.js","../node_modules/ml-array-normed/node_modules/is-any-array/src/index.js","../node_modules/is-any-array/src/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-filter-x/src/index.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/views/base.js","../node_modules/ml-matrix/src/views/transpose.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/ml-pad-array/src/index.js","../node_modules/ml-savitzky-golay/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/ml-spectra-processing/src/x/xDivide.js","../node_modules/object-keys/isArguments.js","../node_modules/object-keys/implementation.js","../node_modules/object-keys/index.js","../node_modules/utils-copy/lib/typedarrays.js","../node_modules/utils-copy-error/lib/copy.js","../node_modules/d3-array/build/d3-array.js","../node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/ml-stat/array.js","../node_modules/common-spectrum/src/util/getNormalized.js","../node_modules/common-spectrum/src/Analysis.js","../node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/jcampconverter/src/2d/add2D.js","../node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/jcampconverter/src/profiling.js","../node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/jcampconverter/src/convert.js","../node_modules/jcampconverter/src/postProcessing.js","../node_modules/common-spectrum/src/from/fromJcamp.js","../node_modules/common-spectrum/src/jsgraph/addStyle.js","../node_modules/common-spectrum/src/jsgraph/colors.js","../node_modules/common-spectrum/src/jsgraph/getNormalizationAnnotations.js","../node_modules/ml-xy-convert/src/from.js","../node_modules/ml-xy-convert/src/index.js","../node_modules/ml-xy-convert/src/to.js","../node_modules/convert-to-jcamp/src/index.js","../node_modules/convert-to-jcamp/src/creator.js","../node_modules/common-spectrum/src/to/toJcamp.js","../src/from/parsePerkinElmer.js","../node_modules/papaparse/papaparse.min.js","../src/index.js","../node_modules/common-spectrum/src/index.js","../node_modules/common-spectrum/src/jsgraph/getJSGraph.js","../src/from/fromPerkinElmer.js","../src/from/fromPerkinElmerCSV.js"],"sourcesContent":["export class AnalysesManager {\n  constructor() {\n    this.analyses = [];\n  }\n\n  addAnalysis(analysis) {\n    let index = this.getAnalysisIndex(analysis.id);\n    if (index === undefined) {\n      this.analyses.push(analysis);\n    } else {\n      this.analyses[index] = analysis;\n    }\n  }\n\n  getAnalyses(options = {}) {\n    const { ids } = options;\n    let analyses = [];\n    for (const analysis of this.analyses) {\n      if (!ids || ids.includes(analysis.id)) {\n        analyses.push(analysis);\n      }\n    }\n    return analyses;\n  }\n\n  /**\n   * Remove the analysis from the AnalysesManager for the specified id\n   * @param {string} id\n   */\n  removeAnalysis(id) {\n    let index = this.getAnalysisIndex(id);\n    if (index === undefined) return undefined;\n    return this.analyses.splice(index, 1);\n  }\n\n  /**\n   * Returns the index of the analysis in the analyses array\n   * @param {string} id\n   * @returns {number}\n   */\n  getAnalysisIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.analyses.length; i++) {\n      let analysis = this.analyses[i];\n      if (analysis.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Checks if the ID of an analysis exists in the AnalysesManager\n   * @param {string} id\n   */\n  includes(id) {\n    return !isNaN(this.getAnalysisIndex(id));\n  }\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @param {number} [options.maxValue=1] new max value for algo max\n * @param {number} [options.sumValue=1] new max value for algo absolute and sum\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","export function inspectMatrix() {\n  const indent = ' '.repeat(2);\n  const indentData = ' '.repeat(4);\n  return `${this.constructor.name} {\n${indent}[\n${indentData}${inspectData(this, indentData)}\n${indent}]\n${indent}rows: ${this.rows}\n${indent}columns: ${this.columns}\n}`;\n}\n\nconst maxRows = 15;\nconst maxColumns = 10;\nconst maxNumSize = 8;\n\nfunction inspectData(matrix, indent) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j)));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indent}`);\n}\n\nfunction formatNumber(num) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.substring(eIndex);\n  return exponential.substring(0, maxNumSize - e.length) + e;\n}\n","import rescale from 'ml-array-rescale';\n\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport { inspectMatrix } from './inspect';\nimport { installMathOperations } from './mathOperations';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","'use strict';\n\nvar defaultOptions = {\n  size: 1,\n  value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n  var len = data.length;\n  if (typeof options.size === 'number') {\n    options.size = [options.size, options.size];\n  }\n\n  var cond = len + options.size[0] + options.size[1];\n\n  var output;\n  if (options.output) {\n    if (options.output.length !== cond) {\n      throw new RangeError('Wrong output size');\n    }\n    output = options.output;\n  } else {\n    output = new Array(cond);\n  }\n\n  var i;\n  if (options.value === 'circular') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) {\n        output[i] = data[(len - (options.size[0] % len) + i) % len];\n      } else if (i < options.size[0] + len) {\n        output[i] = data[i - options.size[0]];\n      } else {\n        output[i] = data[(i - options.size[0]) % len];\n      }\n    }\n  } else if (options.value === 'replicate') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[0];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[len - 1];\n    }\n  } else if (options.value === 'symmetric') {\n    if (options.size[0] > len || options.size[1] > len) {\n      throw new RangeError(\n        'expanded value should not be bigger than the data length'\n      );\n    }\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[options.size[0] - 1 - i];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[2 * len + options.size[0] - i - 1];\n    }\n  } else {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = options.value;\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = options.value;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n  // var row = data.length;\n  // var col = data[0].length;\n  if (options.size[0] === undefined) {\n    options.size = [options.size, options.size, options.size, options.size];\n  }\n  throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray(data, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (Array.isArray(data)) {\n    if (Array.isArray(data[0])) return matrixCase(data, options);\n    else return arrayCase(data, options);\n  } else {\n    throw new TypeError('data should be an array');\n  }\n}\n\nmodule.exports = padArray;\n","import { Matrix, MatrixTransposeView, inverse } from 'ml-matrix';\nimport padArray from 'ml-pad-array';\n\n/**\n * Factorial of a number\n * @ignore\n * @param n\n * @return {number}\n */\nfunction factorial(n) {\n  let r = 1;\n  while (n > 0) r *= n--;\n  return r;\n}\n\nconst defaultOptions = {\n  windowSize: 5,\n  derivative: 1,\n  polynomial: 2,\n  pad: 'none',\n  padValue: 'replicate',\n};\n\n/**\n * Savitzky-Golay filter\n * @param {Array <number>} data\n * @param {number} h\n * @param {Object} options\n * @returns {Array}\n */\nexport default function savitzkyGolay(data, h, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (\n    options.windowSize % 2 === 0 ||\n    options.windowSize < 5 ||\n    !Number.isInteger(options.windowSize)\n  ) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (options.derivative < 0 || !Number.isInteger(options.derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (options.polynomial < 1 || !Number.isInteger(options.polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n\n  let C, norm;\n  let step = Math.floor(options.windowSize / 2);\n\n  if (options.pad === 'pre') {\n    data = padArray(data, { size: step, value: options.padValue });\n  }\n\n  let ans = new Array(data.length - 2 * step);\n\n  if (\n    options.windowSize === 5 &&\n    options.polynomial === 2 &&\n    (options.derivative === 1 || options.derivative === 2)\n  ) {\n    if (options.derivative === 1) {\n      C = [-2, -1, 0, 1, 2];\n      norm = 10;\n    } else {\n      C = [2, -1, -2, -1, 2];\n      norm = 7;\n    }\n  } else {\n    let J = Matrix.ones(options.windowSize, options.polynomial + 1);\n    let inic = -(options.windowSize - 1) / 2;\n    for (let i = 0; i < J.rows; i++) {\n      for (let j = 0; j < J.columns; j++) {\n        if (inic + 1 !== 0 || j !== 0) J.set(i, j, Math.pow(inic + i, j));\n      }\n    }\n    let Jtranspose = new MatrixTransposeView(J);\n    let Jinv = inverse(Jtranspose.mmul(J));\n    C = Jinv.mmul(Jtranspose);\n    C = C.getRow(options.derivative);\n    norm = 1 / factorial(options.derivative);\n  }\n  let det = norm * Math.pow(h, options.derivative);\n  for (let k = step; k < data.length - step; k++) {\n    let d = 0;\n    for (let l = 0; l < C.length; l++) d += (C[l] * data[l + k - step]) / det;\n    ans[k - step] = d;\n  }\n\n  if (options.pad === 'post') {\n    ans = padArray(ans, { size: step, value: options.padValue });\n  }\n\n  return ans;\n}\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array<Number>|Number} array2\n * @return {Array}\n */\nexport function xDivide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\n// MODULES //\n\nvar objectKeys = require( 'object-keys' );\n\n\n// TYPED ARRAY FUNCTIONS //\n\n/**\n* Create functions for copying typed arrays.\n*/\nvar typedArrays = {\n\t'Int8Array': null,\n\t'Uint8Array': null,\n\t'Uint8ClampedArray': null,\n\t'Int16Array': null,\n\t'Uint16Array': null,\n\t'Int32Array': null,\n\t'Uint32Array': null,\n\t'Float32Array': null,\n\t'Float64Array': null\n};\n\n(function createTypedArrayFcns() {\n\t/* jshint evil:true */\n\tvar keys = objectKeys( typedArrays );\n\tvar len = keys.length;\n\tvar key;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tkey = keys[ i ];\n\t\ttypedArrays[ key ] = new Function( 'arr', 'return new '+key+'( arr );' );\n\t}\n})();\n\n\n// EXPORTS //\n\nmodule.exports = typedArrays;\n","'use strict';\n\n// MODULES //\n\nvar deepCopy = require( 'utils-copy' );\nvar getKeys = require( 'object-keys' ).shim();\n\n\n// COPY ERROR //\n\n/**\n* FUNCTION: copy( error )\n*\tCopies an error.\n*\n* @param {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error - error to copy\n* @returns {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error copy\n*/\nfunction copy( error ) {\n\t/* jshint newcap:false */\n\tvar keys;\n\tvar desc;\n\tvar key;\n\tvar err;\n\tvar i;\n\tif ( !( error instanceof Error ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an error object. Value: `' + error + '`.' );\n\t}\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = getKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = Object.getOwnPropertyDescriptor( error, key );\n\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\tdesc.value = deepCopy( error[ key ] );\n\t\t}\n\t\tObject.defineProperty( err, key, desc );\n\t}\n\treturn err;\n} // end FUNCTION copy()\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xSubtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","import normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport filterX from 'ml-array-xy-filter-x';\nimport savitzkyGolay from 'ml-savitzky-golay';\nimport { xDivide, xSubtract } from 'ml-spectra-processing';\nimport Stat from 'ml-stat/array';\n/**\n *\n * @private\n * @param {object} spectrum\n * @param {object} [options={}]\n * @param {number} [options.from=spectrum.x[0]]\n * @param {number} [options.to=spectrum.x[spectrum.x.length-1]]\n * @param {number} [options.numberOfPoints]\n * @param {Array} [options.filters=[]] Array of object containing 'name' (centerMean, divideSD, normalize, rescale) and 'options'\n * @param {Array} [options.exclusions=[]]\n * @returns {DataXY}\n */\nexport function getNormalized(spectrum, options = {}) {\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints,\n    filters = [],\n    exclusions = [],\n    processing = '',\n  } = options;\n\n  let { x, y } = filterX(spectrum, { from, to });\n\n  switch (processing) {\n    case 'firstDerivative':\n      if (options.processing) {\n        y = savitzkyGolay(y, 1, {\n          derivative: 1,\n          polynomial: 2,\n          windowSize: 5,\n        });\n        x = x.slice(2, x.length - 2);\n      }\n      break;\n    case 'secondDerivative':\n      if (options.processing) {\n        y = savitzkyGolay(y, 1, {\n          derivative: 2,\n          polynomial: 2,\n          windowSize: 5,\n        });\n        x = x.slice(2, x.length - 2);\n      }\n      break;\n    default:\n  }\n\n  for (let filter of filters) {\n    let filterOptions = filter.options || {};\n    switch (filter.name.toLowerCase()) {\n      case 'centermean': {\n        let mean = Stat.mean(y);\n        y = xSubtract(y, mean);\n        break;\n      }\n      case 'dividebysd': {\n        let std = Stat.standardDeviation(y);\n        y = xDivide(y, std);\n        break;\n      }\n      case 'normalize': {\n        // should be an integration in fact\n        y = normed(y, {\n          sumValue: filterOptions.value ? Number(filterOptions.value) : 1,\n          algorithm: 'absolute',\n        });\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y, {\n          min: filterOptions.min ? Number(filter.options.min) : 0,\n          max: filterOptions.max ? Number(filter.options.max) : 1,\n        });\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n\n  if (!numberOfPoints) {\n    return filterX({ x, y }, { from, to, exclusions });\n  }\n\n  return equallySpaced({ x, y }, { from, to, numberOfPoints, exclusions });\n}\n","import { getNormalized } from './util/getNormalized';\n\n/**\n * Class allowing to store and manipulate an analysis.\n * An analysis may contain one or more spectra that are identified\n * by a 'flavor'\n * @class Analysis\n * @param {object} [options={}]\n * @param {string} [options.id=randomString] unique identifier\n * @param {string} [options.label=options.id] human redeable label\n * @param {string} [options.defaultFlavor=''] human redeable label\n */\nexport class Analysis {\n  constructor(options = {}) {\n    this.id = options.id || Math.random().toString(36).substring(2, 10);\n    this.label = options.label || this.id;\n    this.spectra = {};\n    this.defaultFlavor =\n      options.defaultFlavor === undefined ? '' : options.defaultFlavor;\n  }\n\n  /**\n   * Set a spectrum for a specific flavor\n   * @param {DataXY} data\n   * @param {object} [options={}]\n   * @param {string} [options.defaultFlavor=this.defaultFlavor]\n   * @param {string} [options.xLabel='']\n   * @param {string} [options.yLabel='']\n   * @param {string} [options.title='']\n   * @param {object} [options.meta={}]\n   *\n   */\n  set(data, options = {}) {\n    const { flavor = this.defaultFlavor } = options;\n    this.spectra[flavor.toLowerCase()] = standardizeData(data, options);\n  }\n\n  /**\n   * Retrieve a Spectrum based on a flavor\n   * @param {object} [options={}]\n   * @param {string} [options.defaultFlavor=this.defaultFlavor]\n   * @returns {Spectrum}\n   */\n  get(flavor = this.defaultFlavor) {\n    flavor = flavor.toLowerCase();\n\n    if (!this.spectra[flavor]) {\n      return undefined;\n    }\n    return this.spectra[flavor];\n  }\n\n  /**\n   * Return the data object for a specific flavor with possibly some\n   * normalization options\n   * @param {object} [options={}]\n   */\n  getData(options = {}) {\n    const { flavor, normalization } = options;\n    let data = this.get(flavor);\n    if (!data) return undefined;\n    return getNormalized(data, normalization);\n  }\n\n  getXLabel(flavor) {\n    return this.get(flavor).xLabel;\n  }\n\n  getYLabel(flavor) {\n    return this.get(flavor).yLabel;\n  }\n}\n\n/**\n * Internal function that ensure the order of x / y array\n * @param {DataXY} [data]\n * @param {object} [options={}]\n * @return {Spectrum}\n */\nfunction standardizeData(data, options = {}) {\n  const { meta = {}, xLabel = '', yLabel = '', title = '' } = options;\n  let { x, y } = data;\n  if (x && x.length > 1 && x[0] > x[x.length - 1]) {\n    x = x.reverse();\n    y = y.reverse();\n  } else {\n    x = x || [];\n    y = y || [];\n  }\n  data = { x, y };\n\n  return {\n    x: data.x,\n    y: data.y,\n    xLabel,\n    yLabel,\n    title,\n    meta,\n  };\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  // TODO to be improved using 2 array {x:[], y:[]}\n  let currentData = [];\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.push(currentX);\n                currentData.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","export default function parsePeakTable(spectrum, value, result) {\n  let removeCommentRegExp = /\\$\\$.*/;\n  let peakTableSplitRegExp = /[,\\t ]+/;\n\n  spectrum.isPeaktable = true;\n  let values;\n  let currentData = [];\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = [];\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.push(parseFloat(values[0]));\n    currentData.push(parseFloat(values[1]));\n  }\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.length / 2;\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = new Array(xSize);\n    let xVector = spectra[i].data;\n    for (let j = 0; j < xSize; j++) {\n      let value = xVector[j * 2 + 1];\n      z[i][j] = value;\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data[0];\n  const lastX = spectra[0].data[spectra[0].data.length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n  if (spectrum.observeFrequency) {\n    if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n      spectrum.xUnit = 'PPM';\n      spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n      spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n      spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n      spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n    }\n  }\n  if (spectrum.shiftOffsetVal) {\n    let shift = spectrum.firstX - spectrum.shiftOffsetVal;\n    spectrum.firstX = spectrum.firstX - shift;\n    spectrum.lastX = spectrum.lastX - shift;\n  }\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[, \\t]+/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  dynamicTyping: false,\n  xy: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\nexport default function convert(jcamp, options) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        let xIndex = -1;\n        let yIndex = -1;\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        if (infos[0].indexOf('++') > 0) {\n          let firstVariable = infos[0].replace(\n            /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n            '$1',\n          );\n          let secondVariable = infos[0].replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n          xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n          yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n        }\n\n        if (xIndex === -1) xIndex = 0;\n        if (yIndex === -1) yIndex = 0;\n\n        if (currentEntry.ntuples.first) {\n          if (currentEntry.ntuples.first.length > xIndex) {\n            spectrum.firstX = currentEntry.ntuples.first[xIndex];\n          }\n          if (currentEntry.ntuples.first.length > yIndex) {\n            spectrum.firstY = currentEntry.ntuples.first[yIndex];\n          }\n        }\n        if (currentEntry.ntuples.last) {\n          if (currentEntry.ntuples.last.length > xIndex) {\n            spectrum.lastX = currentEntry.ntuples.last[xIndex];\n          }\n          if (currentEntry.ntuples.last.length > yIndex) {\n            spectrum.lastY = currentEntry.ntuples.last[yIndex];\n          }\n        }\n        if (\n          currentEntry.ntuples.vardim &&\n          currentEntry.ntuples.vardim.length > xIndex\n        ) {\n          spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n        }\n        if (currentEntry.ntuples.factor) {\n          if (currentEntry.ntuples.factor.length > xIndex) {\n            spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n          }\n          if (currentEntry.ntuples.factor.length > yIndex) {\n            spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n          }\n        }\n        if (currentEntry.ntuples.units) {\n          if (currentEntry.ntuples.units.length > xIndex) {\n            spectrum.xUnit = currentEntry.ntuples.units[xIndex];\n          }\n          if (currentEntry.ntuples.units.length > yIndex) {\n            spectrum.yUnit = currentEntry.ntuples.units[yIndex];\n          }\n        }\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.indexOf('nD') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.indexOf('nD') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnit = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnit = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$SFO2') {\n      if (!currentEntry.indirectFrequency) {\n        currentEntry.indirectFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n      let pageSymbolIndex = currentEntry.ntuples.symbol.indexOf(\n        spectrum.pageSymbol,\n      );\n      let unit = '';\n      if (\n        currentEntry.ntuples.units &&\n        currentEntry.ntuples.units[pageSymbolIndex]\n      ) {\n        unit = currentEntry.ntuples.units[pageSymbolIndex];\n      }\n      if (currentEntry.indirectFrequency && unit !== 'PPM') {\n        spectrum.pageValue /= currentEntry.indirectFrequency;\n      }\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n      let value = dataValue.trim();\n      if (options.dynamicTyping && !isNaN(value)) {\n        value = Number(value);\n      }\n      if (currentEntry.info[label]) {\n        if (!Array.isArray(currentEntry.info[label])) {\n          currentEntry.info[label] = [currentEntry.info[label]];\n        }\n        currentEntry.info[label].push(value);\n      } else {\n        currentEntry.info[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && options.wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (entry.spectra && entry.spectra.length > 0) {\n        for (let spectrum of entry.spectra) {\n          if (spectrum.data) {\n            let data = spectrum.data;\n            let newData = {\n              x: new Array(data.length / 2),\n              y: new Array(data.length / 2),\n            };\n            for (let k = 0; k < data.length; k = k + 2) {\n              newData.x[k / 2] = data[k];\n              newData.y[k / 2] = data[k + 1];\n            }\n            spectrum.data = newData;\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","import { convert } from 'jcampconverter';\n\nimport { Analysis } from '../Analysis';\n\n/**\n * Creates a new Analysis from a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {object} [options.id=Math.random()]\n * @param {object} [options.flavor='']\n * @return {Analysis} - New class element with the given data\n */\nexport function fromJcamp(jcamp, options = {}) {\n  let analysis = new Analysis(options);\n  addJcamp(analysis, jcamp, options);\n  return analysis;\n}\n\nfunction addJcamp(analysis, jcamp, options = {}) {\n  const { defaultFlavor } = options;\n  let converted = convert(jcamp, {\n    keepRecordsRegExp: /.*/,\n    canonicDataLabels: false,\n    dynamicTyping: true,\n  });\n\n  for (let entry of converted.flatten) {\n    let currentSpectrum = entry.spectra[0];\n    let xLabel = currentSpectrum.xUnit;\n    let yLabel = currentSpectrum.yUnit;\n\n    let flavor = entry.info.$cheminfoFlavor || defaultFlavor;\n\n    let meta = {};\n    for (let key in entry.info) {\n      if (key.startsWith('$') && key !== '$cheminfoFlavor') {\n        meta[key.substring(1)] = entry.info[key];\n      }\n    }\n\n    analysis.set(currentSpectrum.data, {\n      flavor,\n      xLabel,\n      yLabel,\n      title: entry.title,\n      meta,\n    });\n  }\n}\n","export function addStyle(serie, spectrum, options = {}) {\n  const { color = 'darkgrey' } = options;\n  serie.style = [\n    {\n      name: 'unselected',\n      style: {\n        line: {\n          color,\n          width: 1,\n          dash: 1,\n        },\n      },\n    },\n    {\n      name: 'selected',\n      style: {\n        line: {\n          color,\n          width: 3,\n          dash: 1,\n        },\n      },\n    },\n  ];\n  serie.name = spectrum.label || spectrum.id;\n}\n","export const COLORS = [\n  '#FFB300',\n  '#803E75',\n  '#FF6800',\n  '#A6BDD7',\n  '#C10020',\n  '#CEA262',\n  '#817066',\n  '#007D34',\n  '#F6768E',\n  '#00538A',\n  '#FF7A5C',\n  '#53377A',\n  '#FF8E00',\n  '#B32851',\n  '#F4C800',\n  '#7F180D',\n  '#93AA00',\n  '#593315',\n  '#F13A13',\n  '#232C16',\n];\n","export function getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n","export function fromXxyyArray(data) {\n  return { x: data[0], y: data[1] };\n}\n\nexport function fromXyxyArray(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point[0]);\n    y.push(point[1]);\n  }\n  return { x, y };\n}\n\nexport function fromXyxyObject(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point.x);\n    y.push(point.y);\n  }\n  return { x, y };\n}\n\nexport function fromGeneral(data) {\n  if (Array.isArray(data)) {\n    if (data.length === 0) return { x: [], y: [] };\n    if (Array.isArray(data[0])) {\n      if (data.length === 2) {\n        return fromXxyyArray(data);\n      } else {\n        return fromXyxyArray(data);\n      }\n    } else {\n      return fromXyxyObject(data);\n    }\n  } else {\n    if (Array.isArray(data.x) && Array.isArray(data.x)) {\n      return data;\n    } else {\n      throw new TypeError('unknown data format');\n    }\n  }\n}\n","import { fromGeneral, fromXxyyArray, fromXyxyArray, fromXyxyObject } from './from';\nimport { toXxyyArray, toXyxyArray, toXyxyObject } from './to';\n\n/**\n * Convert between different xy formats\n * @param {*} data - input set of points to parse\n * @param {object} [options] - input and output options\n * @param {string} [options.inputFormat] - input format, if not in list infers the kind\n * @param {string} [options.outputFormat = 'xxyyObject'] - output format\n * @return {*} - output set of points\n */\nexport default function xyConvert(data, options = {}) {\n  const { inputFormat, outputFormat = 'xxyyObject' } = options;\n\n  if (inputFormat === outputFormat) return data;\n\n  let middleData;\n  switch (inputFormat) {\n    case 'xxyyArray':\n      middleData = fromXxyyArray(data);\n      break;\n\n    case 'xyxyArray':\n      middleData = fromXyxyArray(data);\n      break;\n\n    case 'xxyyObject':\n      // this is the base case\n      middleData = data;\n      break;\n\n    case 'xyxyObject':\n      middleData = fromXyxyObject(data);\n      break;\n\n    default:\n      middleData = fromGeneral(data);\n      break;\n  }\n\n  switch (outputFormat) {\n    case 'xxyyArray':\n      return toXxyyArray(middleData);\n\n    case 'xyxyArray':\n      return toXyxyArray(middleData);\n\n    case 'xxyyObject':\n      return middleData;\n\n    case 'xyxyObject':\n      return toXyxyObject(middleData);\n\n    default:\n      throw new TypeError(`unknown output format ${outputFormat}`);\n  }\n}\n","export function toXxyyArray({ x, y }) {\n  return [x, y];\n}\n\nexport function toXyxyArray({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push([x[index], y[index]]);\n  }\n  return ans;\n}\n\nexport function toXyxyObject({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push({ x: x[index], y: y[index] });\n  }\n  return ans;\n}\n","import { parseXY } from 'xy-parser';\nimport xyConvert from 'ml-xy-convert';\n\nimport creator from './creator';\n\n/**\n * Convert strings into JCAMP and add extra information\n * @param {string} data - values to add to the file, usually a csv or tsv values\n * @param {object} [options={}]\n * @param {string} [options.meta] - metadata of the file\n * @param {string} [options.meta.title = ''] - title of the file\n * @param {string} [options.meta.owner = ''] - owner of the file\n * @param {string} [options.meta.origin = ''] - origin of the file\n * @param {string} [options.meta.type = ''] - type of data\n * @param {string} [options.meta.xUnit = ''] - units for the x axis\n * @param {string} [options.meta.yUnit = ''] - units for the y axis\n * @param {object} [options.meta.info = {}] - comments to add to the file\n * @param {object} [options.parser = {}] - 'xy-parser' options. arrayType = 'xyxy' is enforced\n * @return {string} JCAMP of the input\n */\nexport function fromText(data, options = {}) {\n  const { meta = {}, parserOptions = {} } = options;\n\n  parserOptions.keepInfo = true;\n  let parsed = parseXY(data, parserOptions);\n\n  if (!meta.info) meta.info = {};\n  meta.info.header = parsed.info.map((i) => i.value).join('\\n');\n  let jcamp = creator(parsed.data, meta);\n  return jcamp;\n}\n\n/**\n * Parse from any supported format in ml-xy-convert\n * @param {*} data - object or array with a set of points\n * @param {object} [meta] - metadata object\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, meta = {}) {\n  const parsed = xyConvert(data, { outputFormat: 'xxyyObject' });\n  return creator(parsed, meta);\n}\n","/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} data\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creator(data, meta = {}) {\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    type = '',\n    xUnit = '',\n    yUnit = '',\n    info = {},\n  } = meta;\n  let firstX = Number.POSITIVE_INFINITY;\n  let lastX = Number.NEGATIVE_INFINITY;\n  let firstY = Number.POSITIVE_INFINITY;\n  let lastY = Number.NEGATIVE_INFINITY;\n  let points = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${type}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnit}\n##YUNITS=${yUnit}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key of Object.keys(info)) {\n    header += `##$${key}=${info[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import { fromJSON } from 'convert-to-jcamp';\n\nexport function toJcamp(analysis, options = {}) {\n  const { dataType = '' } = options;\n  let jcamps = [];\n  for (let flavorName in analysis.spectra) {\n    let data = analysis.get(flavorName);\n    jcamps.push(\n      getJcamp(data, {\n        dataType,\n        flavorName,\n      }),\n    );\n  }\n\n  return jcamps.join('\\n');\n}\n\nfunction getJcamp(flavor, options) {\n  let jcampOptions = {\n    xUnit: flavor.xLabel,\n    yUnit: flavor.yLabel,\n    title: flavor.title,\n    type: options.dataType,\n    info: { ...flavor.meta, cheminfoFlavor: options.flavorName },\n  };\n  return fromJSON({ x: flavor.x, y: flavor.y }, jcampOptions);\n}\n","export function parsePerkinElmer(text) {\n  let lines = text.split(/[\\r\\n]+/);\n  let result = { meta: {}, data: { time: [], weight: [], temperature: [] } };\n  let section = '';\n  let inMethodSteps = false;\n  for (let line of lines) {\n    if (inMethodSteps) {\n      if (line.startsWith('1) TGA')) {\n        inMethodSteps = false;\n      } else {\n        if (!result.meta['Method Steps']) result.meta['Method Steps'] = '';\n        result.meta['Method Steps'] += `${line.replace(/\\t/g, '  ')}\\n`;\n      }\n    } else if (line.match(/^[a-zA-Z -]+$/)) {\n      section = trim(line);\n    } else if (line.match(/.*:.*/)) {\n      let position = line.indexOf(':');\n      let description = line.substring(0, position);\n      let value = trim(line.substring(position + 1));\n      result.meta[(section ? `${section}_` : '') + description] = value;\n    } else if (line.match(/^[0-9\\t .]+$/)) {\n      let fields = line.replace(/^\\t/, '').split('\\t');\n      result.data.time.push(Number(fields[0]));\n      result.data.weight.push(Number(fields[1]));\n      result.data.temperature.push(Number(fields[4]));\n    } else {\n      //  console.log('Problem: ', line);\n    }\n    if (line.startsWith('Method Steps:')) {\n      inMethodSteps = true;\n    }\n  }\n  return result;\n}\n\nfunction trim(string) {\n  return string.replace(/^[ \\t]*(.*?)[ \\t]*$/, '$1');\n}\n","/* @license\nPapa Parse\nv5.2.0\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=n&&/blob:/i.test((f.location||{}).protocol),a={},h=0,b={parse:function(e,t){var i=(t=t||{}).dynamicTyping||!1;U(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!U(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var r=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(i=f.URL||f.webkitURL||null,r=s.toString(),b.BLOB_URL||(b.BLOB_URL=i.createObjectURL(new Blob([\"(\",r,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var i,r;return t.onmessage=_,t.id=h++,a[t.id]=t}();return r.userStep=t.step,r.userChunk=t.chunk,r.userComplete=t.complete,r.userError=t.error,t.step=U(t.step),t.chunk=U(t.chunk),t.complete=U(t.complete),t.error=U(t.error),delete t.worker,void r.postMessage({input:e,config:t,workerId:r.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?n=t.download?new l(t):new p(t):!0===e.readable&&U(e.read)&&U(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",v=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines);\"string\"==typeof t.newline&&(v=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s)}();var o=new RegExp(q(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||h(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:h(e.data[0])),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function h(e){if(\"object\"!=typeof e)return[];var t=[];for(var i in e)t.push(i);return t}function u(e,t,i){var r=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=y(e[a],a);0<t.length&&(r+=v)}for(var o=0;o<t.length;o++){var h=n?e.length:t[o].length,u=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var d=[],l=0;l<h;l++){var c=s?e[l]:l;d.push(t[o][c])}u=\"\"===d.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!f&&(r+=m);var g=n&&s?e[p]:p;r+=y(t[o][g],p)}o<t.length-1&&(!i||0<h&&!f)&&(r+=v)}}return r}function y(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var i=e.toString().replace(o,a),r=\"boolean\"==typeof n&&n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1}(i,b.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1);return r?s+i+s:i}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=w,b.ParserHandle=i,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0!==h.length){var e,t,i,r,n=h[0];if(U(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(U(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){U(a)&&a(e,n.file,n.inputElem),u()},b.parse(n.file,n.instanceConfig)}else U(o.complete)&&o.complete()}function u(){h.splice(0,1),e()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=E(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&U(this._config.beforeFirstChunk)){var i=this._config.beforeFirstChunk(e);void 0!==i&&(e=i)}this.isFirstChunk=!1,this._halted=!1;var r=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(r,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=r.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(U(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!U(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){U(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var r;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),n||(r.onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)r.setRequestHeader(t,e[t])}if(this._config.chunkSize){var i=this._start+this._config.chunkSize-1;r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i)}try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:r.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){var t=r.statusText||e;this._sendError(new Error(t))}}function c(e){var r,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),u.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((r=new FileReader).onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)):r=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var i=r.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:i}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(r.error)}}function p(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=i.substring(0,t),i=i.substring(t)):(e=i,i=\"\"),this._finished=!i,this.parseChunk(e)}}}function g(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var a,o,h,r=Math.pow(2,53),n=-r,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)(e[-+]?\\d+)?\\s*$/,u=/(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,t=this,i=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(U(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;i+=e.data.length,m.preview&&i>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function v(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(c&&h&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),h=!1),m.skipEmptyLines)for(var e=0;e<c.data.length;e++)v(c.data[e])&&c.data.splice(e--,1);return _()&&function(){if(!c)return;function e(e){U(m.transformHeader)&&(e=m.transformHeader(e)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var i,r=m.header?{}:[];for(i=0;i<e.length;i++){var n=i,s=e[i];m.header&&(n=i>=l.length?\"__parsed_extra\":l[i]),m.transform&&(s=m.transform(s,n)),s=y(n,s),\"__parsed_extra\"===n?(r[n]=r[n]||[],r[n].push(s)):r[n]=s}return m.header&&(i>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+i,f+t):i<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+i,f+t)),r}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function y(e,t){return i=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[i]&&(m.dynamicTyping[i]=m.dynamicTypingFunction(i)),!0===(m.dynamicTyping[i]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<r)return!0}return!1}(t)?parseFloat(t):u.test(t)?new Date(t):\"\"===t?null:t):t;var i}function k(e,t,i,r){var n={type:e,code:t,message:i};void 0!==r&&(n.row=r),c.errors.push(n)}this.parse=function(e,t,i){var r=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var i=new RegExp(q(t)+\"([^]*?)\"+q(t),\"gm\"),r=(e=e.replace(i,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<r[0].length;if(1===r.length||s)return\"\\n\";for(var a=0,o=0;o<r.length;o++)\"\\n\"===r[o][0]&&a++;return a>=r.length/2?\"\\r\\n\":\"\\r\"}(e,r)),h=!1,m.delimiter)U(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,i,r,n){var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var u=0;u<n.length;u++){var f=n[u],d=0,l=0,c=0;o=void 0;for(var p=new w({comments:r,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(i&&v(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===h||h<l)&&1.99<l&&(a=d,s=f,h=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(h=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=E(m);return m.preview&&m.header&&s.preview++,a=e,o=new w(s),c=o.parse(a,t,i),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=U(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,U(m.complete)&&m.complete(c),a=\"\"}}function q(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function w(e){var O,D=(e=e||{}).delimiter,I=e.newline,T=e.comments,A=e.step,L=e.preview,F=e.fastMode,z=O=void 0===e.quoteChar?'\"':e.quoteChar;if(void 0!==e.escapeChar&&(z=e.escapeChar),(\"string\"!=typeof D||-1<b.BAD_DELIMITERS.indexOf(D))&&(D=\",\"),T===D)throw new Error(\"Comment character same as delimiter\");!0===T?T=\"#\":(\"string\"!=typeof T||-1<b.BAD_DELIMITERS.indexOf(T))&&(T=!1),\"\\n\"!==I&&\"\\r\"!==I&&\"\\r\\n\"!==I&&(I=\"\\n\");var M=0,j=!1;this.parse=function(a,t,i){if(\"string\"!=typeof a)throw new Error(\"Input must be a string\");var r=a.length,e=D.length,n=I.length,s=T.length,o=U(A),h=[],u=[],f=[],d=M=0;if(!a)return R();if(F||!1!==F&&-1===a.indexOf(O)){for(var l=a.split(I),c=0;c<l.length;c++){if(f=l[c],M+=f.length,c!==l.length-1)M+=I.length;else if(i)return R();if(!T||f.substring(0,s)!==T){if(o){if(h=[],b(f.split(D)),S(),j)return R()}else b(f.split(D));if(L&&L<=c)return h=h.slice(0,L),R(!0)}}return R()}for(var p=a.indexOf(D,M),g=a.indexOf(I,M),_=new RegExp(q(z)+q(O),\"g\"),m=a.indexOf(O,M);;)if(a[M]!==O)if(T&&0===f.length&&a.substring(M,M+s)===T){if(-1===g)return R();M=g+n,g=a.indexOf(I,M),p=a.indexOf(D,M)}else{if(-1!==p&&(p<g||-1===g)){if(!(p<m)){f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}var v=x(p,m,g);if(v&&void 0!==v.nextDelim){p=v.nextDelim,m=v.quoteSearch,f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}}if(-1===g)break;if(f.push(a.substring(M,g)),C(g+n),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0)}else for(m=M,M++;;){if(-1===(m=a.indexOf(O,m+1)))return i||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:M}),E();if(m===r-1)return E(a.substring(M,m).replace(_,O));if(O!==z||a[m+1]!==z){if(O===z||0===m||a[m-1]!==z){-1!==p&&p<m+1&&(p=a.indexOf(D,m+1)),-1!==g&&g<m+1&&(g=a.indexOf(I,m+1));var y=w(-1===g?p:Math.min(p,g));if(a[m+1+y]===D){f.push(a.substring(M,m).replace(_,O)),a[M=m+1+y+e]!==O&&(m=a.indexOf(O,M)),p=a.indexOf(D,M),g=a.indexOf(I,M);break}var k=w(g);if(a.substring(m+1+k,m+1+k+n)===I){if(f.push(a.substring(M,m).replace(_,O)),C(m+1+k+n),p=a.indexOf(D,M),m=a.indexOf(O,M),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:M}),m++}}else m++}return E();function b(e){h.push(e),d=M}function w(e){var t=0;if(-1!==e){var i=a.substring(m+1,e);i&&\"\"===i.trim()&&(t=i.length)}return t}function E(e){return i||(void 0===e&&(e=a.substring(M)),f.push(e),M=r,b(f),o&&S()),R()}function C(e){M=e,b(f),f=[],g=a.indexOf(I,M)}function R(e){return{data:h,errors:u,meta:{delimiter:D,linebreak:I,aborted:j,truncated:!!e,cursor:d+(t||0)}}}function S(){A(R()),h=[],u=[]}function x(e,t,i){var r={nextDelim:void 0,quoteSearch:void 0},n=a.indexOf(O,t+1);if(t<e&&e<n&&(n<i||-1===i)){var s=a.indexOf(D,n);if(-1===s)return r;n<s&&(n=a.indexOf(O,n+1)),r=x(s,n,i)}else r={nextDelim:e,quoteSearch:t};return r}},this.abort=function(){j=!0},this.getCharIndex=function(){return M}}function _(e){var t=e.data,i=a[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:v,resume:v};if(U(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else U(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&m(t.workerId,t.results)}function m(e,t){var i=a[e];U(i.userComplete)&&i.userComplete(t),i.terminate(),delete a[e]}function v(){throw new Error(\"Not implemented.\")}function E(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var i in e)t[i]=E(e[i]);return t}function y(e,t){return function(){e.apply(t,arguments)}}function U(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var i=b.parse(t.input,t.config);i&&f.postMessage({workerId:b.WORKER_ID,results:i,finished:!0})}}),(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(u.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(u.prototype)).constructor=g,b});","import { CommonSpectrum } from 'common-spectrum';\n\nexport const {\n  Analysis,\n  AnalysesManager,\n  fromJcamp,\n  toJcamp,\n  getJSGraph,\n  getNormalizationAnnotations,\n} = new CommonSpectrum({\n  dataType: 'TGA',\n  defaultFlavor: 'weightVersusTemperature',\n});\n\nexport { fromPerkinElmer } from './from/fromPerkinElmer';\nexport { fromPerkinElmerCSV } from './from/fromPerkinElmerCSV';\n","/**\n * @typedef {Object} DataXY\n * @property {Array<Number>} x Array of x values\n * @property {Array<Number>} y Array of y values\n */\n\n/**\n * @typedef {Object} Spectrum\n * @property {Array<Number>} x Array of x values\n * @property {Array<Number>} y Array of y values\n * @property {string} xLabel\n * @property {string} yLabel\n * @property {string} title\n * @property {object} meta\n */\n\nimport { AnalysesManager } from './AnalysesManager';\nimport { Analysis } from './Analysis';\nimport { fromJcamp } from './from/fromJcamp';\nimport { getJSGraph } from './jsgraph/getJSGraph';\nimport { getNormalizationAnnotations } from './jsgraph/getNormalizationAnnotations';\nimport { toJcamp } from './to/toJcamp';\nimport { getNormalized } from './util/getNormalized';\n\nexport function CommonSpectrum(options = {}) {\n  const { dataType = '', defaultFlavor = '' } = options;\n\n  class CustomAnalysis extends Analysis {\n    constructor(analysisOptions) {\n      super(analysisOptions);\n      this.defaultFlavor = defaultFlavor;\n    }\n  }\n\n  return {\n    Analysis: CustomAnalysis,\n    AnalysesManager,\n\n    getNormalized,\n    fromJcamp: (jcamp, fromOptions) =>\n      fromJcamp(jcamp, { flavor: defaultFlavor, ...fromOptions }),\n    toJcamp: (spectrum) => toJcamp(spectrum, { dataType }),\n    getJSGraph: (analyses, jsGraphOptions) =>\n      getJSGraph(analyses, { flavor: defaultFlavor, ...jsGraphOptions }),\n    getNormalizationAnnotations,\n  };\n}\n","import { addStyle } from './addStyle';\nimport { COLORS } from './colors';\n/**\n * Generate a jsgraph chart format from an array of Analysis\n * @param {Array<Analysis>} analyses\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by all\n * @param {Array} [options.colors] List of colors\n * @param {Array} [options.flavor]\n * @param {object} [options.normalization]\n */\nexport function getJSGraph(analyses, options = {}) {\n  const { colors = COLORS, flavor, normalization } = options;\n  let series = [];\n\n  let xLabel = '';\n  let yLabel = '';\n\n  for (let i = 0; i < analyses.length; i++) {\n    const analysis = analyses[i];\n    let serie = {};\n    let currentData = analysis.getData({ flavor, normalization });\n    if (!currentData) continue;\n    if (!xLabel) xLabel = analysis.getXLabel(flavor);\n    if (!yLabel) yLabel = analysis.getYLabel(flavor);\n    addStyle(serie, analysis, { color: colors[i] });\n    serie.data = currentData;\n    series.push(serie);\n  }\n  return {\n    axes: {\n      x: {\n        label: xLabel,\n        unit: '',\n        unitWrapperBefore: '',\n        unitWrapperAfter: '',\n        flipped: false,\n        display: true,\n      },\n      y: {\n        label: yLabel,\n        unit: '',\n        unitWrapperBefore: '',\n        unitWrapperAfter: '',\n        flipped: false,\n        display: true,\n      },\n    },\n    series,\n  };\n}\n","import { Analysis } from '..';\n\nimport { parsePerkinElmer } from './parsePerkinElmer';\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} text - String containing the JCAMP data\n * @return {Analysis} - New class element with the given data\n */\nexport function fromPerkinElmer(text) {\n  let analysis = new Analysis();\n  let result = parsePerkinElmer(text);\n  analysis.set(\n    { x: result.data.temperature, y: result.data.weight },\n    {\n      xLabel: 'Temperature [°C]',\n      yLabel: 'Weight [mg]',\n      title: result.meta['Sample ID'],\n      meta: result.meta,\n      flavor: 'weightVersusTemperature',\n    },\n  );\n  analysis.set(\n    { x: result.data.time, y: result.data.weight },\n    {\n      xLabel: 'Time [s]',\n      yLabel: 'Weight [mg]',\n      title: result.meta['Sample ID'],\n      meta: result.meta,\n      flavor: 'weightVersusTime',\n    },\n  );\n  return analysis;\n}\n","import Papa from 'papaparse';\n\nimport { Analysis } from '..';\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} text - String containing the JCAMP data\n * @return {Analysis} - New class element with the given data\n */\nexport function fromPerkinElmerCSV(text) {\n  let parsed = Papa.parse(text, { header: true, dynamicTyping: true }).data;\n\n  let analysis = new Analysis();\n  analysis.set(\n    {\n      x: parsed.map((d) => d['Sample Temperature']),\n      y: parsed.map((d) => d['Unsubtracted Weight']),\n    },\n    {\n      xLabel: 'Temperature [°C]',\n      yLabel: 'Weight [mg]',\n      flavor: 'weightVersusTemperature',\n    },\n  );\n  analysis.set(\n    {\n      x: parsed.map((d) => d.Time),\n      y: parsed.map((d) => d['Unsubtracted Weight']),\n    },\n    {\n      xLabel: 'Time [s]',\n      yLabel: 'Weight [mg]',\n      flavor: 'weightVersusTime',\n    },\n  );\n  return analysis;\n}\n"],"names":["AnalysesManager","constructor","analyses","addAnalysis","analysis","index","this","getAnalysisIndex","id","undefined","push","getAnalyses","options","ids","includes","removeAnalysis","splice","i","length","isNaN","toString","Object","prototype","isAnyArray","object","call","endsWith","max","input","isArray","TypeError","maxValue","sum","sumValue","norm","output","arguments","_options$algorithm","algorithm","_options$sumValue","_options$maxValue","Error","Array","toLowerCase","absoluteSumValue","absoluteSum","slice","currentMaxValue","factor","_i","sumFactor","_i2","concat","Math","abs","min","minValue","rescale","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","_typeof","obj","Symbol","iterator","sequentialFill","_options","_options$from","from","_options$to","to","_options$size","size","step","floor","normalize","zones","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","JSON","parse","stringify","map","zone","sort","a","b","forEach","filter","currentZone","result","integral","x0","x1","slope","intercept","equallySpaced","arrayXY","x","y","xLength","reverse","variant","numberOfPoints","exclusions","exclusion","nextExclusion","invert","unitsPerPoint","reduce","previous","current","currentTotal","round","zonesWithPoints","xResult","yResult","zoneResult","processZone","halfStep","lastStep","start","previousX","MAX_VALUE","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","j","main","equallySpacedSlot","initialOriginalStep","lastOriginalStep","MIN_VALUE","sumAtMin","sumAtMax","add","equallySpacedSmooth","filterX","points","currentFrom","getZones","currentZoneIndex","newX","newY","position","checkRowIndex","matrix","outer","rows","checkColumnIndex","columns","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","some","r","checkColumnIndices","columnIndices","c","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","value","array","name","formatNumber","num","numStr","String","padEnd","precise","toPrecision","maxNumSize","exponential","toExponential","eIndex","indexOf","e","substring","AbstractMatrix","newRows","newColumns","newData","newMatrix","Matrix","row","column","set","fill","random","isInteger","interval","zeros","data","l","matrix1","matrix2","checkMatrix","get","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","k","echelonForm","clone","h","iMax","swapRows","tmp","reducedEchelonForm","m","n","maxRow","p","pivot","repeat","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","row1","row2","temp","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","v","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","diag","type","sqrt","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","Float64Array","s","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","r2","c2","embed","mat","cols","resultat","console","warn","blockMult","halfRows","parseInt","halfCols","subMatrix","sub","scaleRows","isFinite","scaleColumns","flipRows","middle","ceil","first","last","flipColumns","kroneckerProduct","q","transpose","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","checkIndices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","product","productByRow","productByColumn","productAll","mean","variance","unbiased","sum1","sum2","varianceByRow","varianceByColumn","varianceAll","standardDeviation","center","centerByRow","centerByColumn","centerAll","scale","pow","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","divider","getScaleAll","scaleAll","for","indent","indentData","maxI","maxJ","line","join","inspectData","rand","randomInt","randInt","diagonal","identity","eye","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","addRow","removeColumn","newRow","addColumn","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","exp","expm1","fround","log","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","installMathOperations","BaseView","MatrixTransposeView","WrapperMatrix2D","LuDecomposition","t","LUcolj","kmax","lu","pivotVector","pivotSign","LU","isSingular","col","solve","count","X","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","tol","ii","useSVD","leftHandSide","rightHandSide","defaultOptions","assign","matrixCase","len","cond","arrayCase","windowSize","derivative","polynomial","pad","padValue","savitzkyGolay","C","padArray","ans","J","ones","inic","Jtranspose","factorial","det","d","_ref","module","exports","window","median","quickSelectMedian","xDivide","array1","array2","constant","isConstant","array3","keysShim","toStr","str","isArgs","callee","keys","has","hasOwnProperty","require$$0","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","o","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isObject","isFunction","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","shim","args","typedArrays","key","objectKeys","Function","ascending","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","number$1","deviation","extent","range","stop","e10","e5","e2","ticks","tickStep","step0","step1","LN10","error","sturges","values","LN2","number","quantile","version","bisect","descending","histogram","domain","xz","tz","pop","bin","bins","_","thresholds","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","zip","factory","xSubtract","arithmeticMean","lnsum","means","samples","percent","alreadySorted","half","theMean","theVariance","averageDeviations","stdev","quart","q1","q2","q3","pooledVariance","vari","itemCount","itemArray","mean1","mean2","cov","s2","s3","dev","s4","weights","weightedVariance","weightedMean","z","w","inPlace","standardDev","getNormalized","spectrum","filters","processing","filterOptions","Stat","normed","process","kind","Analysis","label","spectra","defaultFlavor","flavor","meta","xLabel","yLabel","title","standardizeData","getData","normalization","getXLabel","getYLabel","GC_MS_FIELDS","complexChromatogram","chromatogram","times","series","ms","dimension","existingGCMSFields","convertMSFieldToLabel","pageValue","parseFloat","isMSField","canonicDataLabel","replace","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","ascii","currentX","firstX","currentY","firstY","endLine","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","parsePeakTable","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","lines","split","trim","xFactor","logs","parseXYA","removeSymbolRegExp","isXYAdata","add2D","zData","minZ","maxZ","ySize","xSize","xVector","lastX","lastY","minX","maxX","minY","maxY","noise","getMedian","convertTo3DZ","noContour","contourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","pAx","pAy","pBx","pBy","lineZValue","nbSubSpectra","nbPovars","dx","y0","dy","iter","nbContourLevels","contourLevels","level","contourLevel","side","noiseMultiplier","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","generateContourLines","minMax","profiling","action","time","Date","now","simpleChromatogram","intensity","prepareSpectrum","observeFrequency","xUnit","toUpperCase","shiftOffsetVal","ntuplesSeparator","Spectrum","keepRecordsRegExp","canonicDataLabels","dynamicTyping","xy","withoutXY","keepSpectra","convert","jcamp","wantXY","entriesFlat","entries","tmpResult","children","currentEntry","parentsStack","ldrs","ldr","dataLabel","dataValue","xIndex","yIndex","infos","firstVariable","secondVariable","ntuples","symbol","vardim","nbPoints","units","yUnit","datatable","parentEntry","info","dataType","twoD","dataClass","xType","indirectFrequency","shiftOffsetNum","varname","vartype","varform","yType","page","pageSymbol","pageSymbolIndex","unit","sampleDescription","match","entry","newNtuples","postProcessing","flatten","fromJcamp","converted","currentSpectrum","$cheminfoFlavor","startsWith","addJcamp","addStyle","serie","color","style","width","dash","COLORS","getNormalizationAnnotations","boundary","annotations","ignore","strokeWidth","fillColor","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","fromXxyyArray","fromXyxyArray","point","fromXyxyObject","xyConvert","inputFormat","outputFormat","middleData","fromGeneral","toXxyyArray","toXyxyArray","toXyxyObject","fromJSON","owner","origin","header","creator","getJcamp","jcampOptions","cheminfoFlavor","flavorName","string","self","document","postMessage","test","location","protocol","dynamicTypingFunction","transform","worker","WORKERS_SUPPORTED","URL","webkitURL","BLOB_URL","createObjectURL","Blob","Worker","onmessage","userStep","userChunk","chunk","userComplete","complete","userError","config","workerId","download","readable","read","on","File","stream","unparse","delimiter","BAD_DELIMITERS","quotes","skipEmptyLines","newline","quoteChar","escapeChar","RegExp","u","fields","charAt","RECORD_SEP","fromCharCode","UNIT_SEP","BYTE_ORDER_MARK","NODE_STREAM_INPUT","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","jQuery","fn","each","prop","attr","FileReader","files","file","inputElem","instanceConfig","extend","before","reason","_handle","_finished","_completed","_halted","_input","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","E","chunkSize","streamer","_config","parseChunk","beforeFirstChunk","paused","aborted","cursor","preview","results","WORKER_ID","finished","_sendError","_readChunk","_chunkLoaded","XMLHttpRequest","withCredentials","onload","onerror","_chunkError","open","downloadRequestBody","downloadRequestHeaders","setRequestHeader","send","message","status","readyState","responseText","getResponseHeader","lastIndexOf","statusText","webkitSlice","mozSlice","FileReaderSync","readAsText","encoding","target","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","removeListener","abort","transformHeader","code","comments","successful","bestDelimiter","delimitersToGuess","getCharIndex","setTimeout","O","D","I","T","A","L","F","fastMode","M","R","S","nextDelim","quoteSearch","linebreak","truncated","terminate","create","toJcamp","getJSGraph","analysisOptions","fromOptions","jcamps","jsGraphOptions","colors","axes","unitWrapperBefore","unitWrapperAfter","flipped","display","text","weight","temperature","section","inMethodSteps","description","parsePerkinElmer","parsed","Papa","Time"],"mappings":"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"}