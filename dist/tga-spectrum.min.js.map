{"version":3,"file":"tga-spectrum.min.js","sources":["../node_modules/common-spectrum/node_modules/is-any-array/src/index.js","../node_modules/is-any-array/src/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/ml-spectra-processing/src/x/xAdd.js","../node_modules/ml-spectra-processing/src/x/xMultiply.js","../node_modules/ml-spectra-processing/src/x/xDivide.js","../node_modules/ml-spectra-processing/src/x/xIsMonotone.js","../node_modules/object-keys/isArguments.js","../node_modules/object-keys/implementation.js","../node_modules/object-keys/index.js","../node_modules/utils-copy/lib/typedarrays.js","../node_modules/utils-copy-error/lib/copy.js","../node_modules/d3-array/build/d3-array.js","../node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/ml-array-normed/node_modules/is-any-array/src/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-filter-x/src/index.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/views/base.js","../node_modules/ml-matrix/src/views/transpose.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/ml-pad-array/src/index.js","../node_modules/ml-savitzky-golay/src/index.js","../node_modules/ml-stat/array.js","../node_modules/common-spectrum/src/Analysis.js","../node_modules/common-spectrum/src/util/getNormalizedData.js","../node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/jcampconverter/src/2d/add2D.js","../node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/ml-fft/src/fftlib.js","../node_modules/ml-stat/matrix.js","../node_modules/ml-matrix-convolution/node_modules/ml-fft/src/fftlib.js","../node_modules/nmr-processing/src/constants/gyromagneticRatio.js","../node_modules/jcampconverter/src/profiling.js","../node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/jcampconverter/src/postProcessing.js","../node_modules/jcampconverter/src/postProcessingNMR.js","../node_modules/jcampconverter/src/prepareNtuplesDatatable.js","../node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/jcampconverter/src/convert.js","../node_modules/common-spectrum/src/jsgraph/addStyle.js","../node_modules/common-spectrum/src/jsgraph/colors.js","../node_modules/convert-to-jcamp/src/fromVariables.js","../node_modules/convert-to-jcamp/src/fromJSON.js","../node_modules/convert-to-jcamp/src/creatorNtuples.js","../node_modules/common-spectrum/src/to/toJcamp.js","../src/from/parsePerkinElmer.js","../node_modules/papaparse/papaparse.min.js","../src/from/parseTAInstruments.js","../node_modules/common-spectrum/src/AnalysesManager.js","../node_modules/common-spectrum/src/from/fromJcamp.js","../src/from/fromPerkinElmer.js","../src/from/fromPerkinElmerCSV.js","../src/from/fromTAInstruments.js","../node_modules/common-spectrum/src/jsgraph/getJSGraph.js","../node_modules/common-spectrum/src/jsgraph/getNormalizationAnnotations.js"],"sourcesContent":["const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","/**\n\n/**\n * This function xAdd the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xAdd(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n\n/**\n * This function xMultiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Float64Array}\n */\nexport function xMultiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Float64Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array<Number>|Number} array2\n * @return {Array}\n */\nexport function xDivide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n * Returns true if x is monotone\n * @param {Array} array\n * @return {boolean}\n */\nexport function xIsMonotone(array) {\n  if (array.length < 3) return true;\n  if (array[0] < array[1]) {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] >= array[i + 1]) return false;\n    }\n  } else {\n    for (let i = 0; i < array.length - 1; i++) {\n      if (array[i] <= array[i + 1]) return false;\n    }\n  }\n  return true;\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\n// MODULES //\n\nvar objectKeys = require( 'object-keys' );\n\n\n// TYPED ARRAY FUNCTIONS //\n\n/**\n* Create functions for copying typed arrays.\n*/\nvar typedArrays = {\n\t'Int8Array': null,\n\t'Uint8Array': null,\n\t'Uint8ClampedArray': null,\n\t'Int16Array': null,\n\t'Uint16Array': null,\n\t'Int32Array': null,\n\t'Uint32Array': null,\n\t'Float32Array': null,\n\t'Float64Array': null\n};\n\n(function createTypedArrayFcns() {\n\t/* jshint evil:true */\n\tvar keys = objectKeys( typedArrays );\n\tvar len = keys.length;\n\tvar key;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tkey = keys[ i ];\n\t\ttypedArrays[ key ] = new Function( 'arr', 'return new '+key+'( arr );' );\n\t}\n})();\n\n\n// EXPORTS //\n\nmodule.exports = typedArrays;\n","'use strict';\n\n// MODULES //\n\nvar deepCopy = require( 'utils-copy' );\nvar getKeys = require( 'object-keys' ).shim();\n\n\n// COPY ERROR //\n\n/**\n* FUNCTION: copy( error )\n*\tCopies an error.\n*\n* @param {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error - error to copy\n* @returns {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error copy\n*/\nfunction copy( error ) {\n\t/* jshint newcap:false */\n\tvar keys;\n\tvar desc;\n\tvar key;\n\tvar err;\n\tvar i;\n\tif ( !( error instanceof Error ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an error object. Value: `' + error + '`.' );\n\t}\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = getKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = Object.getOwnPropertyDescriptor( error, key );\n\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\tdesc.value = deepCopy( error[ key ] );\n\t\t}\n\t\tObject.defineProperty( err, key, desc );\n\t}\n\treturn err;\n} // end FUNCTION copy()\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xSubtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @param {number} [options.maxValue=1] new max value for algo max\n * @param {number} [options.sumValue=1] new max value for algo absolute and sum\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","export function inspectMatrix() {\n  const indent = ' '.repeat(2);\n  const indentData = ' '.repeat(4);\n  return `${this.constructor.name} {\n${indent}[\n${indentData}${inspectData(this, indentData)}\n${indent}]\n${indent}rows: ${this.rows}\n${indent}columns: ${this.columns}\n}`;\n}\n\nconst maxRows = 15;\nconst maxColumns = 10;\nconst maxNumSize = 8;\n\nfunction inspectData(matrix, indent) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j)));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indent}`);\n}\n\nfunction formatNumber(num) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.substring(eIndex);\n  return exponential.substring(0, maxNumSize - e.length) + e;\n}\n","import rescale from 'ml-array-rescale';\n\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport { inspectMatrix } from './inspect';\nimport { installMathOperations } from './mathOperations';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","'use strict';\n\nvar defaultOptions = {\n  size: 1,\n  value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n  var len = data.length;\n  if (typeof options.size === 'number') {\n    options.size = [options.size, options.size];\n  }\n\n  var cond = len + options.size[0] + options.size[1];\n\n  var output;\n  if (options.output) {\n    if (options.output.length !== cond) {\n      throw new RangeError('Wrong output size');\n    }\n    output = options.output;\n  } else {\n    output = new Array(cond);\n  }\n\n  var i;\n  if (options.value === 'circular') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) {\n        output[i] = data[(len - (options.size[0] % len) + i) % len];\n      } else if (i < options.size[0] + len) {\n        output[i] = data[i - options.size[0]];\n      } else {\n        output[i] = data[(i - options.size[0]) % len];\n      }\n    }\n  } else if (options.value === 'replicate') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[0];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[len - 1];\n    }\n  } else if (options.value === 'symmetric') {\n    if (options.size[0] > len || options.size[1] > len) {\n      throw new RangeError(\n        'expanded value should not be bigger than the data length'\n      );\n    }\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[options.size[0] - 1 - i];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[2 * len + options.size[0] - i - 1];\n    }\n  } else {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = options.value;\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = options.value;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n  // var row = data.length;\n  // var col = data[0].length;\n  if (options.size[0] === undefined) {\n    options.size = [options.size, options.size, options.size, options.size];\n  }\n  throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray(data, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (Array.isArray(data)) {\n    if (Array.isArray(data[0])) return matrixCase(data, options);\n    else return arrayCase(data, options);\n  } else {\n    throw new TypeError('data should be an array');\n  }\n}\n\nmodule.exports = padArray;\n","import { Matrix, MatrixTransposeView, inverse } from 'ml-matrix';\nimport padArray from 'ml-pad-array';\n\n/**\n * Factorial of a number\n * @ignore\n * @param n\n * @return {number}\n */\nfunction factorial(n) {\n  let r = 1;\n  while (n > 0) r *= n--;\n  return r;\n}\n\nconst defaultOptions = {\n  windowSize: 5,\n  derivative: 1,\n  polynomial: 2,\n  pad: 'none',\n  padValue: 'replicate',\n};\n\n/**\n * Savitzky-Golay filter\n * @param {Array <number>} data\n * @param {number} h\n * @param {Object} options\n * @returns {Array}\n */\nexport default function savitzkyGolay(data, h, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (\n    options.windowSize % 2 === 0 ||\n    options.windowSize < 5 ||\n    !Number.isInteger(options.windowSize)\n  ) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (options.derivative < 0 || !Number.isInteger(options.derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (options.polynomial < 1 || !Number.isInteger(options.polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n\n  let C, norm;\n  let step = Math.floor(options.windowSize / 2);\n\n  if (options.pad === 'pre') {\n    data = padArray(data, { size: step, value: options.padValue });\n  }\n\n  let ans = new Array(data.length - 2 * step);\n\n  if (\n    options.windowSize === 5 &&\n    options.polynomial === 2 &&\n    (options.derivative === 1 || options.derivative === 2)\n  ) {\n    if (options.derivative === 1) {\n      C = [-2, -1, 0, 1, 2];\n      norm = 10;\n    } else {\n      C = [2, -1, -2, -1, 2];\n      norm = 7;\n    }\n  } else {\n    let J = Matrix.ones(options.windowSize, options.polynomial + 1);\n    let inic = -(options.windowSize - 1) / 2;\n    for (let i = 0; i < J.rows; i++) {\n      for (let j = 0; j < J.columns; j++) {\n        if (inic + 1 !== 0 || j !== 0) J.set(i, j, Math.pow(inic + i, j));\n      }\n    }\n    let Jtranspose = new MatrixTransposeView(J);\n    let Jinv = inverse(Jtranspose.mmul(J));\n    C = Jinv.mmul(Jtranspose);\n    C = C.getRow(options.derivative);\n    norm = 1 / factorial(options.derivative);\n  }\n  let det = norm * Math.pow(h, options.derivative);\n  for (let k = step; k < data.length - step; k++) {\n    let d = 0;\n    for (let l = 0; l < C.length; l++) d += (C[l] * data[l + k - step]) / det;\n    ans[k - step] = d;\n  }\n\n  if (options.pad === 'post') {\n    ans = padArray(ans, { size: step, value: options.padValue });\n  }\n\n  return ans;\n}\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","import isAnyArray from 'is-any-array';\nimport min from 'ml-array-min';\nimport max from 'ml-array-max';\nimport { xIsMonotone } from 'ml-spectra-processing';\nimport { getNormalizedData } from './util/getNormalizedData';\n/**\n * Class allowing to store and manipulate an analysis.\n * An analysis may contain one or more spectra that are identified\n * by a 'flavor'\n * @class Analysis\n * @param {object} [options={}]\n * @param {string} [options.id=randomString] unique identifier\n * @param {string} [options.label=options.id] human redeable label\n */\nexport class Analysis {\n  constructor(options = {}) {\n    this.id = options.id || Math.random().toString(36).substring(2, 10);\n    this.label = options.label || this.id;\n    this.spectra = [];\n  }\n\n  /**\n   * Set a spectrum for a specific flavor\n   * @param {object} [variables]\n   * @param {object} [variables.x]\n   * @param {array} [variables.x.data]\n   * @param {array} [variables.x.units='x']\n   * @param {array} [variables.x.label='x']\n   * @param {object} [variables.y]\n   * @param {array} [variables.y.data]\n   * @param {array} [variables.y.units='y']\n   * @param {array} [variables.y.label='y']\n   * @param {object} [options={}]\n   * @param {string} [options.dataType='']\n   * @param {string} [options.title='']\n   * @param {object} [options.flavor={}]\n   *\n   */\n  pushSpectrum(variables, options = {}) {\n    this.spectra.push(standardizeData(variables, options));\n  }\n\n  /**\n   * Retrieve a Spectrum based on a flavor\n   * @param {object} [selector={}]\n   * @param {string} [selector.index]\n   * @param {string} [selector.flavor]\n   * @returns {Spectrum}\n   */\n  getSpectrum(selector = {}) {\n    let spectra = this.getSpectra(selector);\n    return spectra ? spectra[0] : undefined;\n  }\n\n  /**\n   * Retrieve a Spectrum based on a flavor\n   * @param {object} [selector={}]\n   * @param {string} [selector.index]\n   * @param {string} [selector.flavor]\n   * @returns {Spectrum}\n   */\n  getSpectra(selector = {}) {\n    const { index, flavor } = selector;\n    if (index !== undefined) {\n      return this.spectra[index] ? [this.spectra[index]] : undefined;\n    }\n    if (flavor === undefined || flavor === '') return this.spectra;\n    return this.spectra.filter((spectrum) => spectrum.flavor === flavor);\n  }\n\n  /**\n   * Return the data object for a specific flavor with possibly some\n   * normalization options\n   * @param {object} [options={}]\n   * @param {object} [options.selector]\n   * @param {string} [options.selector.index]\n   * @param {string} [options.selector.flavor]\n   * @param {object} [options.normalization]\n   *\n   */\n  getNormalizedData(options = {}) {\n    const { normalization, selector } = options;\n    const spectrum = this.getSpectrum(selector);\n    if (!spectrum) return undefined;\n    return getNormalizedData(spectrum, normalization);\n  }\n\n  getXLabel(selector) {\n    return this.getSpectrum(selector).variables.x.label;\n  }\n\n  getYLabel(selector) {\n    return this.getSpectrum(selector).variables.y.label;\n  }\n}\n\n/**\n * Internal function that ensure the order of x / y array\n * @param {DataXY} [variables]\n * @param {object} [options={}]\n * @return {Spectrum}\n */\nfunction standardizeData(variables, options = {}) {\n  let { meta = {}, dataType = '', title = '' } = options;\n\n  let xVariable = variables.x;\n  let yVariable = variables.y;\n  if (!xVariable || !yVariable) {\n    throw Error('A spectrum must contain at least x and y variables');\n  }\n  if (!isAnyArray(xVariable.data) || !isAnyArray(yVariable.data)) {\n    throw Error('x and y variables must contain an array data');\n  }\n\n  let x = xVariable.data;\n  let reverse = x && x.length > 1 && x[0] > x[x.length - 1];\n\n  for (let key in variables) {\n    let variable = variables[key];\n    if (reverse) variable.data = variable.data.reverse();\n    variable.label = variable.label || key;\n    variable.units =\n      variable.units || variable.label.replace(/^.*[([](.*)[)\\]].*$/, '$1');\n    variable.min = min(variable.data);\n    variable.max = max(variable.data);\n    if (key === 'x') {\n      variable.isMonotone = xIsMonotone(variable.data);\n    }\n  }\n\n  return {\n    variables,\n    title,\n    dataType,\n    meta,\n    flavor: `${yVariable.units} vs ${xVariable.units}`,\n  };\n}\n","import max from 'ml-array-max';\nimport normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport filterX from 'ml-array-xy-filter-x';\nimport savitzkyGolay from 'ml-savitzky-golay';\nimport { xDivide, xSubtract, xMultiply, xAdd } from 'ml-spectra-processing';\nimport Stat from 'ml-stat/array';\n/**\n *\n * @private\n * @param {object} spectrum\n * @param {object} [options={}]\n * @param {number} [options.from=spectrum.x[0]]\n * @param {number} [options.to=spectrum.x[spectrum.x.length-1]]\n * @param {number} [options.numberOfPoints]\n * @param {Array} [options.filters=[]] Array of object containing 'name' (centerMean, divideSD, normalize, rescale) and 'options'\n * @param {Array} [options.exclusions=[]]\n * @returns {DataXY}\n */\nexport function getNormalizedData(spectrum, options = {}) {\n  let data = {\n    x: spectrum.variables.x.data,\n    y: spectrum.variables.y.data,\n  };\n  let {\n    from = spectrum.variables.x.min,\n    to = spectrum.variables.x.max,\n    numberOfPoints,\n    filters = [],\n    exclusions = [],\n    processing = '',\n  } = options;\n  let { x, y } = filterX(data, { from, to });\n\n  switch (processing) {\n    case 'firstDerivative':\n      if (options.processing) {\n        y = savitzkyGolay(y, 1, {\n          derivative: 1,\n          polynomial: 2,\n          windowSize: 5,\n        });\n        x = x.slice(2, x.length - 2);\n      }\n      break;\n    case 'secondDerivative':\n      if (options.processing) {\n        y = savitzkyGolay(y, 1, {\n          derivative: 2,\n          polynomial: 2,\n          windowSize: 5,\n        });\n        x = x.slice(2, x.length - 2);\n      }\n      break;\n    default:\n  }\n\n  for (let filter of filters) {\n    let filterOptions = filter.options || {};\n    switch (filter.name.toLowerCase()) {\n      case 'centermean': {\n        let mean = Stat.mean(y);\n        y = xSubtract(y, mean);\n        break;\n      }\n      case 'dividebysd': {\n        let std = Stat.standardDeviation(y);\n        y = xDivide(y, std);\n        break;\n      }\n      case 'normalize': {\n        y = normed(y, {\n          sumValue: filterOptions.value ? Number(filterOptions.value) : 1,\n          algorithm: 'absolute',\n        });\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y, {\n          min: filterOptions.min ? Number(filterOptions.min) : 0,\n          max: filterOptions.max ? Number(filterOptions.max) : 1,\n        });\n        break;\n      }\n      case 'dividebymax': {\n        let maxValue = max(y);\n        y = xDivide(y, maxValue);\n        break;\n      }\n      case 'multiply': {\n        y = xMultiply(y, filterOptions.value ? Number(filterOptions.value) : 1);\n        break;\n      }\n      case 'add': {\n        y = xAdd(y, filterOptions.value ? Number(filterOptions.value) : 0);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n\n  if (!numberOfPoints) {\n    return filterX({ x, y }, { from, to, exclusions });\n  }\n\n  return equallySpaced({ x, y }, { from, to, numberOfPoints, exclusions });\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n","// source: https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n\nexport const gyromagneticRatio = {\n  '1H': 267.52218744e6,\n  '2H': 41.065e6,\n  '3H': 285.3508e6,\n  '3He': -203.789e6,\n  '7Li': 103.962e6,\n  '13C': 67.28284e6,\n  '14N': 19.331e6,\n  '15N': -27.116e6,\n  '17O': -36.264e6,\n  '19F': 251.662e6,\n  '23Na': 70.761e6,\n  '27Al': 69.763e6,\n  '29Si': -53.19e6,\n  '31P': 108.291e6,\n  '57Fe': 8.681e6,\n  '63Cu': 71.118e6,\n  '67Zn': 16.767e6,\n  '129Xe': -73.997e6,\n};\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n  let observeFrequency = 0;\n  let shiftOffsetVal = 0;\n\n  for (let entry of entriesFlat) {\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let unit = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          unit = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (unit !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let lowerCaseSymbol = symbol.toLowerCase();\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[lowerCaseSymbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[lowerCaseSymbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {text} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparator);\n      }\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        let parsedValue = Number.parseFloat(value);\n        if (!Number.isNaN(parsedValue)) value = parsedValue;\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","export function addStyle(serie, spectrum, options = {}) {\n  const { color = 'darkgrey' } = options;\n  serie.style = [\n    {\n      name: 'unselected',\n      style: {\n        line: {\n          color,\n          width: 1,\n          dash: 1,\n        },\n      },\n    },\n    {\n      name: 'selected',\n      style: {\n        line: {\n          color,\n          width: 3,\n          dash: 1,\n        },\n      },\n    },\n  ];\n  serie.name = spectrum.label || spectrum.id;\n}\n","export const COLORS = [\n  '#FFB300',\n  '#803E75',\n  '#FF6800',\n  '#A6BDD7',\n  '#C10020',\n  '#CEA262',\n  '#817066',\n  '#007D34',\n  '#F6768E',\n  '#00538A',\n  '#FF7A5C',\n  '#53377A',\n  '#FF8E00',\n  '#B32851',\n  '#F4C800',\n  '#7F180D',\n  '#93AA00',\n  '#593315',\n  '#F13A13',\n  '#232C16',\n];\n","import creatorNtuples from './creatorNtuples';\nimport { fromJSON } from './fromJSON';\n\n/**\n * Create a jcamp from variables\n * @param {Array<Variable} [variables={}] - object of variables\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {object} [options.meta = {}] - comments to add to the file\n * @param {object} [options.forceNtuples = false] - force the ntuples format even if there is only x and y variables\n */\nexport function fromVariables(variables = {}, options = {}) {\n  const { info, meta, forceNtuples } = options;\n\n  let jcampOptions = {\n    info,\n    meta,\n  };\n\n  let keys = Object.keys(variables).map((key) => key.toLowerCase());\n  if (\n    keys.length === 2 &&\n    keys.includes('x') &&\n    keys.includes('y') &&\n    !forceNtuples\n  ) {\n    let x = variables.x;\n    let xLabel = x.label || x.name || 'x';\n\n    jcampOptions.info.xUnits = xLabel.includes(variables.x.units)\n      ? xLabel\n      : `${xLabel} [${variables.x.units}]`;\n\n    let y = variables.y;\n    let yLabel = y.label || y.name || 'y';\n\n    jcampOptions.info.yUnits = yLabel.includes(variables.y.units)\n      ? yLabel\n      : `${yLabel} [${variables.y.units}]`;\n    return fromJSON({ x: variables.x.data, y: variables.y.data }, jcampOptions);\n  } else {\n    return creatorNtuples(variables, options);\n  }\n}\n","/**\n * Create a jcamp\n * @param {object} data - object of array\n * @param {object} [options={}] - metadata object\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {string} [options.info.xUnits = ''] - units for the x axis for variables===undefined\n * @param {string} [options.info.yUnits = ''] - units for the y axis for variables===undefined\n * @param {object} [options.meta = {}] - comments to add to the file\n\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, options = {}) {\n  const { meta = {}, info = {} } = options;\n\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    dataType = '',\n    xUnits = '',\n    yUnits = '',\n  } = info;\n  let firstX = Number.POSITIVE_INFINITY;\n  let lastX = Number.NEGATIVE_INFINITY;\n  let firstY = Number.POSITIVE_INFINITY;\n  let lastY = Number.NEGATIVE_INFINITY;\n  let points = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnits}\n##YUNITS=${yUnits}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key of Object.keys(meta)) {\n    header += `##$${key}=${meta[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import maxFct from 'ml-array-max';\nimport minFct from 'ml-array-min';\n\n/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} variables\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creatorNtuples(variables, options) {\n  const { meta = {}, info = {} } = options;\n\n  const { title = '', owner = '', origin = '', dataType = '' } = info;\n\n  const symbol = [];\n  const varName = [];\n  const varType = [];\n  const varDim = [];\n  const units = [];\n  const first = [];\n  const last = [];\n  const min = [];\n  const max = [];\n  const factor = [];\n\n  const keys = Object.keys(variables);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let variable = variables[key];\n\n    let name = variable.label && variable.label.replace(/ *\\[.*/, '');\n    let unit = variable.label && variable.label.replace(/.*\\[(.*)\\].*/, '$1');\n\n    symbol.push(variable.symbol || key);\n    varName.push(variable.name || name || key);\n    varDim.push(variables[key].data.length);\n    varType.push(i === 0 ? 'INDEPENDENT' : 'DEPENDENT');\n    units.push(variable.units || unit || '');\n    first.push(variables[key][0]);\n    last.push(variables[key][variables[key].length - 1]);\n    min.push(minFct(variables[key].data));\n    max.push(maxFct(variables[key].data));\n    factor.push(1);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=6.00\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\\n`;\n\n  for (const key of Object.keys(meta)) {\n    header += `##$${key}=${meta[key]}\\n`;\n  }\n\n  header += `##NTUPLES= ${dataType}\n##VAR_NAME=  ${varName.join()}\n##SYMBOL=    ${symbol.join()}\n##VAR_TYPE=  ${varType.join()}\n##VAR_DIM=   ${varDim.join()}\n##UNITS=     ${units.join()}\n##PAGE= N=1\\n`;\n\n  header += `##DATA TABLE= (${symbol.join('')}..${symbol.join('')}), PEAKS\\n`;\n\n  for (let i = 0; i < variables[keys[0]].data.length; i++) {\n    let point = [];\n    for (let key of keys) {\n      point.push(variables[key].data[i]);\n    }\n    header += `${point.join('\\t')}\\n`;\n  }\n\n  header += '##END';\n  return header;\n}\n","import { fromVariables } from 'convert-to-jcamp';\n\nexport function toJcamp(analysis, options = {}) {\n  let jcamps = [];\n  for (let spectrum of analysis.spectra) {\n    jcamps.push(getJcamp(spectrum, options));\n  }\n  return jcamps.join('\\n');\n}\n\nfunction getJcamp(spectrum, options) {\n  const { info = {}, meta = {} } = options;\n\n  let jcampOptions = {\n    options: {},\n    info: {\n      title: spectrum.title,\n      dataType: spectrum.dataType,\n      ...info,\n    },\n    meta: { ...spectrum.meta, ...meta },\n  };\n\n  return fromVariables(spectrum.variables, jcampOptions);\n}\n","export function parsePerkinElmer(text) {\n  let lines = text.split(/[\\r\\n]+/);\n  let result = { meta: {}, data: { time: [], weight: [], temperature: [] } };\n  let section = '';\n  let inMethodSteps = false;\n  for (let line of lines) {\n    if (inMethodSteps) {\n      if (line.startsWith('1) TGA')) {\n        inMethodSteps = false;\n      } else {\n        if (!result.meta['Method Steps']) result.meta['Method Steps'] = '';\n        result.meta['Method Steps'] += `${line.replace(/\\t/g, '  ')}\\n`;\n      }\n    } else if (line.match(/^[a-zA-Z -]+$/)) {\n      section = trim(line);\n    } else if (line.match(/.*:.*/)) {\n      let position = line.indexOf(':');\n      let description = line.substring(0, position);\n      let value = trim(line.substring(position + 1));\n      result.meta[(section ? `${section}_` : '') + description] = value;\n    } else if (line.match(/^[0-9\\t .]+$/)) {\n      let fields = line.replace(/^\\t/, '').split('\\t');\n      result.data.time.push(Number(fields[0] * 60));\n      result.data.weight.push(Number(fields[1]));\n      result.data.temperature.push(Number(fields[4]));\n    } else {\n      //  console.log('Problem: ', line);\n    }\n    if (line.startsWith('Method Steps:')) {\n      inMethodSteps = true;\n    }\n  }\n  return result;\n}\nfunction trim(string) {\n  return string.replace(/^[ \\t]*(.*?)[ \\t]*$/, '$1');\n}\n","/* @license\nPapa Parse\nv5.2.0\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=n&&/blob:/i.test((f.location||{}).protocol),a={},h=0,b={parse:function(e,t){var i=(t=t||{}).dynamicTyping||!1;U(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!U(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var r=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(i=f.URL||f.webkitURL||null,r=s.toString(),b.BLOB_URL||(b.BLOB_URL=i.createObjectURL(new Blob([\"(\",r,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var i,r;return t.onmessage=_,t.id=h++,a[t.id]=t}();return r.userStep=t.step,r.userChunk=t.chunk,r.userComplete=t.complete,r.userError=t.error,t.step=U(t.step),t.chunk=U(t.chunk),t.complete=U(t.complete),t.error=U(t.error),delete t.worker,void r.postMessage({input:e,config:t,workerId:r.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?n=t.download?new l(t):new p(t):!0===e.readable&&U(e.read)&&U(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",v=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines);\"string\"==typeof t.newline&&(v=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s)}();var o=new RegExp(q(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||h(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:h(e.data[0])),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function h(e){if(\"object\"!=typeof e)return[];var t=[];for(var i in e)t.push(i);return t}function u(e,t,i){var r=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=y(e[a],a);0<t.length&&(r+=v)}for(var o=0;o<t.length;o++){var h=n?e.length:t[o].length,u=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var d=[],l=0;l<h;l++){var c=s?e[l]:l;d.push(t[o][c])}u=\"\"===d.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!f&&(r+=m);var g=n&&s?e[p]:p;r+=y(t[o][g],p)}o<t.length-1&&(!i||0<h&&!f)&&(r+=v)}}return r}function y(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var i=e.toString().replace(o,a),r=\"boolean\"==typeof n&&n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1}(i,b.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1);return r?s+i+s:i}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=w,b.ParserHandle=i,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0!==h.length){var e,t,i,r,n=h[0];if(U(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(U(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){U(a)&&a(e,n.file,n.inputElem),u()},b.parse(n.file,n.instanceConfig)}else U(o.complete)&&o.complete()}function u(){h.splice(0,1),e()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=E(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&U(this._config.beforeFirstChunk)){var i=this._config.beforeFirstChunk(e);void 0!==i&&(e=i)}this.isFirstChunk=!1,this._halted=!1;var r=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(r,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=r.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(U(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!U(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){U(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var r;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),n||(r.onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)r.setRequestHeader(t,e[t])}if(this._config.chunkSize){var i=this._start+this._config.chunkSize-1;r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i)}try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:r.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){var t=r.statusText||e;this._sendError(new Error(t))}}function c(e){var r,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),u.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((r=new FileReader).onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)):r=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var i=r.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:i}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(r.error)}}function p(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=i.substring(0,t),i=i.substring(t)):(e=i,i=\"\"),this._finished=!i,this.parseChunk(e)}}}function g(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var a,o,h,r=Math.pow(2,53),n=-r,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)(e[-+]?\\d+)?\\s*$/,u=/(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,t=this,i=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(U(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;i+=e.data.length,m.preview&&i>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function v(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(c&&h&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),h=!1),m.skipEmptyLines)for(var e=0;e<c.data.length;e++)v(c.data[e])&&c.data.splice(e--,1);return _()&&function(){if(!c)return;function e(e){U(m.transformHeader)&&(e=m.transformHeader(e)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var i,r=m.header?{}:[];for(i=0;i<e.length;i++){var n=i,s=e[i];m.header&&(n=i>=l.length?\"__parsed_extra\":l[i]),m.transform&&(s=m.transform(s,n)),s=y(n,s),\"__parsed_extra\"===n?(r[n]=r[n]||[],r[n].push(s)):r[n]=s}return m.header&&(i>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+i,f+t):i<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+i,f+t)),r}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function y(e,t){return i=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[i]&&(m.dynamicTyping[i]=m.dynamicTypingFunction(i)),!0===(m.dynamicTyping[i]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<r)return!0}return!1}(t)?parseFloat(t):u.test(t)?new Date(t):\"\"===t?null:t):t;var i}function k(e,t,i,r){var n={type:e,code:t,message:i};void 0!==r&&(n.row=r),c.errors.push(n)}this.parse=function(e,t,i){var r=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var i=new RegExp(q(t)+\"([^]*?)\"+q(t),\"gm\"),r=(e=e.replace(i,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<r[0].length;if(1===r.length||s)return\"\\n\";for(var a=0,o=0;o<r.length;o++)\"\\n\"===r[o][0]&&a++;return a>=r.length/2?\"\\r\\n\":\"\\r\"}(e,r)),h=!1,m.delimiter)U(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,i,r,n){var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var u=0;u<n.length;u++){var f=n[u],d=0,l=0,c=0;o=void 0;for(var p=new w({comments:r,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(i&&v(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===h||h<l)&&1.99<l&&(a=d,s=f,h=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(h=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=E(m);return m.preview&&m.header&&s.preview++,a=e,o=new w(s),c=o.parse(a,t,i),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=U(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,U(m.complete)&&m.complete(c),a=\"\"}}function q(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function w(e){var O,D=(e=e||{}).delimiter,I=e.newline,T=e.comments,A=e.step,L=e.preview,F=e.fastMode,z=O=void 0===e.quoteChar?'\"':e.quoteChar;if(void 0!==e.escapeChar&&(z=e.escapeChar),(\"string\"!=typeof D||-1<b.BAD_DELIMITERS.indexOf(D))&&(D=\",\"),T===D)throw new Error(\"Comment character same as delimiter\");!0===T?T=\"#\":(\"string\"!=typeof T||-1<b.BAD_DELIMITERS.indexOf(T))&&(T=!1),\"\\n\"!==I&&\"\\r\"!==I&&\"\\r\\n\"!==I&&(I=\"\\n\");var M=0,j=!1;this.parse=function(a,t,i){if(\"string\"!=typeof a)throw new Error(\"Input must be a string\");var r=a.length,e=D.length,n=I.length,s=T.length,o=U(A),h=[],u=[],f=[],d=M=0;if(!a)return R();if(F||!1!==F&&-1===a.indexOf(O)){for(var l=a.split(I),c=0;c<l.length;c++){if(f=l[c],M+=f.length,c!==l.length-1)M+=I.length;else if(i)return R();if(!T||f.substring(0,s)!==T){if(o){if(h=[],b(f.split(D)),S(),j)return R()}else b(f.split(D));if(L&&L<=c)return h=h.slice(0,L),R(!0)}}return R()}for(var p=a.indexOf(D,M),g=a.indexOf(I,M),_=new RegExp(q(z)+q(O),\"g\"),m=a.indexOf(O,M);;)if(a[M]!==O)if(T&&0===f.length&&a.substring(M,M+s)===T){if(-1===g)return R();M=g+n,g=a.indexOf(I,M),p=a.indexOf(D,M)}else{if(-1!==p&&(p<g||-1===g)){if(!(p<m)){f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}var v=x(p,m,g);if(v&&void 0!==v.nextDelim){p=v.nextDelim,m=v.quoteSearch,f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}}if(-1===g)break;if(f.push(a.substring(M,g)),C(g+n),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0)}else for(m=M,M++;;){if(-1===(m=a.indexOf(O,m+1)))return i||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:M}),E();if(m===r-1)return E(a.substring(M,m).replace(_,O));if(O!==z||a[m+1]!==z){if(O===z||0===m||a[m-1]!==z){-1!==p&&p<m+1&&(p=a.indexOf(D,m+1)),-1!==g&&g<m+1&&(g=a.indexOf(I,m+1));var y=w(-1===g?p:Math.min(p,g));if(a[m+1+y]===D){f.push(a.substring(M,m).replace(_,O)),a[M=m+1+y+e]!==O&&(m=a.indexOf(O,M)),p=a.indexOf(D,M),g=a.indexOf(I,M);break}var k=w(g);if(a.substring(m+1+k,m+1+k+n)===I){if(f.push(a.substring(M,m).replace(_,O)),C(m+1+k+n),p=a.indexOf(D,M),m=a.indexOf(O,M),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:M}),m++}}else m++}return E();function b(e){h.push(e),d=M}function w(e){var t=0;if(-1!==e){var i=a.substring(m+1,e);i&&\"\"===i.trim()&&(t=i.length)}return t}function E(e){return i||(void 0===e&&(e=a.substring(M)),f.push(e),M=r,b(f),o&&S()),R()}function C(e){M=e,b(f),f=[],g=a.indexOf(I,M)}function R(e){return{data:h,errors:u,meta:{delimiter:D,linebreak:I,aborted:j,truncated:!!e,cursor:d+(t||0)}}}function S(){A(R()),h=[],u=[]}function x(e,t,i){var r={nextDelim:void 0,quoteSearch:void 0},n=a.indexOf(O,t+1);if(t<e&&e<n&&(n<i||-1===i)){var s=a.indexOf(D,n);if(-1===s)return r;n<s&&(n=a.indexOf(O,n+1)),r=x(s,n,i)}else r={nextDelim:e,quoteSearch:t};return r}},this.abort=function(){j=!0},this.getCharIndex=function(){return M}}function _(e){var t=e.data,i=a[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:v,resume:v};if(U(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else U(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&m(t.workerId,t.results)}function m(e,t){var i=a[e];U(i.userComplete)&&i.userComplete(t),i.terminate(),delete a[e]}function v(){throw new Error(\"Not implemented.\")}function E(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var i in e)t[i]=E(e[i]);return t}function y(e,t){return function(){e.apply(t,arguments)}}function U(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var i=b.parse(t.input,t.config);i&&f.postMessage({workerId:b.WORKER_ID,results:i,finished:!0})}}),(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(u.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(u.prototype)).constructor=g,b});","export function parseTAInstruments(text) {\n  let lines = text.split(/\\r?\\n/).filter((line) => !line.match(/^\\s*$/));\n\n  let meta = parseMeta(lines);\n  let parsed = lines\n    .slice(meta.dataStart, lines.length)\n    .filter((line) => !line.startsWith('-'))\n    .map((line) => line.split(/\\s+/).map(Number));\n\n  meta.balancePurgeFlow = [];\n  meta.samplePurgeFlow = [];\n  // We now assume that we always have 5 columns in the same order ...\n  let result = {\n    meta: meta,\n    data: {\n      time: [],\n      weight: [],\n      temperature: [],\n    },\n  };\n  result.data.time = parsed.map((fields) => fields[0]);\n  result.data.temperature = parsed.map((fields) => fields[1]);\n  result.data.weight = parsed.map((fields) => fields[2]);\n  result.meta.balancePurgeFlow = parsed.map((fields) => fields[3]);\n  result.meta.samplePurgeFlow = parsed.map((fields) => fields[4]);\n\n  return result;\n}\n\nfunction splitTrim(string, item = 1) {\n  return string.split(/\\t/)[item].replace(/^[ \\t]*(.*?)[ \\t]*$/, '$1');\n}\n\nfunction parseMeta(lines) {\n  let meta = { comments: [], methodSteps: [] };\n  for (let [i, line] of lines.entries()) {\n    if (line.match(/^Instrument/)) {\n      meta.instrument = splitTrim(line);\n    } else if (line.match(/^InstSerial/)) {\n      meta.instrumentSerial = splitTrim(line);\n    } else if (line.match(/^Sample/)) {\n      meta.sampleName = splitTrim(line);\n    } else if (line.match(/^Size/)) {\n      meta.weight = parseFloat(splitTrim(line));\n      meta.weightUnit = splitTrim(line, 2);\n    } else if (line.match(/^Xcomment|^Comment/)) {\n      meta.comments.push(splitTrim(line));\n    } else if (line.match(/^Method/)) {\n      meta.method = splitTrim(line);\n    } else if (line.match(/^Mode/)) {\n      meta.mode = splitTrim(line);\n    } else if (line.match(/^File/)) {\n      meta.file = splitTrim(line);\n    } else if (line.match(/^Date/)) {\n      meta.date = splitTrim(line);\n    } else if (line.match(/^Time/)) {\n      meta.time = splitTrim(line);\n    } else if (line.match(/^OrgMethod/)) {\n      meta.methodSteps.push(splitTrim(line));\n    } else if (line.match(/^Controls/)) {\n      meta.controls = splitTrim(line);\n    } else if (line.match(/^FurnaceType/)) {\n      meta.furnaceType = splitTrim(line);\n    } else if (line.match(/^Operator/)) {\n      meta.operator = splitTrim(line);\n    } else if (line.match(/^RunSerial/)) {\n      meta.runSerial = splitTrim(line);\n    } else if (line.match(/^ProcName/)) {\n      meta.procName = splitTrim(line);\n    } else if (line.match(/^StartOfData/)) {\n      meta.dataStart = i + 1;\n      break;\n    }\n  }\n\n  return meta;\n}\n","export class AnalysesManager {\n  constructor() {\n    this.analyses = [];\n  }\n\n  addAnalysis(analysis) {\n    let index = this.getAnalysisIndex(analysis.id);\n    if (index === undefined) {\n      this.analyses.push(analysis);\n    } else {\n      this.analyses[index] = analysis;\n    }\n  }\n\n  getAnalyses(options = {}) {\n    const { ids } = options;\n    let analyses = [];\n    for (const analysis of this.analyses) {\n      if (!ids || ids.includes(analysis.id)) {\n        analyses.push(analysis);\n      }\n    }\n    return analyses;\n  }\n\n  /**\n   * Remove the analysis from the AnalysesManager for the specified id\n   * @param {string} id\n   */\n  removeAnalysis(id) {\n    let index = this.getAnalysisIndex(id);\n    if (index === undefined) return undefined;\n    return this.analyses.splice(index, 1);\n  }\n\n  /**\n   * Returns the index of the analysis in the analyses array\n   * @param {string} id\n   * @returns {number}\n   */\n  getAnalysisIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.analyses.length; i++) {\n      let analysis = this.analyses[i];\n      if (analysis.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Checks if the ID of an analysis exists in the AnalysesManager\n   * @param {string} id\n   */\n  includes(id) {\n    return !isNaN(this.getAnalysisIndex(id));\n  }\n}\n","import { convert } from 'jcampconverter';\n\nimport { Analysis } from '../Analysis';\n\n/**\n * Creates a new Analysis from a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {object} [options.id=Math.random()]\n * @param {string} [options.label=options.id] human redeable label\n * @return {Analysis} - New class element with the given data\n */\nexport function fromJcamp(jcamp, options = {}) {\n  let analysis = new Analysis(options);\n  addJcamp(analysis, jcamp, options);\n  return analysis;\n}\n\nfunction addJcamp(analysis, jcamp) {\n  let converted = convert(jcamp, {\n    keepRecordsRegExp: /.*/,\n  });\n\n  for (let entry of converted.flatten) {\n    let currentSpectrum = entry.spectra[0];\n\n    // we ensure variables\n    if (!currentSpectrum.variables) {\n      const variables = {};\n      currentSpectrum.variables = variables;\n      variables.x = {\n        label: currentSpectrum.xUnits,\n        symbol: 'X',\n        data: currentSpectrum.data.x || currentSpectrum.data.X,\n      };\n      variables.y = {\n        label: currentSpectrum.yUnits,\n        symbol: 'Y',\n        data: currentSpectrum.data.y || currentSpectrum.data.Y,\n      };\n    } else {\n      for (let key in currentSpectrum.variables) {\n        const variable = currentSpectrum.variables[key];\n        if (variable.label) continue;\n        variable.label = variable.name || variable.symbol || key;\n        if (variable.units && !variable.label.includes(variable.units)) {\n          variable.label += ` [${variable.units}]`;\n        }\n      }\n    }\n\n    analysis.pushSpectrum(currentSpectrum.variables, {\n      dataType: entry.dataType,\n      title: entry.title,\n      meta: entry.meta,\n    });\n  }\n}\n","import { Analysis } from '..';\n\nimport { parsePerkinElmer } from './parsePerkinElmer';\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} text - String containing the JCAMP data\n * @return {Analysis} - New class element with the given data\n */\nexport function fromPerkinElmer(text) {\n  let analysis = new Analysis();\n  let spectrum = parsePerkinElmer(text);\n\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: spectrum.data.temperature,\n        label: 'Temperature [°C]',\n      },\n      y: {\n        data: spectrum.data.weight,\n        label: 'Weight [mg]',\n      },\n    },\n    {\n      dataType: 'TGA',\n      title: spectrum.meta['Sample ID'],\n      meta: spectrum.meta,\n    },\n  );\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: spectrum.data.time,\n        label: 'Time [s]',\n      },\n      y: {\n        data: spectrum.data.weight,\n        label: 'Weight [mg]',\n      },\n    },\n    {\n      dataType: 'TGA',\n      title: spectrum.meta['Sample ID'],\n      meta: spectrum.meta,\n    },\n  );\n  return analysis;\n}\n","import Papa from 'papaparse';\n\nimport { Analysis } from '..';\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} text - String containing the JCAMP data\n * @return {Analysis} - New class element with the given data\n */\nexport function fromPerkinElmerCSV(text) {\n  let parsed = Papa.parse(text, {\n    skipEmptyLines: true,\n    header: true,\n    dynamicTyping: true,\n  }).data;\n\n  let analysis = new Analysis();\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: parsed.map((d) => d['Program Temperature']),\n        label: 'Program temperature [°C]',\n      },\n      y: {\n        data: parsed.map((d) => d['Unsubtracted Weight']),\n        label: 'Weight [mg]',\n      },\n      t: {\n        data: parsed.map((d) => d['Sample Temperature']),\n        label: 'Sample temperature [°C]',\n      },\n    },\n    { dataType: 'TGA' },\n  );\n\n  analysis.pushSpectrum(\n    {\n      x: { data: parsed.map((d) => d.Time), label: 'Time [s]' },\n      y: {\n        data: parsed.map((d) => d['Unsubtracted Weight']),\n        label: 'Weight [mg]',\n      },\n    },\n    { dataType: 'TGA' },\n  );\n  return analysis;\n}\n","import { Analysis } from '..';\n\nimport { parseTAInstruments } from './parseTAInstruments';\n\nexport function fromTAInstruments(text) {\n  let analysis = new Analysis();\n  let parsed = parseTAInstruments(text);\n\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: parsed.data.temperature,\n        label: 'Program temperature [°C]',\n      },\n      y: {\n        data: parsed.data.weight,\n        label: 'Weight [mg]',\n      },\n    },\n    { dataType: 'TGA', title: parsed.meta.sampleName, meta: parsed.meta },\n  );\n\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: parsed.data.time,\n        label: 'Time [s]',\n      },\n      y: {\n        data: parsed.data.weight,\n        label: 'Weight [mg]',\n      },\n    },\n    {\n      dataType: 'TGA',\n      title: parsed.meta.sampleName,\n      meta: parsed.meta,\n    },\n  );\n\n  return analysis;\n}\n","import { addStyle } from './addStyle';\nimport { COLORS } from './colors';\n/**\n * Generate a jsgraph chart format from an array of Analysis\n * @param {Array<Analysis>} analyses\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by all\n * @param {Array} [options.colors] List of colors\n * @param {object} [options.selector={}]\n * @param {object} [options.normalization]\n */\nexport function getJSGraph(analyses, options = {}) {\n  const { colors = COLORS, selector, normalization } = options;\n  let series = [];\n\n  let xLabel = '';\n  let yLabel = '';\n\n  for (let i = 0; i < analyses.length; i++) {\n    const analysis = analyses[i];\n    let serie = {};\n    let currentData = analysis.getNormalizedData({\n      selector,\n      normalization,\n    });\n    if (!currentData) continue;\n    if (!xLabel) xLabel = analysis.getXLabel(selector);\n    if (!yLabel) yLabel = analysis.getYLabel(selector);\n    addStyle(serie, analysis, { color: colors[i] });\n    serie.data = currentData;\n    series.push(serie);\n  }\n  return {\n    axes: {\n      x: {\n        label: xLabel,\n        unit: '',\n        unitWrapperBefore: '',\n        unitWrapperAfter: '',\n        flipped: false,\n        display: true,\n      },\n      y: {\n        label: yLabel,\n        unit: '',\n        unitWrapperBefore: '',\n        unitWrapperAfter: '',\n        flipped: false,\n        display: true,\n      },\n    },\n    series,\n  };\n}\n","export function getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","min","input","isArray","TypeError","length","minValue","i","max","maxValue","a","d","e","f","g","h","j","c","b","_ref","module","exports","window","median","quickSelectMedian","slice","xAdd","array1","array2","constant","isConstant","Array","Error","Number","array3","xMultiply","Float64Array","xDivide","xIsMonotone","array","keysShim","toStr","value","str","isArgs","callee","keys","has","hasOwnProperty","require$$0","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","o","ctor","constructor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","k","isObject","isFunction","isArguments","isString","theKeys","skipProto","push","String","name","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","shim","args","arguments","typedArrays","key","objectKeys","len","Function","ascending","NaN","bisector","compare","x","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","number$1","variance","n","m","s","isNaN","deviation","v","Math","sqrt","extent","identity","range","start","stop","step","ceil","e10","e5","e2","ticks","count","tickStep","floor","step0","abs","step1","pow","log","LN10","error","sturges","values","LN2","number","quantile","p","transpose","matrix","row","version","bisect","descending","histogram","domain","threshold","data","xz","x0","x1","tz","shift","pop","bin","bins","_","thresholds","map","thresholdFreedmanDiaconis","sort","thresholdScott","thresholdSturges","mean","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","t","random","sum","zip","factory","xSubtract","sumValue","norm","output","options","undefined","_options$algorithm","algorithm","_options$sumValue","_options$maxValue","toLowerCase","absoluteSumValue","absoluteSum","currentMaxValue","factor","_i","sumFactor","_i2","concat","rescale","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","_typeof","obj","Symbol","iterator","sequentialFill","_options","_options$from","from","_options$to","to","_options$size","size","normalize","zones","NEGATIVE_INFINITY","POSITIVE_INFINITY","JSON","parse","stringify","zone","forEach","filter","currentZone","result","integral","slope","intercept","equallySpaced","arrayXY","y","xLength","reverse","variant","numberOfPoints","exclusions","exclusion","nextExclusion","invert","unitsPerPoint","reduce","previous","current","currentTotal","round","zonesWithPoints","xResult","yResult","zoneResult","processZone","halfStep","lastStep","previousX","MAX_VALUE","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","main","equallySpacedSlot","initialOriginalStep","lastOriginalStep","MIN_VALUE","sumAtMin","sumAtMax","add","equallySpacedSmooth","filterX","points","currentFrom","getZones","currentZoneIndex","newX","newY","position","checkRowIndex","index","outer","rows","checkColumnIndex","columns","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","some","r","checkColumnIndices","columnIndices","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","formatNumber","num","numStr","padEnd","precise","toPrecision","maxNumSize","exponential","toExponential","eIndex","indexOf","substring","AbstractMatrix","newRows","newColumns","newData","newMatrix","Matrix","column","set","fill","isInteger","interval","this","zeros","l","matrix1","matrix2","checkMatrix","get","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","iMax","swapRows","tmp","reducedEchelonForm","maxRow","pivot","repeat","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","row1","row2","temp","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","diag","type","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","r2","c2","embed","mat","cols","resultat","console","warn","blockMult","halfRows","parseInt","halfCols","subMatrix","sub","scaleRows","isFinite","scaleColumns","flipRows","middle","first","last","flipColumns","kroneckerProduct","q","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","checkIndices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","product","productByRow","productByColumn","productAll","unbiased","sum1","sum2","varianceByRow","varianceByColumn","varianceAll","standardDeviation","center","centerByRow","centerByColumn","centerAll","scale","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","divider","getScaleAll","scaleAll","for","indent","indentData","maxI","maxJ","line","join","inspectData","rand","randomInt","randInt","diagonal","eye","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","exp","expm1","fround","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","installMathOperations","BaseView","MatrixTransposeView","WrapperMatrix2D","LuDecomposition","LUcolj","kmax","lu","pivotVector","pivotSign","LU","isSingular","col","solve","X","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","ks","cs","sn","sp","spm1","epm1","sk","ek","Y","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","tol","ii","useSVD","leftHandSide","rightHandSide","defaultOptions","assign","matrixCase","cond","arrayCase","windowSize","derivative","polynomial","pad","padValue","savitzkyGolay","C","padArray","ans","J","ones","inic","Jtranspose","factorial","det","arithmeticMean","lnsum","means","samples","percent","alreadySorted","half","theMean","theVariance","averageDeviations","stdev","quart","q1","q2","q3","pooledVariance","vari","itemCount","itemArray","mean1","mean2","cov","s2","s3","dev","s4","weights","weightedVariance","weightedMean","z","w","inPlace","standardDev","Analysis","id","label","spectra","pushSpectrum","variables","meta","dataType","title","xVariable","yVariable","variable","units","replace","isMonotone","flavor","standardizeData","getSpectrum","selector","getSpectra","spectrum","getNormalizedData","normalization","filters","processing","filterOptions","Stat","normed","process","kind","getXLabel","getYLabel","GC_MS_FIELDS","complexChromatogram","chromatogram","times","series","ms","dimension","existingGCMSFields","convertMSFieldToLabel","pageValue","parseFloat","isMSField","canonicDataLabel","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","ascii","currentX","firstX","currentY","firstY","endLine","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","numberOfVariables","lines","split","trim","logs","parseXYZ","xFactor","parseXY","parseXYA","removeSymbolRegExp","isXYAdata","add2D","zData","minZ","maxZ","ySize","xSize","lastX","lastY","minX","maxX","minY","maxY","noise","getMedian","convertTo3DZ","noContour","contourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","pAx","pAy","pBx","pBy","lineZValue","nbSubSpectra","nbPovars","dx","y0","dy","iter","nbContourLevels","contourLevels","level","contourLevel","side","noiseMultiplier","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","generateContourLines","minMax","FFT","_n","_bitrev","_cstb","core","init","_initArray","_makeBitReversalTable","_makeCosSinTable","fft1d","re","im","fft","ifft1d","bt1d","fft2d","tre","tim","x2","y1","y2","ifft2d","inv","ik","wr","wi","xr","n4","Uint32Array","_paddingZero","n2","n8","n2p4","PI","dc","ds","apis","bt","ifft","Infinity","l1","l2","N","theSum","theProduct","medians","modes","skew","kurt","standardDeviations","standardErrors","sqrtN","scatter","divisor","scores","zScores","cor","standardize","jj","resultRow","sourceRow","weightSum","arrayStat","s1","weightedScatter","gyromagneticRatio","profiling","action","time","Date","now","simpleChromatogram","intensity","postProcessing","entriesFlat","observeFrequency","shiftOffsetVal","entry","ntuples","symbol","xUnits","toUpperCase","includes","nucleus","unit","pageSymbolIndex","pageSymbol","ratio0","ratio1","ratio","postProcessingNMR","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","xIndex","yIndex","firstVariable","secondVariable","charAt","lowerCaseSymbol","vardim","nbPoints","varname","yUnits","prepareSpectrum","ntuplesSeparator","Spectrum","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","addStyle","serie","color","style","width","dash","COLORS","fromVariables","info","forceNtuples","jcampOptions","xLabel","yLabel","owner","origin","header","fromJSON","varName","varType","varDim","minFct","maxFct","point","creatorNtuples","getJcamp","string","self","document","postMessage","test","location","protocol","dynamicTypingFunction","transform","worker","WORKERS_SUPPORTED","URL","webkitURL","BLOB_URL","createObjectURL","Blob","Worker","onmessage","userStep","userChunk","chunk","userComplete","complete","userError","config","workerId","download","readable","read","on","File","stream","unparse","delimiter","BAD_DELIMITERS","quotes","skipEmptyLines","newline","quoteChar","escapeChar","RegExp","u","fields","RECORD_SEP","fromCharCode","UNIT_SEP","BYTE_ORDER_MARK","NODE_STREAM_INPUT","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","jQuery","fn","each","prop","attr","FileReader","files","file","inputElem","instanceConfig","extend","before","reason","_handle","_finished","_completed","_halted","_input","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","E","chunkSize","streamer","_config","parseChunk","beforeFirstChunk","paused","aborted","cursor","preview","results","WORKER_ID","finished","_sendError","_readChunk","_chunkLoaded","XMLHttpRequest","withCredentials","onload","onerror","_chunkError","open","downloadRequestBody","downloadRequestHeaders","setRequestHeader","send","message","status","readyState","responseText","getResponseHeader","lastIndexOf","statusText","webkitSlice","mozSlice","FileReaderSync","readAsText","encoding","target","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","removeListener","abort","transformHeader","code","comments","successful","bestDelimiter","delimitersToGuess","getCharIndex","setTimeout","O","D","I","T","A","L","F","fastMode","M","R","S","nextDelim","quoteSearch","linebreak","truncated","terminate","create","parseTAInstruments","text","match","methodSteps","entries","instrument","splitTrim","instrumentSerial","sampleName","weight","weightUnit","method","mode","date","controls","furnaceType","operator","runSerial","procName","dataStart","parseMeta","parsed","startsWith","balancePurgeFlow","samplePurgeFlow","temperature","item","analyses","addAnalysis","analysis","getAnalysisIndex","getAnalyses","ids","removeAnalysis","jcamp","converted","tmpResult","children","parentsStack","ldrs","ldr","dataLabel","dataValue","infos","datatable","parentEntry","dataClass","xType","shiftOffsetNum","vartype","varform","yType","page","sampleDescription","parsedValue","flatten","convert","currentSpectrum","addJcamp","section","inMethodSteps","description","parsePerkinElmer","Papa","Time","colors","axes","unitWrapperBefore","unitWrapperAfter","flipped","display","boundary","annotations","ignore","strokeWidth","fillColor","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","jcamps"],"mappings":"yMAAA,MAAMA,EAAWC,OAAOC,UAAUF,SAEnB,SAASG,EAAWC,UAC1BJ,EAASK,KAAKD,GAAQE,SAAS,UCDxC,MAAMN,EAAWC,OAAOC,UAAUF,SAMlC,MAJA,SAAoBI,UACXJ,EAASK,KAAKD,GAAQE,SAAS,WCGxC,SAASC,EAAIC,OACNC,EAAQD,SACL,IAAIE,UAAU,6BAGD,IAAjBF,EAAMG,aACF,IAAID,UAAU,mCAGlBE,EAAWJ,EAAM,GAEZK,EAAI,EAAGA,EAAIL,EAAMG,OAAQE,IAC5BL,EAAMK,GAAKD,IAAUA,EAAWJ,EAAMK,WAGrCD,ECfT,SAASE,EAAIN,OACNC,EAAQD,SACL,IAAIE,UAAU,6BAGD,IAAjBF,EAAMG,aACF,IAAID,UAAU,mCAGlBK,EAAWP,EAAM,GAEZK,EAAI,EAAGA,EAAIL,EAAMG,OAAQE,IAC5BL,EAAMK,GAAKE,IAAUA,EAAWP,EAAMK,WAGrCE,8PCvBYC,EAAEC,OAAO,IAAIC,EAAE,EAAEC,EAAEF,EAAEN,OAAO,EAAES,OAAE,EAAOC,OAAE,EAAOR,OAAE,EAAOS,EAAEC,EAAEL,EAAEC,KAAO,IAAIA,GAAGD,EAAE,OAAOD,EAAEK,MAAMH,GAAGD,EAAE,EAAE,OAAOD,EAAEC,GAAGD,EAAEE,IAAIK,EAAEP,EAAEC,EAAEC,GAAGF,EAAEK,OAAgBL,EAATG,EAAEG,EAAEL,EAAEC,IAAQF,EAAEE,IAAIK,EAAEP,EAAEG,EAAED,GAAGF,EAAEC,GAAGD,EAAEE,IAAIK,EAAEP,EAAEC,EAAEC,GAAGF,EAAEG,GAAGH,EAAEC,IAAIM,EAAEP,EAAEG,EAAEF,GAAGM,EAAEP,EAAEG,EAAEF,EAAE,GAAGG,EAAEH,EAAE,EAAEL,EAAEM,IAAM,IAAIE,UAAUJ,EAAEC,GAAGD,EAAEI,OAAOR,UAAUI,EAAEJ,GAAGI,EAAEC,OAAOL,EAAEQ,EAAE,MAAMG,EAAEP,EAAEI,EAAER,GAAGW,EAAEP,EAAEC,EAAEL,GAAGA,GAAGS,IAAIJ,EAAEG,GAAGR,GAAGS,IAAIH,EAAEN,EAAE,QAAQW,EAAE,SAAWP,EAAEC,EAAEC,OAAOM,SAAYA,EAAK,CAACR,EAAEE,GAAGF,EAAEC,IAAID,EAAEC,GAAGO,EAAK,GAAGR,EAAEE,GAAGM,EAAK,GAAGA,GAAMF,EAAE,SAAWN,EAAEC,aAAaD,EAAEC,GAAG,IAAgCQ,EAAOC,QAAQD,UAAeV,EAAEY,OAAOC,OAAOb,QCS/iB,SAASa,EAAOrB,OACTC,EAAQD,SACL,IAAIE,UAAU,6BAGD,IAAjBF,EAAMG,aACF,IAAID,UAAU,kCAGfoB,EAAkBtB,EAAMuB,SCV1B,SAASC,EAAKC,EAAQC,OAEvBC,EADAC,GAAa,KAEbC,MAAM5B,QAAQyB,OACZD,EAAOtB,SAAWuB,EAAOvB,aACrB,IAAI2B,MAAM,yDAGlBF,GAAa,EACbD,EAAWI,OAAOL,OAGhBM,EAAS,IAAIH,MAAMJ,EAAOtB,WAC1ByB,MACG,IAAIvB,EAAI,EAAGA,EAAIoB,EAAOtB,OAAQE,IACjC2B,EAAO3B,GAAKoB,EAAOpB,GAAKsB,WAGrB,IAAItB,EAAI,EAAGA,EAAIoB,EAAOtB,OAAQE,IACjC2B,EAAO3B,GAAKoB,EAAOpB,GAAKqB,EAAOrB,UAI5B2B,ECvBF,SAASC,EAAUR,EAAQC,OAE5BC,EADAC,GAAa,KAEbC,MAAM5B,QAAQyB,OACZD,EAAOtB,SAAWuB,EAAOvB,aACrB,IAAI2B,MAAM,yDAGlBF,GAAa,EACbD,EAAWI,OAAOL,OAGhBM,EAAS,IAAIE,aAAaT,EAAOtB,WACjCyB,MACG,IAAIvB,EAAI,EAAGA,EAAIoB,EAAOtB,OAAQE,IACjC2B,EAAO3B,GAAKoB,EAAOpB,GAAKsB,WAGrB,IAAItB,EAAI,EAAGA,EAAIoB,EAAOtB,OAAQE,IACjC2B,EAAO3B,GAAKoB,EAAOpB,GAAKqB,EAAOrB,UAI5B2B,ECvBF,SAASG,EAAQV,EAAQC,OAE1BC,EADAC,GAAa,KAEbC,MAAM5B,QAAQyB,OACZD,EAAOtB,SAAWuB,EAAOvB,aACrB,IAAI2B,MAAM,yDAGlBF,GAAa,EACbD,EAAWI,OAAOL,OAGhBM,EAAS,IAAIH,MAAMJ,EAAOtB,WAC1ByB,MACG,IAAIvB,EAAI,EAAGA,EAAIoB,EAAOtB,OAAQE,IACjC2B,EAAO3B,GAAKoB,EAAOpB,GAAKsB,WAGrB,IAAItB,EAAI,EAAGA,EAAIoB,EAAOtB,OAAQE,IACjC2B,EAAO3B,GAAKoB,EAAOpB,GAAKqB,EAAOrB,UAI5B2B,EC1BF,SAASI,EAAYC,MACtBA,EAAMlC,OAAS,EAAG,OAAO,KACzBkC,EAAM,GAAKA,EAAM,QACd,IAAIhC,EAAI,EAAGA,EAAIgC,EAAMlC,OAAS,EAAGE,OAChCgC,EAAMhC,IAAMgC,EAAMhC,EAAI,GAAI,OAAO,WAGlC,IAAIA,EAAI,EAAGA,EAAIgC,EAAMlC,OAAS,EAAGE,OAChCgC,EAAMhC,IAAMgC,EAAMhC,EAAI,GAAI,OAAO,SAGlC,ECdT,ICAIiC,EDAAC,EAAQ9C,OAAOC,UAAUF,WAEZ,SAAqBgD,OACjCC,EAAMF,EAAM1C,KAAK2C,GACjBE,EAAiB,uBAARD,SACRC,IACJA,EAAiB,mBAARD,GACE,OAAVD,GACiB,iBAAVA,GACiB,iBAAjBA,EAAMrC,QACbqC,EAAMrC,QAAU,GACa,sBAA7BoC,EAAM1C,KAAK2C,EAAMG,SAEZD,GCZR,IAAKjD,OAAOmD,KAAM,KAEbC,EAAMpD,OAAOC,UAAUoD,eACvBP,EAAQ9C,OAAOC,UAAUF,SACzBkD,EAASK,EACTC,EAAevD,OAAOC,UAAUuD,qBAChCC,GAAkBF,EAAanD,KAAK,CAAEL,SAAU,MAAQ,YACxD2D,EAAkBH,EAAanD,MAAK,cAAgB,aACpDuD,EAAY,CACf,WACA,iBACA,UACA,iBACA,gBACA,uBACA,eAEGC,EAA6B,SAAUC,OACtCC,EAAOD,EAAEE,mBACND,GAAQA,EAAK7D,YAAc4D,GAE/BG,EAAe,CAClBC,mBAAmB,EACnBC,UAAU,EACVC,WAAW,EACXC,QAAQ,EACRC,eAAe,EACfC,SAAS,EACTC,cAAc,EACdC,aAAa,EACbC,wBAAwB,EACxBC,uBAAuB,EACvBC,cAAc,EACdC,aAAa,EACbC,cAAc,EACdC,cAAc,EACdC,SAAS,EACTC,aAAa,EACbC,YAAY,EACZC,UAAU,EACVC,UAAU,EACVC,OAAO,EACPC,kBAAkB,EAClBC,oBAAoB,EACpBC,SAAS,GAENC,EAA4B,cAET,oBAAX7D,cAAiC,MACvC,IAAI8D,KAAK9D,eAEPqC,EAAa,IAAMyB,IAAMrC,EAAIhD,KAAKuB,OAAQ8D,IAAoB,OAAd9D,OAAO8D,IAAoC,iBAAd9D,OAAO8D,OAEvF7B,EAA2BjC,OAAO8D,IACjC,MAAOxE,UACD,GAGR,MAAOA,UACD,SAGF,EAhBwB,GA8BhC4B,EAAW,SAAc1C,OACpBuF,EAAsB,OAAXvF,GAAqC,iBAAXA,EACrCwF,EAAoC,sBAAvB7C,EAAM1C,KAAKD,GACxByF,EAAc3C,EAAO9C,GACrB0F,EAAWH,GAAmC,oBAAvB5C,EAAM1C,KAAKD,GAClC2F,EAAU,OAETJ,IAAaC,IAAeC,QAC1B,IAAInF,UAAU,0CAGjBsF,EAAYrC,GAAmBiC,KAC/BE,GAAY1F,EAAOO,OAAS,IAAM0C,EAAIhD,KAAKD,EAAQ,OACjD,IAAIS,EAAI,EAAGA,EAAIT,EAAOO,SAAUE,EACpCkF,EAAQE,KAAKC,OAAOrF,OAIlBgF,GAAezF,EAAOO,OAAS,MAC7B,IAAIW,EAAI,EAAGA,EAAIlB,EAAOO,SAAUW,EACpCyE,EAAQE,KAAKC,OAAO5E,aAGhB,IAAI6E,KAAQ/F,EACV4F,GAAsB,cAATG,IAAyB9C,EAAIhD,KAAKD,EAAQ+F,IAC5DJ,EAAQE,KAAKC,OAAOC,OAKnBzC,UACC0C,EA3CqC,SAAUtC,MAE9B,oBAAXlC,SAA2B6D,SAC9B5B,EAA2BC,cAG3BD,EAA2BC,GACjC,MAAO5C,UACD,GAmCemF,CAAqCjG,GAElDsF,EAAI,EAAGA,EAAI9B,EAAUjD,SAAU+E,EACjCU,GAAoC,gBAAjBxC,EAAU8B,KAAyBrC,EAAIhD,KAAKD,EAAQwD,EAAU8B,KACtFK,EAAQE,KAAKrC,EAAU8B,WAInBK,GAGT,MAAiBjD,ECvHbf,EAAQM,MAAMnC,UAAU6B,MAGxBuE,EAAWrG,OAAOmD,KAClBN,EAAWwD,EAAW,SAAcxC,UAAYwC,EAASxC,IAAQP,EAEjEgD,EAAetG,OAAOmD,OAEjBoD,KAAO,WACXvG,OAAOmD,KACoB,eAEzBqD,EAAOxG,OAAOmD,KAAKsD,kBAChBD,GAAQA,EAAK9F,SAAW+F,UAAU/F,OAHZ,CAI5B,EAAG,KAEJV,OAAOmD,KAAO,SAAchD,UACvB8C,EAAO9C,GACHmG,EAAaxE,EAAM1B,KAAKD,IAEzBmG,EAAanG,KAItBH,OAAOmD,KAAON,SAER7C,OAAOmD,MAAQN,GAGvB,MAAiBA,ECnBb6D,GCPUpD,EAAyBiD,ODOrB,WACJ,gBACC,uBACO,gBACP,iBACC,gBACD,iBACC,kBACC,kBACA,QAGjB,eAIKI,EACA/F,EAHAuC,EAAOyD,EAAYF,GACnBG,EAAM1D,EAAKzC,WAGTE,EAAI,EAAGA,EAAIiG,EAAKjG,IACrB+F,EAAMxD,EAAMvC,GACZ8F,EAAaC,GAAQ,IAAIG,SAAU,MAAO,cAAcH,EAAI,YAR9D,qBEpBQ,SAAUjF,YAEPqF,EAAUhG,EAAGQ,UACbR,EAAIQ,GAAK,EAAIR,EAAIQ,EAAI,EAAIR,GAAKQ,EAAI,EAAIyF,aAGtCC,EAASC,OA0BWhG,SAzBJ,IAAnBgG,EAAQxG,SAyBeQ,EAzB6BgG,EAA9BA,EA0BnB,SAASlG,EAAGmG,UACVJ,EAAU7F,EAAEF,GAAImG,KA1BlB,CACLC,KAAM,SAASrG,EAAGoG,EAAGE,EAAIC,OACb,MAAND,IAAYA,EAAK,GACX,MAANC,IAAYA,EAAKvG,EAAEL,QAChB2G,EAAKC,GAAI,KACVC,EAAMF,EAAKC,IAAO,EAClBJ,EAAQnG,EAAEwG,GAAMJ,GAAK,EAAGE,EAAKE,EAAM,EAClCD,EAAKC,SAELF,GAETG,MAAO,SAASzG,EAAGoG,EAAGE,EAAIC,OACd,MAAND,IAAYA,EAAK,GACX,MAANC,IAAYA,EAAKvG,EAAEL,QAChB2G,EAAKC,GAAI,KACVC,EAAMF,EAAKC,IAAO,EAClBJ,EAAQnG,EAAEwG,GAAMJ,GAAK,EAAGG,EAAKC,EAC5BF,EAAKE,EAAM,SAEXF,QAWTI,EAAkBR,EAASF,GAC3BW,EAAcD,EAAgBD,MAC9BG,EAAaF,EAAgBL,cAMxBQ,EAAST,UACH,OAANA,EAAaH,KAAOG,WAGpBU,EAASjF,EAAO1B,OAGnBH,EACAC,EAHA8G,EAAIlF,EAAMlC,OACVqH,EAAI,EAGJC,EAAI,EACJpH,GAAK,EACLS,EAAI,KAEC,MAALH,SACON,EAAIkH,GACNG,MAAMlH,EAAI6G,EAAShF,EAAMhC,OAG5BoH,IAFAhH,EAAID,EAAIgH,IAEEhH,GADVgH,GAAK/G,IAAMK,iBAONT,EAAIkH,GACNG,MAAMlH,EAAI6G,EAAS1G,EAAE0B,EAAMhC,GAAIA,EAAGgC,OAGrCoF,IAFAhH,EAAID,EAAIgH,IAEEhH,GADVgH,GAAK/G,IAAMK,QAMbA,EAAI,EAAG,OAAO2G,GAAK3G,EAAI,YAGpB6G,EAAUtF,EAAO1B,OACpBiH,EAAIN,EAASjF,EAAO1B,UACjBiH,EAAIC,KAAKC,KAAKF,GAAKA,WAGnBG,EAAO1F,EAAO1B,OAGjBH,EACAQ,EACAD,EAJAV,GAAK,EACLkH,EAAIlF,EAAMlC,UAKL,MAALQ,EAAW,QACJN,EAAIkH,GAAG,GAAsB,OAAjBvG,EAAIqB,EAAMhC,KAAeW,GAAKA,EAAG,CAAER,EAAIO,EAAIC,eACvDX,EAAIkH,GAAyB,OAAjBvG,EAAIqB,EAAMhC,MACzBG,EAAIQ,IAAGR,EAAIQ,GACXD,EAAIC,IAAGD,EAAIC,QAId,QACMX,EAAIkH,GAAG,GAAmC,OAA9BvG,EAAIL,EAAE0B,EAAMhC,GAAIA,EAAGgC,KAAmBrB,GAAKA,EAAG,CAAER,EAAIO,EAAIC,eACpEX,EAAIkH,GAAsC,OAA9BvG,EAAIL,EAAE0B,EAAMhC,GAAIA,EAAGgC,MAClC7B,EAAIQ,IAAGR,EAAIQ,GACXD,EAAIC,IAAGD,EAAIC,UAIZ,CAACR,EAAGO,YAGJY,EAASiF,UACT,kBACEA,YAIFoB,EAASpB,UACTA,WAGAqB,EAAMC,EAAOC,EAAMC,GAC1BF,GAASA,EAAOC,GAAQA,EAAMC,GAAQb,EAAIrB,UAAU/F,QAAU,GAAKgI,EAAOD,EAAOA,EAAQ,EAAG,GAAKX,EAAI,EAAI,GAAKa,UAE1G/H,GAAK,EACLkH,EAAoD,EAAhDM,KAAKvH,IAAI,EAAGuH,KAAKQ,MAAMF,EAAOD,GAASE,IAC3CH,EAAQ,IAAIpG,MAAM0F,KAEblH,EAAIkH,GACXU,EAAM5H,GAAK6H,EAAQ7H,EAAI+H,SAGlBH,MAGLK,EAAMT,KAAKC,KAAK,IAChBS,EAAKV,KAAKC,KAAK,IACfU,EAAKX,KAAKC,KAAK,YACVW,EAAMP,EAAOC,EAAMO,OACtBN,EAAOO,EAAST,EAAOC,EAAMO,UAC1BT,EACLJ,KAAKQ,KAAKH,EAAQE,GAAQA,EAC1BP,KAAKe,MAAMT,EAAOC,GAAQA,EAAOA,EAAO,EACxCA,YAIKO,EAAST,EAAOC,EAAMO,OACzBG,EAAQhB,KAAKiB,IAAIX,EAAOD,GAASL,KAAKvH,IAAI,EAAGoI,GAC7CK,EAAQlB,KAAKmB,IAAI,GAAInB,KAAKe,MAAMf,KAAKoB,IAAIJ,GAAShB,KAAKqB,OACvDC,EAAQN,EAAQE,SAChBI,GAASb,EAAKS,GAAS,GAClBI,GAASZ,EAAIQ,GAAS,EACtBI,GAASX,IAAIO,GAAS,GACxBZ,EAAOD,GAASa,EAAQA,WAGxBK,EAAQC,UACRxB,KAAKQ,KAAKR,KAAKoB,IAAII,EAAOlJ,QAAU0H,KAAKyB,KAAO,WAGhDC,EAAO3C,UACNA,WAyED4C,EAASnH,EAAOoH,EAAG9I,MACjB,MAALA,IAAWA,EAAI0G,GACbE,EAAIlF,EAAMlC,YACXsJ,GAAKA,IAAM,GAAKlC,EAAI,EAAG,OAAQ5G,EAAE0B,EAAM,GAAI,EAAGA,MAC/CoH,GAAK,EAAG,OAAQ9I,EAAE0B,EAAMkF,EAAI,GAAIA,EAAI,EAAGlF,OACvCkF,EACA1G,GAAK0G,EAAI,GAAKkC,EACdpJ,EAAIwH,KAAKe,MAAM/H,GACfL,GAAKG,EAAE0B,EAAMhC,GAAIA,EAAGgC,UAEjB7B,IADEG,EAAE0B,EAAMhC,EAAI,GAAIA,EAAI,EAAGgC,GAChB7B,IAAMK,EAAIR,aAwFnBN,EAAIsC,EAAO1B,OAGdH,EACAQ,EAHAX,GAAK,EACLkH,EAAIlF,EAAMlC,UAIL,MAALQ,EAAW,QACJN,EAAIkH,GAAG,GAAsB,OAAjBvG,EAAIqB,EAAMhC,KAAeW,GAAKA,EAAG,CAAER,EAAIQ,eACnDX,EAAIkH,GAAyB,OAAjBvG,EAAIqB,EAAMhC,KAAeG,EAAIQ,IAAGR,EAAIQ,OAGtD,QACMX,EAAIkH,GAAG,GAAmC,OAA9BvG,EAAIL,EAAE0B,EAAMhC,GAAIA,EAAGgC,KAAmBrB,GAAKA,EAAG,CAAER,EAAIQ,eAChEX,EAAIkH,GAAsC,OAA9BvG,EAAIL,EAAE0B,EAAMhC,GAAIA,EAAGgC,KAAmB7B,EAAIQ,IAAGR,EAAIQ,UAGjER,WA8DAkJ,EAAUC,QACXpC,EAAIoC,EAAOxJ,QAAS,MAAO,OAC5B,IAAIE,GAAK,EAAGmH,EAAIzH,EAAI4J,EAAQxJ,GAASuJ,EAAY,IAAI7H,MAAM2F,KAAMnH,EAAImH,OACnE,IAAYD,EAARzG,GAAK,EAAM8I,EAAMF,EAAUrJ,GAAK,IAAIwB,MAAM0F,KAAMzG,EAAIyG,GAC3DqC,EAAI9I,GAAK6I,EAAO7I,GAAGT,UAGhBqJ,WAGAvJ,EAAOM,UACPA,EAAEN,OASXgB,EAAQ0I,QAFM,QAGd1I,EAAQ2I,OAAS3C,EACjBhG,EAAQgG,YAAcA,EACtBhG,EAAQiG,WAAaA,EACrBjG,EAAQqF,UAAYA,EACpBrF,EAAQuF,SAAWA,EACnBvF,EAAQ4I,oBA7YYvJ,EAAGQ,UACdA,EAAIR,GAAK,EAAIQ,EAAIR,EAAI,EAAIQ,GAAKR,EAAI,EAAIiG,KA6Y/CtF,EAAQwG,UAAYA,EACpBxG,EAAQ4G,OAASA,EACjB5G,EAAQ6I,yBAlRFxH,EAAQwF,EACRiC,EAASlC,EACTmC,EAAYd,WAEPY,EAAUG,OACb9J,EAEAuG,EADAW,EAAI4C,EAAKhK,OAETkJ,EAAS,IAAIxH,MAAM0F,OAGlBlH,EAAI,EAAGA,EAAIkH,IAAKlH,EACnBgJ,EAAOhJ,IAAMmC,EAAM2H,EAAK9J,GAAIA,EAAG8J,OAG7BC,EAAKH,EAAOZ,GACZgB,GAAMD,EAAG,GACTE,GAAMF,EAAG,GACTG,EAAKL,EAAUb,EAAQgB,EAAIC,GAG1BzI,MAAM5B,QAAQsK,KAAKA,EAAK9B,EAAM4B,EAAIC,GAAKC,QAGxC/C,EAAI+C,EAAGpK,WACNE,EAAI,EAAGA,EAAImH,IAAKnH,EAAGkK,EAAGlK,IAAMkK,EAAGlK,QAC7BkK,EAAG,IAAMF,GAAIE,EAAGC,UAAWhD,OAC3B+C,EAAG/C,EAAI,IAAM8C,GAAIC,EAAGE,QAASjD,MAGhCkD,EADAC,EAAO,IAAI9I,MAAM2F,EAAI,OAIpBnH,EAAI,EAAGA,GAAKmH,IAAKnH,GACpBqK,EAAMC,EAAKtK,GAAK,IACZgK,GAAKhK,EAAI,EAAIkK,EAAGlK,EAAI,GAAKgK,EAC7BK,EAAIJ,GAAKjK,EAAImH,EAAI+C,EAAGlK,GAAKiK,MAItBjK,EAAI,EAAGA,EAAIkH,IAAKlH,EAEfgK,IADJzD,EAAIyC,EAAOhJ,KACIuG,GAAK0D,GAClBK,EAAKxD,EAAYoD,EAAI3D,EAAG,EAAGY,IAAI/B,KAAK0E,EAAK9J,WAItCsK,SAGTX,EAAUxH,MAAQ,SAASoI,UAClB1E,UAAU/F,QAAUqC,EAAqB,mBAANoI,EAAmBA,EAAIjJ,GAAUiJ,GAAIZ,GAAaxH,GAG9FwH,EAAUC,OAAS,SAASW,UACnB1E,UAAU/F,QAAU8J,EAAsB,mBAANW,EAAmBA,EAAIjJ,EAAS,EAAEiJ,EAAE,IAAKA,EAAE,KAAMZ,GAAaC,GAG3GD,EAAUa,WAAa,SAASD,UACzB1E,UAAU/F,QACf+J,EAAyB,mBAANU,EAAmBA,EAChC/I,MAAM5B,QAAQ2K,GAAKjJ,EAASE,MAAMnC,UAAUoL,IAAIjL,KAAK+K,EAAGrB,IACxD5H,GAAUiJ,GACTZ,GAJuBE,GAOzBF,GAiNT7I,EAAQ4J,mCAjMkB1B,EAAQtJ,EAAKO,UACrC+I,EAAO2B,KAAKxE,GACLqB,KAAKQ,MAAM/H,EAAMP,IAAQ,GAAKyJ,EAASH,EAAQ,KAAQG,EAASH,EAAQ,MAASxB,KAAKmB,IAAIK,EAAOlJ,QAAS,EAAI,MAgMvHgB,EAAQ8J,wBA7LO5B,EAAQtJ,EAAKO,UACnBuH,KAAKQ,MAAM/H,EAAMP,IAAQ,IAAM4H,EAAU0B,GAAUxB,KAAKmB,IAAIK,EAAOlJ,QAAS,EAAI,MA6LzFgB,EAAQ+J,iBAAmB9B,EAC3BjI,EAAQb,aA3LK+B,EAAO1B,OAGdH,EACAQ,EAHAX,GAAK,EACLkH,EAAIlF,EAAMlC,UAIL,MAALQ,EAAW,QACJN,EAAIkH,GAAG,GAAsB,OAAjBvG,EAAIqB,EAAMhC,KAAeW,GAAKA,EAAG,CAAER,EAAIQ,eACnDX,EAAIkH,GAAyB,OAAjBvG,EAAIqB,EAAMhC,KAAeW,EAAIR,IAAGA,EAAIQ,OAGtD,QACMX,EAAIkH,GAAG,GAAmC,OAA9BvG,EAAIL,EAAE0B,EAAMhC,GAAIA,EAAGgC,KAAmBrB,GAAKA,EAAG,CAAER,EAAIQ,eAChEX,EAAIkH,GAAsC,OAA9BvG,EAAIL,EAAE0B,EAAMhC,GAAIA,EAAGgC,KAAmBrB,EAAIR,IAAGA,EAAIQ,UAGjER,GA4KTW,EAAQgK,cAzKM9I,EAAO1B,OAGfH,EAFAiH,EAAI,EACJF,EAAIlF,EAAMlC,OAEVE,GAAK,EACLS,EAAIyG,KAEC,MAAL5G,SACON,EAAIkH,GAAQG,MAAMlH,EAAI6G,EAAShF,EAAMhC,OAAqBS,EAAf2G,GAAKjH,cAIhDH,EAAIkH,GAAQG,MAAMlH,EAAI6G,EAAS1G,EAAE0B,EAAMhC,GAAIA,EAAGgC,OAAyBvB,EAAf2G,GAAKjH,KAGpEM,EAAG,OAAO2G,EAAI3G,GA2JpBK,EAAQE,gBAxJQgB,EAAO1B,OAGjBH,EAFA4K,EAAU,GACV7D,EAAIlF,EAAMlC,OAEVE,GAAK,KAEA,MAALM,SACON,EAAIkH,GAAQG,MAAMlH,EAAI6G,EAAShF,EAAMhC,MAAM+K,EAAQ3F,KAAKjF,eAIxDH,EAAIkH,GAAQG,MAAMlH,EAAI6G,EAAS1G,EAAE0B,EAAMhC,GAAIA,EAAGgC,MAAU+I,EAAQ3F,KAAKjF,UAGzEgJ,EAAS4B,EAAQJ,KAAKxE,GAAY,KA2I3CrF,EAAQkK,eAxIOC,WAET9D,EAGA+D,EACAlJ,EALAkF,EAAI+D,EAAOnL,OAEXE,GAAK,EACLS,EAAI,IAICT,EAAIkH,GAAGzG,GAAKwK,EAAOjL,GAAGF,WAC/BoL,EAAS,IAAI1J,MAAMf,KAEVyG,GAAK,OAEZC,GADAnF,EAAQiJ,EAAO/D,IACLpH,SACDqH,GAAK,GACZ+D,IAASzK,GAAKuB,EAAMmF,UAIjB+D,GAsHTpK,EAAQpB,IAAMA,EACdoB,EAAQqK,eAjGOnJ,WACThC,EAAI,EAAGkH,EAAIlF,EAAMlC,OAAS,EAAGsJ,EAAIpH,EAAM,GAAImJ,EAAQ,IAAI3J,MAAM0F,EAAI,EAAI,EAAIA,GACtElH,EAAIkH,GAAGiE,EAAMnL,GAAK,CAACoJ,EAAGA,EAAIpH,IAAQhC,WAClCmL,GA+FTrK,EAAQsK,iBA5FSpJ,EAAOqJ,WAClBrL,EAAIqL,EAAQvL,OAAQwL,EAAW,IAAI9J,MAAMxB,GACtCA,KAAKsL,EAAStL,GAAKgC,EAAMqJ,EAAQrL,WACjCsL,GA0FTxK,EAAQqI,SAAWA,EACnBrI,EAAQ8G,MAAQA,EAChB9G,EAAQyK,cAzFMvJ,EAAOsE,MACbY,EAAIlF,EAAMlC,YAEZoH,EAEAsE,EAHAxL,EAAI,EAEJS,EAAI,EAEJgL,EAAKzJ,EAAMvB,OAEV6F,IAASA,EAAUH,KAEfnG,EAAIkH,IAAOZ,EAAQkF,EAAKxJ,EAAMhC,GAAIyL,GAAM,GAAyB,IAApBnF,EAAQmF,EAAIA,MAAWA,EAAKD,EAAI/K,EAAIT,UAElE,IAApBsG,EAAQmF,EAAIA,GAAkBhL,WA8EpCK,EAAQ4K,iBA3ES1J,EAAO2J,EAAIC,WAEtBC,EACA7L,EAFAmH,GAAW,MAANyE,EAAa5J,EAAMlC,OAAS8L,IAAOD,EAAW,MAANA,EAAa,GAAKA,GAI5DxE,GACLnH,EAAIwH,KAAKsE,SAAW3E,IAAM,EAC1B0E,EAAI7J,EAAMmF,EAAIwE,GACd3J,EAAMmF,EAAIwE,GAAM3J,EAAMhC,EAAI2L,GAC1B3J,EAAMhC,EAAI2L,GAAME,SAGX7J,GAgETlB,EAAQiL,aA7DK/J,EAAO1B,OAGdH,EAFAiH,EAAI,EACJF,EAAIlF,EAAMlC,OAEVE,GAAK,KAEA,MAALM,SACON,EAAIkH,IAAO/G,GAAK6B,EAAMhC,MAAIoH,GAAKjH,eAI/BH,EAAIkH,IAAO/G,GAAKG,EAAE0B,EAAMhC,GAAIA,EAAGgC,MAAQoF,GAAKjH,UAGhDiH,GAgDTtG,EAAQsH,MAAQA,EAChBtH,EAAQwH,SAAWA,EACnBxH,EAAQuI,UAAYA,EACpBvI,EAAQmG,SAAWA,EACnBnG,EAAQkL,sBAlCC3C,EAAUxD,YA/a4CoG,CAAQnL,MCKlE,SAASoL,EAAU9K,EAAQC,OAE5BC,EADAC,GAAa,KAEbC,MAAM5B,QAAQyB,OACZD,EAAOtB,SAAWuB,EAAOvB,aACrB,IAAI2B,MAAM,yDAGlBF,GAAa,EACbD,EAAWI,OAAOL,OAGhBM,EAAS,IAAIH,MAAMJ,EAAOtB,WAC1ByB,MACG,IAAIvB,EAAI,EAAGA,EAAIoB,EAAOtB,OAAQE,IACjC2B,EAAO3B,GAAKoB,EAAOpB,GAAKsB,WAGrB,IAAItB,EAAI,EAAGA,EAAIoB,EAAOtB,OAAQE,IACjC2B,EAAO3B,GAAKoB,EAAOpB,GAAKqB,EAAOrB,UAI5B2B,EC7BT,MAAMxC,EAAWC,OAAOC,UAAUF,SAEnB,SAASG,EAAWC,UAC1BJ,EAASK,KAAKD,GAAQE,SAAS,UCKxC,SAASsM,EAAIpM,OACNC,EAAQD,SACL,IAAIE,UAAU,6BAGD,IAAjBF,EAAMG,aACF,IAAID,UAAU,mCAGlBsM,EAAW,EAENnM,EAAI,EAAGA,EAAIL,EAAMG,OAAQE,IAChCmM,GAAYxM,EAAMK,UAGbmM,ECRT,SAASC,EAAKzM,OAaR0M,EAZAC,EAAUzG,UAAU/F,OAAS,QAAsByM,IAAjB1G,UAAU,GAAmBA,UAAU,GAAK,GAC9E2G,EAAqBF,EAAQG,UAC7BA,OAAmC,IAAvBD,EAAgC,WAAaA,EACzDE,EAAoBJ,EAAQH,SAC5BA,OAAiC,IAAtBO,EAA+B,EAAIA,EAC9CC,EAAoBL,EAAQpM,SAC5BA,OAAiC,IAAtByM,EAA+B,EAAIA,MAE7C/M,EAAQD,SACL,IAAI8B,MAAM,kCAKK8K,IAAnBD,EAAQD,OAAsB,KAC3BzM,EAAQ0M,EAAQD,cACb,IAAIxM,UAAU,+CAGtBwM,EAASC,EAAQD,YAEjBA,EAAS,IAAI7K,MAAM7B,EAAMG,WAGN,IAAjBH,EAAMG,aACF,IAAI2B,MAAM,kCAGVgL,EAAUG,mBACX,eAEGC,EAAmBC,EAAYnN,GAASwM,KACnB,IAArBU,EAAwB,OAAOlN,EAAMuB,MAAM,OAE1C,IAAIlB,EAAI,EAAGA,EAAIL,EAAMG,OAAQE,IAChCqM,EAAOrM,GAAKL,EAAMK,GAAK6M,SAGlBR,MAGN,UAEGU,EAAkB9M,EAAIN,MACF,IAApBoN,EAAuB,OAAOpN,EAAMuB,MAAM,WAC1C8L,EAAS9M,EAAW6M,EAEfE,EAAK,EAAGA,EAAKtN,EAAMG,OAAQmN,IAClCZ,EAAOY,GAAMtN,EAAMsN,GAAMD,SAGpBX,MAGN,UAEGa,EAAYnB,EAAIpM,GAASwM,KACX,IAAde,EAAiB,OAAOvN,EAAMuB,MAAM,OAEnC,IAAIiM,EAAM,EAAGA,EAAMxN,EAAMG,OAAQqN,IACpCd,EAAOc,GAAOxN,EAAMwN,GAAOD,SAGtBb,gBAIH,IAAI5K,MAAM,4BAA4B2L,OAAOX,KAIzD,SAASK,EAAYnN,WACfwM,EAAW,EAENnM,EAAI,EAAGA,EAAIL,EAAMG,OAAQE,IAChCmM,GAAY3E,KAAKiB,IAAI9I,EAAMK,WAGtBmM,ECnFT,SAASkB,EAAQ1N,OASX0M,EARAC,EAAUzG,UAAU/F,OAAS,QAAsByM,IAAjB1G,UAAU,GAAmBA,UAAU,GAAK,OAE7EjG,EAAQD,SACL,IAAIE,UAAU,0BACf,GAAqB,IAAjBF,EAAMG,aACT,IAAID,UAAU,mCAKC0M,IAAnBD,EAAQD,OAAsB,KAC3BzM,EAAQ0M,EAAQD,cACb,IAAIxM,UAAU,+CAGtBwM,EAASC,EAAQD,YAEjBA,EAAS,IAAI7K,MAAM7B,EAAMG,YAGvBwN,EAAa5N,EAAIC,GACjB4N,EAAatN,EAAIN,MAEjB2N,IAAeC,QACX,IAAIC,WAAW,mFAGnBC,EAAenB,EAAQ5M,IACvBK,OAA4B,IAAjB0N,EAA0BnB,EAAQoB,WAAaJ,EAAa,EAAIG,EAC3EE,EAAerB,EAAQrM,IACvBC,OAA4B,IAAjByN,EAA0BrB,EAAQoB,WAAaH,EAAa,EAAII,KAE3E5N,GAAYG,QACR,IAAIsN,WAAW,sDAGnBR,GAAU9M,EAAWH,IAAawN,EAAaD,GAE1CtN,EAAI,EAAGA,EAAIL,EAAMG,OAAQE,IAChCqM,EAAOrM,IAAML,EAAMK,GAAKsN,GAAcN,EAASjN,SAG1CsM,ECpDT,SAASuB,EAAQC,UAEbD,EADoB,mBAAXE,QAAoD,iBAApBA,OAAOC,SACtC,SAAUF,iBACJA,GAGN,SAAUA,UACXA,GAAyB,mBAAXC,QAAyBD,EAAI1K,cAAgB2K,QAAUD,IAAQC,OAAOzO,UAAY,gBAAkBwO,IAI9GA,GAcjB,SAASG,QACHrO,EAAQkG,UAAU/F,OAAS,QAAsByM,IAAjB1G,UAAU,GAAmBA,UAAU,GAAK,GAC5EyG,EAAUzG,UAAU/F,OAAS,QAAsByM,IAAjB1G,UAAU,GAAmBA,UAAU,GAAK,MAE3D,WAAnB+H,EAAQjO,IAAwBC,EAAQD,KAC1C2M,EAAU3M,EACVA,EAAQ,KAGLC,EAAQD,SACL,IAAIE,UAAU,8BAGlBoO,EAAW3B,EACX4B,EAAgBD,EAASE,KACzBA,OAAyB,IAAlBD,EAA2B,EAAIA,EACtCE,EAAcH,EAASI,GACvBA,OAAqB,IAAhBD,EAAyB,GAAKA,EACnCE,EAAgBL,EAASM,KACzBA,OAAyB,IAAlBD,EAA2B3O,EAAMG,OAASwO,EACjDvG,EAAOkG,EAASlG,QAEhBwG,GAAQxG,QACJ,IAAItG,MAAM,wCAGb8M,IAEDA,EADExG,EACKP,KAAKe,OAAO8F,EAAKF,GAAQpG,GAAQ,EAEjCsG,EAAKF,EAAO,IAIlBpG,GAAQwG,IACXxG,GAAQsG,EAAKF,IAASI,EAAO,IAG3B/M,MAAM5B,QAAQD,GAAQ,CACxBA,EAAMG,OAAS,MAEV,IAAIE,EAAI,EAAGA,EAAIuO,EAAMvO,IACxBL,EAAMyF,KAAK+I,GACXA,GAAQpG,MAEL,IACDpI,EAAMG,SAAWyO,QACb,IAAI9M,MAAM,+DAGb,IAAIwL,EAAK,EAAGA,EAAKsB,EAAMtB,IAC1BtN,EAAMsN,GAAMkB,EACZA,GAAQpG,SAILpI,ECvEF,SAAS6O,EAAUC,EAAQ,GAAInC,EAAU,OACzB,IAAjBmC,EAAM3O,OAAc,MAAO,OAC3BqO,KACFA,EAAOzM,OAAOgN,kBADZL,GAEFA,EAAK3M,OAAOiN,mBACVrC,KACA6B,EAAOE,KAAKF,EAAME,GAAM,CAACA,EAAIF,KAKjCM,GAHAA,EAAQG,KAAKC,MAAMD,KAAKE,UAAUL,IAAQhE,IAAKsE,GAC7CA,EAAKZ,KAAOY,EAAKV,GAAK,CAAEF,KAAMY,EAAKV,GAAIA,GAAIU,EAAKZ,MAASY,IAE7CpE,KAAK,CAACxK,EAAGQ,IACjBR,EAAEgO,OAASxN,EAAEwN,KAAahO,EAAEgO,KAAOxN,EAAEwN,KAClChO,EAAEkO,GAAK1N,EAAE0N,KAGZW,QAASD,IACTZ,EAAOY,EAAKZ,OAAMY,EAAKZ,KAAOA,GAC9BE,EAAKU,EAAKV,KAAIU,EAAKV,GAAKA,KAIT,KADrBI,EAAQA,EAAMQ,OAAQF,GAASA,EAAKZ,MAAQY,EAAKV,KACvCvO,OAAc,MAAO,OAE3BoP,EAAcT,EAAM,GACpBU,EAAS,CAACD,OACT,IAAIlP,EAAI,EAAGA,EAAIyO,EAAM3O,OAAQE,IAAK,KACjC+O,EAAON,EAAMzO,GACb+O,EAAKZ,MAAQe,EAAYb,GAC3Ba,EAAYb,GAAKU,EAAKV,IAEtBa,EAAcH,EACdI,EAAO/J,KAAK8J,WAGTC,ECtCM,SAASC,EAASpF,EAAIC,EAAIoF,EAAOC,SAE5C,GAAMD,EAAQpF,EAAKA,EACnBqF,EAAYrF,GACX,GAAMoF,EAAQrF,EAAKA,EAAKsF,EAAYtF,GCqB1B,SAASuF,EAAcC,EAAU,GAAIlD,EAAU,QACxD/F,EAAEA,EAAFkJ,EAAKA,GAAMD,EACXE,EAAUnJ,EAAEzG,OACZ6P,GAAU,EACVpJ,EAAEzG,OAAS,GAAKyG,EAAE,GAAKA,EAAE,KAC3BA,EAAIA,EAAErF,QAAQyO,UACdF,EAAIA,EAAEvO,QAAQyO,UACdA,GAAU,OAGRxB,KACFA,EAAO5H,EAAE,GADP8H,GAEFA,EAAK9H,EAAEmJ,EAAU,GAFfE,QAGFA,EAAU,SAHRC,eAIFA,EAAiB,IAJfC,WAKFA,EAAa,GALXrB,MAMFA,EAAQ,IACNnC,KAEAoD,IAAYD,EAAE3P,aACV,IAAI0N,WAAW,qDAGH,iBAATW,GAAqB9G,MAAM8G,SAC9B,IAAIX,WAAW,qCAGL,iBAAPa,GAAmBhH,MAAMgH,SAC5B,IAAIb,WAAW,mCAGO,iBAAnBqC,GAA+BxI,MAAMwI,SACxC,IAAIrC,WAAW,+CAGnBqC,EAAiB,QACb,IAAIrC,WAAW,kDAGF,IAAjBiB,EAAM3O,SACR2O,EC9DG,SAAgBqB,EAAa,GAAIxD,EAAU,QAC5C6B,KACFA,EAAOzM,OAAOgN,kBADZL,GAEFA,EAAK3M,OAAOiN,mBACVrC,KACA6B,EAAOE,KAAKF,EAAME,GAAM,CAACA,EAAIF,IAGP,KAD1B2B,EAAatB,EAAUsB,EAAY,CAAE3B,KAAAA,EAAME,GAAAA,KAC5BvO,OAAc,MAAO,CAAC,CAAEqO,KAAAA,EAAME,GAAAA,QAEzCI,EAAQ,OACP,IAAIzO,EAAI,EAAGA,EAAI8P,EAAWhQ,OAAQE,IAAK,KACtC+P,EAAYD,EAAW9P,GACvBgQ,EAAgBF,EAAW9P,EAAI,GACzB,IAANA,GACE+P,EAAU5B,KAAOA,GACnBM,EAAMrJ,KAAK,CAAE+I,KAAAA,EAAME,GAAI0B,EAAU5B,OAGjCnO,IAAM8P,EAAWhQ,OAAS,EACxBiQ,EAAU1B,GAAKA,GACjBI,EAAMrJ,KAAK,CAAE+I,KAAM4B,EAAU1B,GAAIA,GAAAA,IAGnCI,EAAMrJ,KAAK,CAAE+I,KAAM4B,EAAU1B,GAAIA,GAAI2B,EAAc7B,cAIhDM,EDkCGwB,CAAOH,EAAY,CAAE3B,KAAAA,EAAME,GAAAA,KAGrCI,EElEK,SAAyBA,EAAOoB,EAAgBvD,EAAU,OAC1C,IAAjBmC,EAAM3O,OAAc,OAAO2O,MAO3ByB,GANJzB,EAAQD,EAAUC,EAAOnC,IAED6D,OAAO,CAACC,EAAUC,IACjCD,GAAYC,EAAQhC,GAAKgC,EAAQlC,MACvC,GAE6B0B,EAC5BS,EAAe,MACd,IAAItQ,EAAI,EAAGA,EAAIyO,EAAM3O,OAAS,EAAGE,IAAK,KACrC+O,EAAON,EAAMzO,GACjB+O,EAAKc,eAAiBrI,KAAK9H,IACzB8H,KAAK+I,OAAOxB,EAAKV,GAAKU,EAAKZ,MAAQ+B,GACnCL,EAAiBS,GAEnBA,GAAgBvB,EAAKc,sBAGvBpB,EAAMA,EAAM3O,OAAS,GAAG+P,eAAiBA,EAAiBS,EAEnD7B,EF6CC+B,CAAgB/B,EAAOoB,EAAgB,CAAE1B,KAAAA,EAAME,GAAAA,QAEnDoC,EAAU,GACVC,EAAU,OACT,IAAI3B,KAAQN,EAAO,KAClBkC,EAAaC,EACfrK,EACAkJ,EACAV,EAAKZ,KACLY,EAAKV,GACLU,EAAKc,eACLD,GAIFa,EAAUA,EAAQrD,OAAOuD,EAAWpK,GACpCmK,EAAUA,EAAQtD,OAAOuD,EAAWlB,UAElCE,EACExB,EAAOE,EACF,CAAE9H,EAAGkK,EAAQd,UAAWF,EAAGiB,EAAQf,WAEnC,CAAEpJ,EAAGkK,EAAShB,EAAGiB,GAGtBvC,EAAOE,EACF,CAAE9H,EAAGkK,EAAShB,EAAGiB,GAEjB,CAAEnK,EAAGkK,EAAQd,UAAWF,EAAGiB,EAAQf,WAKhD,SAASiB,EAAYrK,EAAGkJ,EAAGtB,EAAME,EAAIwB,EAAgBD,MAC/CC,EAAiB,QACb,IAAIrC,WAAW,+CAGnBnB,EACU,SAAZuD,EG1GW,SAA2BrJ,EAAGkJ,EAAGtB,EAAME,EAAIwB,OACpDH,EAAUnJ,EAAEzG,OAEZiI,GAAQsG,EAAKF,IAAS0B,EAAiB,GACvCgB,EAAW9I,EAAO,EAClB+I,EAAWvK,EAAEA,EAAEzG,OAAS,GAAKyG,EAAEA,EAAEzG,OAAS,GAE1C+H,EAAQsG,EAAO0C,EACfxE,EAAS,IAAI7K,MAAMqO,GAGnBnQ,EAAMmI,EACN5H,EAAM4H,EAAQE,EAEdgJ,GAAarP,OAAOsP,UACpBC,EAAY,EACZC,EAAQ3K,EAAE,GACV4K,EAAQ1B,EAAE,GACV2B,EAAsB,EACtBC,GAAqB,EAErBC,EAAe,EAGfC,EAAgB,EAEhBvR,EAAI,EACJS,EAAI,EAER+Q,EAAM,OAAa,IACbT,GAAaG,EAAO,MAAM,IAAIzP,MAAM,sCACjCsP,EAAY9Q,EAAM,GAAG,IAEtBoR,IACFE,IACAF,GAAqB,GAGvBhF,EAAO5L,GAAK8Q,GAAiB,EAAI,EAAID,EAAeC,EACpD9Q,IAEIA,IAAMoP,QACF2B,EAGR9R,EAAMO,EACNA,GAAO8H,EACPuJ,EAAe,EACfC,EAAgB,EAGdR,EAAYrR,IACd4R,GAAgBL,EAChBM,MAGER,KAAerP,OAAOsP,WAAaI,EAAsB,IAC3DG,IAGFR,EAAYG,EACZD,EAAYE,EAERnR,EAAI0P,GACNwB,EAAQ3K,EAAEvG,GACVmR,EAAQ1B,EAAEzP,GACVA,MAEAkR,GAASJ,EACTK,EAAQ,EACRC,YAIG/E,EHiCDoF,CAAkBlL,EAAGkJ,EAAGtB,EAAME,EAAIwB,GIzG3B,SAA6BtJ,EAAGkJ,EAAGtB,EAAME,EAAIwB,OACtDH,EAAUnJ,EAAEzG,OAEZiI,GAAQsG,EAAKF,IAAS0B,EAAiB,GACvCgB,EAAW9I,EAAO,EAElBsE,EAAS,IAAI7K,MAAMqO,GAEnB6B,EAAsBnL,EAAE,GAAKA,EAAE,GAC/BoL,EAAmBpL,EAAEmJ,EAAU,GAAKnJ,EAAEmJ,EAAU,GAGhDhQ,EAAMyO,EAAO0C,EACb5Q,EAAMkO,EAAO0C,EAEbE,EAAYrP,OAAOkQ,UACnBX,EAAY,EACZC,EAAQ3K,EAAE,GAAKmL,EACfP,EAAQ,EAERG,EAAe,EACfjC,EAAQ,EACRC,EAAY,EACZuC,EAAW,EACXC,EAAW,EAEX9R,EAAI,EACJS,EAAI,EAMJsR,EAAM,EACVP,EAAM,OAAa,KACbT,GAAarR,GAAOA,GAAOwR,IAC7Ba,EAAM3C,EAAS,EAAG1P,EAAMqR,EAAW1B,EAAO4B,GAC1CY,EAAWP,EAAeS,GAGrBb,EAAQjR,GAAO,GAAG,IAEvB8R,EAAM3C,EAAS,EAAGnP,EAAM8Q,EAAW1B,EAAO4B,GAC1Ca,EAAWR,EAAeS,EAE1B1F,EAAO5L,MAAQqR,EAAWD,GAAY9J,EAElCtH,IAAMoP,QACF2B,EAGR9R,EAAMO,EACNA,GAAO8H,EACP8J,EAAWC,EAGbR,GAAgBlC,EAAS2B,EAAWG,EAAO7B,EAAOC,GAElDyB,EAAYG,EACZD,EAAYE,EAERnR,EAAI0P,GACNwB,EAAQ3K,EAAEvG,GACVmR,EAAQ1B,EAAEzP,GACVA,KACSA,IAAM0P,IACfwB,GAASS,EACTR,EAAQ,GAGV9B,GAA8C8B,EAAlBF,IAAWC,EAAtBH,GACjBzB,GAAaD,EAAQ0B,EAAYE,SAG5B5E,EJgCD2F,CAAoBzL,EAAGkJ,EAAGtB,EAAME,EAAIwB,SAEnC,CACLtJ,EAAGyH,EAAe,CAChBG,KAAAA,EACAE,GAAAA,EACAE,KAAMsB,IAERJ,EAAGpD,GKhHQ,SAAS4F,EAAQC,EAAQ5F,EAAU,UAC1C/F,EAAEA,EAAFkJ,EAAKA,GAAMyC,GACX/D,KAAEA,EAAO5H,EAAE,GAAX8H,GAAeA,EAAK9H,EAAEA,EAAEzG,OAAS,GAAjCgQ,WAAqCA,EAAa,IAAOxD,MAE3DmC,EClBS,SAAkBN,EAAME,EAAIyB,EAAa,IAClD3B,EAAOE,KACRF,EAAME,GAAM,CAACA,EAAIF,IAIpB2B,EAAaA,EAAWb,OACrBc,QAAiCxD,IAAnBwD,EAAU5B,WAAuC5B,IAAjBwD,EAAU1B,KAG3DyB,EAAalB,KAAKC,MAAMD,KAAKE,UAAUgB,KAE5Bd,QAASe,IACdA,EAAU5B,KAAO4B,EAAU1B,MAC5B0B,EAAU1B,GAAI0B,EAAU5B,MAAQ,CAAC4B,EAAU5B,KAAM4B,EAAU1B,OAIhEyB,EAAWnF,KAAK,CAACxK,EAAGQ,IAAMR,EAAEgO,KAAOxN,EAAEwN,MAGrC2B,EAAWd,QAASe,IACdA,EAAU5B,KAAOA,IAAM4B,EAAU5B,KAAOA,GACxC4B,EAAU1B,GAAKA,IAAI0B,EAAU1B,GAAKA,SAEnC,IAAIrO,EAAI,EAAGA,EAAI8P,EAAWhQ,OAAS,EAAGE,IACrC8P,EAAW9P,GAAGqO,GAAKyB,EAAW9P,EAAI,GAAGmO,OACvC2B,EAAW9P,GAAGqO,GAAKyB,EAAW9P,EAAI,GAAGmO,WAGzC2B,EAAaA,EAAWb,OAAQc,GAAcA,EAAU5B,KAAO4B,EAAU1B,MAEhC,IAAtByB,EAAWhQ,aACrB,CAAC,CAAEqO,KAAAA,EAAME,GAAAA,QAGdI,EAAQ,GACR0D,EAAchE,MACb,IAAI4B,KAAaD,EAChBqC,EAAcpC,EAAU5B,MAC1BM,EAAMrJ,KAAK,CACT+I,KAAMgE,EACN9D,GAAI0B,EAAU5B,OAIlBgE,EAAcpC,EAAU1B,UAEtB8D,EAAc9D,GAChBI,EAAMrJ,KAAK,CACT+I,KAAMgE,EACN9D,GAAIA,IAIDI,EDrCK2D,CAASjE,EAAME,EAAIyB,GAG3BuC,EAAmB,EACnBC,EAAO,GACPC,EAAO,GACPC,EAAW,OACRA,EAAWjM,EAAEzG,QAAQ,IAExByG,EAAEiM,IAAa/D,EAAM4D,GAAkBhE,IACvC9H,EAAEiM,IAAa/D,EAAM4D,GAAkBlE,KAEvCmE,EAAKlN,KAAKmB,EAAEiM,IACZD,EAAKnN,KAAKqK,EAAE+C,YAERjM,EAAEiM,GAAY/D,EAAM4D,GAAkBhE,KACxCgE,KACK5D,EAAM4D,IAAmB,MAGlCG,UAGK,CACLjM,EAAG+L,EACH7C,EAAG8C,GEpCA,SAASE,EAAcnJ,EAAQoJ,EAAOC,OACvC1S,EAAM0S,EAAQrJ,EAAOsJ,KAAOtJ,EAAOsJ,KAAO,KAC1CF,EAAQ,GAAKA,EAAQzS,QACjB,IAAIuN,WAAW,0BAWlB,SAASqF,EAAiBvJ,EAAQoJ,EAAOC,OAC1C1S,EAAM0S,EAAQrJ,EAAOwJ,QAAUxJ,EAAOwJ,QAAU,KAChDJ,EAAQ,GAAKA,EAAQzS,QACjB,IAAIuN,WAAW,6BAYlB,SAASuF,EAAezJ,EAAQ0J,MACjCA,EAAOC,YACTD,EAASA,EAAOC,aAEdD,EAAOlT,SAAWwJ,EAAOwJ,cACrB,IAAItF,WACR,gEAGGwF,EAWF,SAASE,EAAkB5J,EAAQ0J,MACpCA,EAAOC,YACTD,EAASA,EAAOC,aAEdD,EAAOlT,SAAWwJ,EAAOsJ,WACrB,IAAIpF,WAAW,6DAEhBwF,EAUF,SAASG,EAAgB7J,EAAQ8J,MACZ,iBAAfA,QACH,IAAIvT,UAAU,sCAGTuT,EAAWC,KAAMC,GACrBA,EAAI,GAAKA,GAAKhK,EAAOsJ,YAItB,IAAIpF,WAAW,uCAGlBhM,MAAM5B,QAAQwT,KAAaA,EAAa5R,MAAM2M,KAAKiF,IAEjDA,EAGF,SAASG,GAAmBjK,EAAQkK,MACZ,iBAAlBA,QACH,IAAI3T,UAAU,yCAGN2T,EAAcH,KAAM3S,GAC3BA,EAAI,GAAKA,GAAK4I,EAAOwJ,eAItB,IAAItF,WAAW,0CAElBhM,MAAM5B,QAAQ4T,KAAgBA,EAAgBhS,MAAM2M,KAAKqF,IAEvDA,EAGF,SAASC,GAAWnK,EAAQoK,EAAUC,EAAQC,EAAaC,MACvC,IAArBhO,UAAU/F,aACN,IAAI0N,WAAW,2BAEvBsG,GAAY,WAAYJ,GACxBI,GAAY,SAAUH,GACtBG,GAAY,cAAeF,GAC3BE,GAAY,YAAaD,GAEvBH,EAAWC,GACXC,EAAcC,GACdH,EAAW,GACXA,GAAYpK,EAAOsJ,MACnBe,EAAS,GACTA,GAAUrK,EAAOsJ,MACjBgB,EAAc,GACdA,GAAetK,EAAOwJ,SACtBe,EAAY,GACZA,GAAavK,EAAOwJ,cAEd,IAAItF,WAAW,sCAIlB,SAASuG,GAASjU,EAAQqC,EAAQ,OACnCH,EAAQ,OACP,IAAIhC,EAAI,EAAGA,EAAIF,EAAQE,IAC1BgC,EAAMoD,KAAKjD,UAENH,EAGT,SAAS8R,GAAYxO,EAAMnD,MACJ,iBAAVA,QACH,IAAItC,oBAAayF,wBCzG3B,SAAS0O,GAAaC,SACdC,EAAS7O,OAAO4O,MAClBC,EAAOpU,QAzBM,SA0BRoU,EAAOC,OA1BC,EA0BkB,WAE7BC,EAAUH,EAAII,YAAYC,MAC5BF,EAAQtU,QA7BK,SA8BRsU,QAEHG,EAAcN,EAAIO,cAAcF,GAChCG,EAASF,EAAYG,QAAQ,KAC7BrU,EAAIkU,EAAYI,UAAUF,UACzBF,EAAYI,UAAU,EAnCZ,EAmC4BtU,EAAEP,QAAUO,EChBpD,MAAMuU,sBACQC,EAASC,EAAYC,MACzBF,EAAUC,IACRC,EAAQjV,aACf,IAAI0N,WAAW,mDAEnBwH,EAAY,IAAIC,GAAOJ,EAASC,OAC/B,IAAIvL,EAAM,EAAGA,EAAMsL,EAAStL,QAC1B,IAAI2L,EAAS,EAAGA,EAASJ,EAAYI,IACxCF,EAAUG,IAAI5L,EAAK2L,EAAQH,EAAQxL,EAAMuL,EAAaI,WAGnDF,mBAGQD,OACX/B,EAAS,IAAIiC,GAAO,EAAGF,EAAQjV,YAC9B,IAAIE,EAAI,EAAGA,EAAI+U,EAAQjV,OAAQE,IAClCgT,EAAOmC,IAAI,EAAGnV,EAAG+U,EAAQ/U,WAEpBgT,sBAGW+B,OACd/B,EAAS,IAAIiC,GAAOF,EAAQjV,OAAQ,OACnC,IAAIE,EAAI,EAAGA,EAAI+U,EAAQjV,OAAQE,IAClCgT,EAAOmC,IAAInV,EAAG,EAAG+U,EAAQ/U,WAEpBgT,eAGIJ,EAAME,UACV,IAAImC,GAAOrC,EAAME,eAGdF,EAAME,UACT,IAAImC,GAAOrC,EAAME,GAASsC,KAAK,eAG5BxC,EAAME,EAASxG,EAAU,OACZ,iBAAZA,QACH,IAAIzM,UAAU,mCAEhBiM,OAAEA,EAAStE,KAAKsE,QAAWQ,MAC7BhD,EAAS,IAAI2L,GAAOrC,EAAME,OACzB,IAAI9S,EAAI,EAAGA,EAAI4S,EAAM5S,QACnB,IAAIS,EAAI,EAAGA,EAAIqS,EAASrS,IAC3B6I,EAAO6L,IAAInV,EAAGS,EAAGqL,YAGdxC,iBAGMsJ,EAAME,EAASxG,EAAU,OACf,iBAAZA,QACH,IAAIzM,UAAU,mCAEhBH,IAAEA,EAAM,EAARO,IAAWA,EAAM,IAAjB6L,OAAuBA,EAAStE,KAAKsE,QAAWQ,MACjD5K,OAAO2T,UAAU3V,GAAM,MAAM,IAAIG,UAAU,8BAC3C6B,OAAO2T,UAAUpV,GAAM,MAAM,IAAIJ,UAAU,6BAC5CH,GAAOO,EAAK,MAAM,IAAIuN,WAAW,oCACjC8H,EAAWrV,EAAMP,EACjB4J,EAAS,IAAI2L,GAAOrC,EAAME,OACzB,IAAI9S,EAAI,EAAGA,EAAI4S,EAAM5S,QACnB,IAAIS,EAAI,EAAGA,EAAIqS,EAASrS,IAAK,KAC5B0B,EAAQzC,EAAM8H,KAAK+I,MAAMzE,IAAWwJ,GACxChM,EAAO6L,IAAInV,EAAGS,EAAG0B,UAGdmH,aAGEsJ,EAAME,EAAS3Q,QACRoK,IAAZuG,IAAuBA,EAAUF,QACvBrG,IAAVpK,IAAqBA,EAAQ,OAC7BzC,EAAM8H,KAAK9H,IAAIkT,EAAME,GACrBxJ,EAASiM,KAAKC,MAAM5C,EAAME,OACzB,IAAI9S,EAAI,EAAGA,EAAIN,EAAKM,IACvBsJ,EAAO6L,IAAInV,EAAGA,EAAGmC,UAEZmH,cAGGQ,EAAM8I,EAAME,OAClB2C,EAAI3L,EAAKhK,YACAyM,IAATqG,IAAoBA,EAAO6C,QACflJ,IAAZuG,IAAuBA,EAAUF,OACjClT,EAAM8H,KAAK9H,IAAI+V,EAAG7C,EAAME,GACxBxJ,EAASiM,KAAKC,MAAM5C,EAAME,OACzB,IAAI9S,EAAI,EAAGA,EAAIN,EAAKM,IACvBsJ,EAAO6L,IAAInV,EAAGA,EAAG8J,EAAK9J,WAEjBsJ,aAGEoM,EAASC,GAClBD,EAAUH,KAAKK,YAAYF,GAC3BC,EAAUJ,KAAKK,YAAYD,OACvB/C,EAAO8C,EAAQ9C,KACfE,EAAU4C,EAAQ5C,QAClB3D,EAAS,IAAI8F,GAAOrC,EAAME,OACzB,IAAI9S,EAAI,EAAGA,EAAI4S,EAAM5S,QACnB,IAAIS,EAAI,EAAGA,EAAIqS,EAASrS,IAC3B0O,EAAOgG,IAAInV,EAAGS,EAAG+G,KAAK9H,IAAIgW,EAAQG,IAAI7V,EAAGS,GAAIkV,EAAQE,IAAI7V,EAAGS,YAGzD0O,aAGEuG,EAASC,GAClBD,EAAUH,KAAKK,YAAYF,GAC3BC,EAAUJ,KAAKK,YAAYD,OACvB/C,EAAO8C,EAAQ9C,KACfE,EAAU4C,EAAQ5C,QAClB3D,EAAS,IAAIoG,KAAK3C,EAAME,OACvB,IAAI9S,EAAI,EAAGA,EAAI4S,EAAM5S,QACnB,IAAIS,EAAI,EAAGA,EAAIqS,EAASrS,IAC3B0O,EAAOgG,IAAInV,EAAGS,EAAG+G,KAAKvH,IAAIyV,EAAQG,IAAI7V,EAAGS,GAAIkV,EAAQE,IAAI7V,EAAGS,YAGzD0O,qBAGUhN,UACVyS,GAAekB,SAAS3T,GAASA,EAAQ,IAAI8S,GAAO9S,mBAG7CA,UACE,MAATA,GAAiC,WAAhBA,EAAM4T,wBAIvBR,KAAK3C,KAAO2C,KAAKzC,QAG1BkD,MAAMC,MACoB,mBAAbA,QACH,IAAIpW,UAAU,mCAEjB,IAAIG,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,IAChCwV,EAASzW,KAAK+V,KAAMvV,EAAGS,UAGpB8U,KAGTtC,gBACMjR,EAAQ,OACP,IAAIhC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,IAChCuB,EAAMoD,KAAKmQ,KAAKM,IAAI7V,EAAGS,WAGpBuB,EAGTkU,gBACMC,EAAO,OACN,IAAInW,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IAAK,CAClCmW,EAAK/Q,KAAK,QACL,IAAI3E,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,IAChC0V,EAAKnW,GAAGoF,KAAKmQ,KAAKM,IAAI7V,EAAGS,WAGtB0V,EAGTC,gBACSb,KAAKW,YAGdG,qBACuB,IAAdd,KAAK3C,KAGd0D,wBAC0B,IAAjBf,KAAKzC,QAGdyD,kBACuB,IAAdhB,KAAK3C,MAA+B,IAAjB2C,KAAKzC,QAGjC0D,kBACSjB,KAAK3C,OAAS2C,KAAKzC,QAG5B2D,iBACMlB,KAAKiB,WAAY,KACd,IAAIxW,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,GAAKT,EAAGS,OAClB8U,KAAKM,IAAI7V,EAAGS,KAAO8U,KAAKM,IAAIpV,EAAGT,UAC1B,SAIN,SAEF,EAGT0W,oBACM1W,EAAI,EACJS,EAAI,EACJkW,GAAkB,EAClBD,GAAgB,EAChBE,GAAU,OACP5W,EAAIuV,KAAK3C,MAAQ8D,GAAe,KACrCjW,EAAI,EACJmW,GAAU,EACHnW,EAAI8U,KAAKzC,UAAuB,IAAZ8D,GACF,IAAnBrB,KAAKM,IAAI7V,EAAGS,GACdA,IAC4B,IAAnB8U,KAAKM,IAAI7V,EAAGS,IAAYA,EAAIkW,GACrCC,GAAU,EACVD,EAAiBlW,IAEjBiW,GAAgB,EAChBE,GAAU,GAGd5W,WAEK0W,EAGTG,2BACM7W,EAAI,EACJS,EAAI,EACJkW,GAAkB,EAClBE,GAAuB,EACvBD,GAAU,OACP5W,EAAIuV,KAAK3C,MAAQiE,GAAsB,KAC5CpW,EAAI,EACJmW,GAAU,EACHnW,EAAI8U,KAAKzC,UAAuB,IAAZ8D,GACF,IAAnBrB,KAAKM,IAAI7V,EAAGS,GACdA,IAC4B,IAAnB8U,KAAKM,IAAI7V,EAAGS,IAAYA,EAAIkW,GACrCC,GAAU,EACVD,EAAiBlW,IAEjBoW,GAAuB,EACvBD,GAAU,OAGT,IAAI/R,EAAIpE,EAAI,EAAGoE,EAAI0Q,KAAK3C,KAAM/N,IACV,IAAnB0Q,KAAKM,IAAI7V,EAAG6E,KACdgS,GAAuB,GAG3B7W,WAEK6W,EAGTC,kBACM3H,EAASoG,KAAKwB,QACdvW,EAAI,EACJqE,EAAI,OACDrE,EAAI2O,EAAOyD,MAAQ/N,EAAIsK,EAAO2D,SAAS,KACxCkE,EAAOxW,MACN,IAAIR,EAAIQ,EAAGR,EAAImP,EAAOyD,KAAM5S,IAC3BmP,EAAO0G,IAAI7V,EAAG6E,GAAKsK,EAAO0G,IAAImB,EAAMnS,KACtCmS,EAAOhX,MAGiB,IAAxBmP,EAAO0G,IAAImB,EAAMnS,GACnBA,QACK,CACLsK,EAAO8H,SAASzW,EAAGwW,OACfE,EAAM/H,EAAO0G,IAAIrV,EAAGqE,OACnB,IAAIpE,EAAIoE,EAAGpE,EAAI0O,EAAO2D,QAASrS,IAClC0O,EAAOgG,IAAI3U,EAAGC,EAAG0O,EAAO0G,IAAIrV,EAAGC,GAAKyW,OAEjC,IAAIlX,EAAIQ,EAAI,EAAGR,EAAImP,EAAOyD,KAAM5S,IAAK,KACpCgN,EAASmC,EAAO0G,IAAI7V,EAAG6E,GAAKsK,EAAO0G,IAAIrV,EAAGqE,GAC9CsK,EAAOgG,IAAInV,EAAG6E,EAAG,OACZ,IAAIpE,EAAIoE,EAAI,EAAGpE,EAAI0O,EAAO2D,QAASrS,IACtC0O,EAAOgG,IAAInV,EAAGS,EAAG0O,EAAO0G,IAAI7V,EAAGS,GAAK0O,EAAO0G,IAAIrV,EAAGC,GAAKuM,GAG3DxM,IACAqE,YAGGsK,EAGTgI,yBACMhI,EAASoG,KAAKuB,cACd3P,EAAIgI,EAAO2D,QACX5L,EAAIiI,EAAOyD,KACXpS,EAAI0G,EAAI,OACL1G,GAAK,MACe,IAArB2O,EAAOiI,OAAO5W,GAChBA,QACK,KACD4I,EAAI,EACJiO,GAAQ,OACLjO,EAAIlC,IAAe,IAAVmQ,GACW,IAArBlI,EAAO0G,IAAIrV,EAAG4I,GAChBiO,GAAQ,EAERjO,QAGC,IAAIpJ,EAAI,EAAGA,EAAIQ,EAAGR,IAAK,KACtBgN,EAASmC,EAAO0G,IAAI7V,EAAGoJ,OACtB,IAAI3I,EAAI2I,EAAG3I,EAAI0G,EAAG1G,IAAK,KACtByW,EAAM/H,EAAO0G,IAAI7V,EAAGS,GAAKuM,EAASmC,EAAO0G,IAAIrV,EAAGC,GACpD0O,EAAOgG,IAAInV,EAAGS,EAAGyW,IAGrB1W,WAGG2O,EAGTgG,YACQ,IAAI1T,MAAM,+BAGlBoU,YACQ,IAAIpU,MAAM,+BAGlB6V,OAAOhL,EAAU,OACQ,iBAAZA,QACH,IAAIzM,UAAU,mCAEhB+S,KAAEA,EAAO,EAATE,QAAYA,EAAU,GAAMxG,MAC7B5K,OAAO2T,UAAUzC,IAASA,GAAQ,QAC/B,IAAI/S,UAAU,uCAEjB6B,OAAO2T,UAAUvC,IAAYA,GAAW,QACrC,IAAIjT,UAAU,0CAElByJ,EAAS,IAAI2L,GAAOM,KAAK3C,KAAOA,EAAM2C,KAAKzC,QAAUA,OACpD,IAAI9S,EAAI,EAAGA,EAAI4S,EAAM5S,QACnB,IAAIS,EAAI,EAAGA,EAAIqS,EAASrS,IAC3B6I,EAAOiO,aAAahC,KAAMA,KAAK3C,KAAO5S,EAAGuV,KAAKzC,QAAUrS,UAGrD6I,EAGT8L,KAAKjT,OACE,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG0B,UAGZoT,KAGTiC,aACSjC,KAAKkC,MAAM,GAGpBC,OAAOhF,GACLD,EAAc8C,KAAM7C,OAChBnJ,EAAM,OACL,IAAIvJ,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,IAChCuJ,EAAInE,KAAKmQ,KAAKM,IAAInD,EAAO1S,WAEpBuJ,EAGToO,aAAajF,UACJuC,GAAO2C,UAAUrC,KAAKmC,OAAOhF,IAGtCmF,OAAOnF,EAAO1Q,GACZyQ,EAAc8C,KAAM7C,GACpB1Q,EAAQ+Q,EAAewC,KAAMvT,OACxB,IAAIhC,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,SAC3BmV,IAAIzC,EAAO1S,EAAGgC,EAAMhC,WAEpBuV,KAGT0B,SAASa,EAAMC,GACbtF,EAAc8C,KAAMuC,GACpBrF,EAAc8C,KAAMwC,OACf,IAAI/X,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,IAAK,KACjCgY,EAAOzC,KAAKM,IAAIiC,EAAM9X,QACrBmV,IAAI2C,EAAM9X,EAAGuV,KAAKM,IAAIkC,EAAM/X,SAC5BmV,IAAI4C,EAAM/X,EAAGgY,UAEbzC,KAGT0C,UAAUvF,GACRG,EAAiB0C,KAAM7C,OACnBwC,EAAS,OACR,IAAIlV,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IAC7BkV,EAAO9P,KAAKmQ,KAAKM,IAAI7V,EAAG0S,WAEnBwC,EAGTgD,gBAAgBxF,UACPuC,GAAOkD,aAAa5C,KAAK0C,UAAUvF,IAG5C0F,UAAU1F,EAAO1Q,GACf6Q,EAAiB0C,KAAM7C,GACvB1Q,EAAQkR,EAAkBqC,KAAMvT,OAC3B,IAAIhC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,SACxBmV,IAAInV,EAAG0S,EAAO1Q,EAAMhC,WAEpBuV,KAGT8C,YAAYC,EAASC,GACnB1F,EAAiB0C,KAAM+C,GACvBzF,EAAiB0C,KAAMgD,OAClB,IAAIvY,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IAAK,KAC9BgY,EAAOzC,KAAKM,IAAI7V,EAAGsY,QAClBnD,IAAInV,EAAGsY,EAAS/C,KAAKM,IAAI7V,EAAGuY,SAC5BpD,IAAInV,EAAGuY,EAASP,UAEhBzC,KAGTiD,aAAaxF,GACXA,EAASD,EAAewC,KAAMvC,OACzB,IAAIhT,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAKuS,EAAOvS,WAGpC8U,KAGTkD,aAAazF,GACXA,EAASD,EAAewC,KAAMvC,OACzB,IAAIhT,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAKuS,EAAOvS,WAGpC8U,KAGTmD,aAAa1F,GACXA,EAASD,EAAewC,KAAMvC,OACzB,IAAIhT,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAKuS,EAAOvS,WAGpC8U,KAGToD,aAAa3F,GACXA,EAASD,EAAewC,KAAMvC,OACzB,IAAIhT,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAKuS,EAAOvS,WAGpC8U,KAGTqD,gBAAgB5F,GACdA,EAASE,EAAkBqC,KAAMvC,OAC5B,IAAIhT,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAKuS,EAAOhT,WAGpCuV,KAGTsD,gBAAgB7F,GACdA,EAASE,EAAkBqC,KAAMvC,OAC5B,IAAIhT,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAKuS,EAAOhT,WAGpCuV,KAGTuD,gBAAgB9F,GACdA,EAASE,EAAkBqC,KAAMvC,OAC5B,IAAIhT,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAKuS,EAAOhT,WAGpCuV,KAGTwD,gBAAgB/F,GACdA,EAASE,EAAkBqC,KAAMvC,OAC5B,IAAIhT,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAKuS,EAAOhT,WAGpCuV,KAGTyD,OAAOtG,EAAOvQ,GACZsQ,EAAc8C,KAAM7C,OACf,IAAI1S,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,SAC3BmV,IAAIzC,EAAO1S,EAAGuV,KAAKM,IAAInD,EAAO1S,GAAKmC,UAEnCoT,KAGT0D,UAAUvG,EAAOvQ,GACf0Q,EAAiB0C,KAAM7C,OAClB,IAAI1S,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,SACxBmV,IAAInV,EAAG0S,EAAO6C,KAAKM,IAAI7V,EAAG0S,GAASvQ,UAEnCoT,KAGTtV,UACMsH,EAAIgO,KAAKM,IAAI,EAAG,OACf,IAAI7V,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,IAC5B8U,KAAKM,IAAI7V,EAAGS,GAAK8G,IACnBA,EAAIgO,KAAKM,IAAI7V,EAAGS,WAIf8G,EAGT2R,eACM3R,EAAIgO,KAAKM,IAAI,EAAG,GAChBsD,EAAM,CAAC,EAAG,OACT,IAAInZ,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,IAC5B8U,KAAKM,IAAI7V,EAAGS,GAAK8G,IACnBA,EAAIgO,KAAKM,IAAI7V,EAAGS,GAChB0Y,EAAI,GAAKnZ,EACTmZ,EAAI,GAAK1Y,UAIR0Y,EAGTzZ,UACM6H,EAAIgO,KAAKM,IAAI,EAAG,OACf,IAAI7V,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,IAC5B8U,KAAKM,IAAI7V,EAAGS,GAAK8G,IACnBA,EAAIgO,KAAKM,IAAI7V,EAAGS,WAIf8G,EAGT6R,eACM7R,EAAIgO,KAAKM,IAAI,EAAG,GAChBsD,EAAM,CAAC,EAAG,OACT,IAAInZ,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,IAC5B8U,KAAKM,IAAI7V,EAAGS,GAAK8G,IACnBA,EAAIgO,KAAKM,IAAI7V,EAAGS,GAChB0Y,EAAI,GAAKnZ,EACTmZ,EAAI,GAAK1Y,UAIR0Y,EAGT/B,OAAO7N,GACLkJ,EAAc8C,KAAMhM,OAChBhC,EAAIgO,KAAKM,IAAItM,EAAK,OACjB,IAAIvJ,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,IAC5BuV,KAAKM,IAAItM,EAAKvJ,GAAKuH,IACrBA,EAAIgO,KAAKM,IAAItM,EAAKvJ,WAGfuH,EAGT8R,YAAY9P,GACVkJ,EAAc8C,KAAMhM,OAChBhC,EAAIgO,KAAKM,IAAItM,EAAK,GAClB4P,EAAM,CAAC5P,EAAK,OACX,IAAIvJ,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,IAC5BuV,KAAKM,IAAItM,EAAKvJ,GAAKuH,IACrBA,EAAIgO,KAAKM,IAAItM,EAAKvJ,GAClBmZ,EAAI,GAAKnZ,UAGNmZ,EAGTG,OAAO/P,GACLkJ,EAAc8C,KAAMhM,OAChBhC,EAAIgO,KAAKM,IAAItM,EAAK,OACjB,IAAIvJ,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,IAC5BuV,KAAKM,IAAItM,EAAKvJ,GAAKuH,IACrBA,EAAIgO,KAAKM,IAAItM,EAAKvJ,WAGfuH,EAGTgS,YAAYhQ,GACVkJ,EAAc8C,KAAMhM,OAChBhC,EAAIgO,KAAKM,IAAItM,EAAK,GAClB4P,EAAM,CAAC5P,EAAK,OACX,IAAIvJ,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,IAC5BuV,KAAKM,IAAItM,EAAKvJ,GAAKuH,IACrBA,EAAIgO,KAAKM,IAAItM,EAAKvJ,GAClBmZ,EAAI,GAAKnZ,UAGNmZ,EAGTK,UAAUtE,GACRrC,EAAiB0C,KAAML,OACnB3N,EAAIgO,KAAKM,IAAI,EAAGX,OACf,IAAIlV,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IACzBuV,KAAKM,IAAI7V,EAAGkV,GAAU3N,IACxBA,EAAIgO,KAAKM,IAAI7V,EAAGkV,WAGb3N,EAGTkS,eAAevE,GACbrC,EAAiB0C,KAAML,OACnB3N,EAAIgO,KAAKM,IAAI,EAAGX,GAChBiE,EAAM,CAAC,EAAGjE,OACT,IAAIlV,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IACzBuV,KAAKM,IAAI7V,EAAGkV,GAAU3N,IACxBA,EAAIgO,KAAKM,IAAI7V,EAAGkV,GAChBiE,EAAI,GAAKnZ,UAGNmZ,EAGTO,UAAUxE,GACRrC,EAAiB0C,KAAML,OACnB3N,EAAIgO,KAAKM,IAAI,EAAGX,OACf,IAAIlV,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IACzBuV,KAAKM,IAAI7V,EAAGkV,GAAU3N,IACxBA,EAAIgO,KAAKM,IAAI7V,EAAGkV,WAGb3N,EAGToS,eAAezE,GACbrC,EAAiB0C,KAAML,OACnB3N,EAAIgO,KAAKM,IAAI,EAAGX,GAChBiE,EAAM,CAAC,EAAGjE,OACT,IAAIlV,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IACzBuV,KAAKM,IAAI7V,EAAGkV,GAAU3N,IACxBA,EAAIgO,KAAKM,IAAI7V,EAAGkV,GAChBiE,EAAI,GAAKnZ,UAGNmZ,EAGTS,WACMla,EAAM8H,KAAK9H,IAAI6V,KAAK3C,KAAM2C,KAAKzC,SAC/B8G,EAAO,OACN,IAAI5Z,EAAI,EAAGA,EAAIN,EAAKM,IACvB4Z,EAAKxU,KAAKmQ,KAAKM,IAAI7V,EAAGA,WAEjB4Z,EAGTxN,KAAKyN,EAAO,iBACN1K,EAAS,KACA,QAAT0K,SACKtE,KAAKtV,MACP,GAAa,cAAT4Z,EAAsB,KAC1B,IAAI7Z,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,IAChC0O,GAAkBoG,KAAKM,IAAI7V,EAAGS,GAAK8U,KAAKM,IAAI7V,EAAGS,UAG5C+G,KAAKC,KAAK0H,SAEX,IAAI3B,wCAAiCqM,IAI/CC,oBACM/N,EAAM,MACL,IAAI/L,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,IAChCsL,GAAOwJ,KAAKM,IAAI7V,EAAGS,QACd0U,IAAInV,EAAGS,EAAGsL,UAGZwJ,KAGTwE,IAAIC,GACEpF,GAAekB,SAASkE,KAAUA,EAAUA,EAAQ/G,iBACpDgH,EAAU1E,KAAKtC,eACfgH,EAAQna,SAAWka,EAAQla,aACvB,IAAI0N,WAAW,yCAEnBuM,EAAM,MACL,IAAI/Z,EAAI,EAAGA,EAAIia,EAAQna,OAAQE,IAClC+Z,GAAOE,EAAQja,GAAKga,EAAQha,UAEvB+Z,EAGTG,KAAKC,GACHA,EAAQlF,GAAOW,YAAYuE,OAEvBhT,EAAIoO,KAAK3C,KACT1L,EAAIqO,KAAKzC,QACT1J,EAAI+Q,EAAMrH,QAEV3D,EAAS,IAAI8F,GAAO9N,EAAGiC,GAEvBgR,EAAQ,IAAIvY,aAAaqF,OACxB,IAAIzG,EAAI,EAAGA,EAAI2I,EAAG3I,IAAK,KACrB,IAAIoE,EAAI,EAAGA,EAAIqC,EAAGrC,IACrBuV,EAAMvV,GAAKsV,EAAMtE,IAAIhR,EAAGpE,OAGrB,IAAIT,EAAI,EAAGA,EAAImH,EAAGnH,IAAK,KACtBoH,EAAI,MACH,IAAIvC,EAAI,EAAGA,EAAIqC,EAAGrC,IACrBuC,GAAKmO,KAAKM,IAAI7V,EAAG6E,GAAKuV,EAAMvV,GAG9BsK,EAAOgG,IAAInV,EAAGS,EAAG2G,WAGd+H,EAGTkL,YAAYF,GACVA,EAAQlF,GAAOW,YAAYuE,OACvBhL,EAAS,IAAI8F,GAAO,EAAG,SACrBqF,EAAM/E,KAAKM,IAAI,EAAG,GAClB0E,EAAMJ,EAAMtE,IAAI,EAAG,GACnB2E,EAAMjF,KAAKM,IAAI,EAAG,GAClB4E,EAAMN,EAAMtE,IAAI,EAAG,GACnB6E,EAAMnF,KAAKM,IAAI,EAAG,GAClB8E,EAAMR,EAAMtE,IAAI,EAAG,GACnB+E,EAAMrF,KAAKM,IAAI,EAAG,GAClBgF,EAAMV,EAAMtE,IAAI,EAAG,GAGnBiF,GAAMR,EAAMM,IAAQL,EAAMM,GAC1BE,GAAML,EAAME,GAAOL,EACnBS,EAAKV,GAAOG,EAAMI,GAClBI,EAAKL,GAAOD,EAAMJ,GAClBW,GAAMZ,EAAME,GAAOK,EAKnBM,EAAML,EAAKG,EAAKC,GAHVV,EAAMI,IAAQD,EAAME,GAI1BO,EAAMJ,EAAKE,EACXG,EAAMN,EAAKE,EACXK,EAAMR,EAAKC,EAAKC,GAPVN,EAAMJ,IAAQC,EAAME,UAShCtL,EAAOgG,IAAI,EAAG,EAAGgG,GACjBhM,EAAOgG,IAAI,EAAG,EAAGiG,GACjBjM,EAAOgG,IAAI,EAAG,EAAGkG,GACjBlM,EAAOgG,IAAI,EAAG,EAAGmG,GACVnM,EAGToM,YAAYpB,GACVA,EAAQlF,GAAOW,YAAYuE,OACvBhL,EAAS,IAAI8F,GAAO,EAAG,SAErBuG,EAAMjG,KAAKM,IAAI,EAAG,GAClB4F,EAAMlG,KAAKM,IAAI,EAAG,GAClB6F,EAAMnG,KAAKM,IAAI,EAAG,GAClB8F,EAAMpG,KAAKM,IAAI,EAAG,GAClByE,EAAM/E,KAAKM,IAAI,EAAG,GAClB2E,EAAMjF,KAAKM,IAAI,EAAG,GAClB+F,EAAMrG,KAAKM,IAAI,EAAG,GAClB6E,EAAMnF,KAAKM,IAAI,EAAG,GAClB+E,EAAMrF,KAAKM,IAAI,EAAG,GAElBgG,EAAM1B,EAAMtE,IAAI,EAAG,GACnBiG,EAAM3B,EAAMtE,IAAI,EAAG,GACnBkG,EAAM5B,EAAMtE,IAAI,EAAG,GACnBmG,EAAM7B,EAAMtE,IAAI,EAAG,GACnB0E,EAAMJ,EAAMtE,IAAI,EAAG,GACnB4E,EAAMN,EAAMtE,IAAI,EAAG,GACnBoG,EAAM9B,EAAMtE,IAAI,EAAG,GACnB8E,EAAMR,EAAMtE,IAAI,EAAG,GACnBgF,EAAMV,EAAMtE,IAAI,EAAG,GAGnBkF,GAAMS,EAAMG,KAASG,EAAMvB,GAE3BU,IAAOO,EAAMG,EAAMrB,IAAQuB,EAAMC,EAAMvB,GACvCW,GAAMS,EAAMrB,KAASuB,EAAMC,GAC3BI,EAAKV,EAAMK,EACXM,IAAOX,EAAMI,EAAMlB,IAAQmB,EAAME,EAAMtB,GACvC2B,IAAOZ,EAAMI,IAAQG,EAAMtB,GAC3B4B,GAAMT,EAAMlB,KAASmB,EAAME,GAG3BO,IAAQZ,EAAMhB,EAAME,IAAQL,EAAM0B,EAAMtB,GACxC4B,GAAOb,EAAMd,IAAQL,EAAMI,GAC3B6B,EAAMd,EAAMO,EACZQ,GAAO/B,EAAME,KAASqB,EAAMtB,GAC5B+B,IAAQhB,EAAMpB,EAAME,IAAQC,EAAMwB,EAAMpB,GACxC8B,GAAOjB,EAAMlB,IAAQC,EAAMI,GAC3B+B,GAAOtC,EAAME,KAASyB,EAAMpB,GAO5BM,EAAMe,EAAKM,EANLf,EAAMO,EAOZZ,GAzBMI,EAAMC,EAAMC,EAAMC,EAAMrB,EAAMI,EAAME,GAAOL,EAyBtCU,EAAKC,EAAKgB,EAAKI,EAAME,EAAMC,EACtCI,EAAMX,EAAKC,EAAKE,GAjBTb,EAAMC,EAAMC,EAAMpB,EAAME,EAAMoB,EAAMlB,GAAOD,EAiBvB+B,EAAME,EAAME,EACvCvB,EAAMN,EAzBDT,IAAQuB,EAAMC,EAAME,EAAMzB,EAAME,EAAMwB,EAAMpB,GAyBjCI,EAAKiB,EAAKM,EAAME,EAAMC,EACtCrB,EAAMP,EAAKE,EAAKC,EAAKgB,EATf1B,EAAMG,EAUZmC,EAAMN,EAAME,EAAMC,EAAMC,EATlBjB,EAAMI,EAUZgB,EAAMb,EAAKC,EAAKC,EApBV1B,IAAQmB,EAAME,EAAMC,EAAMzB,EAAME,EAAMwB,EAAMtB,GAoBvB2B,EAAMC,EAAMC,EACvCQ,EAAMV,EAAMC,EAAMC,EAAMC,EAVlBb,EAAME,EAWZmB,EAAMf,EAAKC,EAAKC,EAAKC,EAVfzB,EAAMC,SAYlB1L,EAAOgG,IAAI,EAAG,EAAGgG,GACjBhM,EAAOgG,IAAI,EAAG,EAAGiG,GACjBjM,EAAOgG,IAAI,EAAG,EAAG0H,GACjB1N,EAAOgG,IAAI,EAAG,EAAGkG,GACjBlM,EAAOgG,IAAI,EAAG,EAAGmG,GACjBnM,EAAOgG,IAAI,EAAG,EAAG2H,GACjB3N,EAAOgG,IAAI,EAAG,EAAG4H,GACjB5N,EAAOgG,IAAI,EAAG,EAAG6H,GACjB7N,EAAOgG,IAAI,EAAG,EAAG8H,GACV9N,EAGT+N,aAAazN,GACXA,EAAIwF,GAAOW,YAAYnG,OACnBlJ,EAAIgP,KAAKwB,QACToG,EAAK5W,EAAEqM,KACPwK,EAAK7W,EAAEuM,QACPuK,EAAK5N,EAAEmD,KACP0K,EAAK7N,EAAEqD,iBAUFyK,EAAMC,EAAK5K,EAAM6K,OACpBnK,EAAIkK,EAAI5K,KACRlS,EAAI8c,EAAI1K,WACRQ,IAAMV,GAAQlS,IAAM+c,SACfD,EACF,KACDE,EAAW9I,GAAeY,MAAM5C,EAAM6K,UAC1CC,EAAWA,EAASnG,aAAaiG,EAAK,EAAG,GAClCE,GAjBPN,IAAOC,GAETM,QAAQC,2BACST,gBAAQC,kBAAUC,gBAAQC,4CAsBzChK,EAAI9L,KAAKvH,IAAIkd,EAAIE,GACjB3c,EAAI8G,KAAKvH,IAAImd,EAAIE,UACrB/W,EAAIgX,EAAMhX,EAAG+M,EAAG5S,YAIPmd,EAAU1d,EAAGQ,EAAGiS,EAAM6K,MAEzB7K,GAAQ,KAAO6K,GAAQ,WAClBtd,EAAE+Z,KAAKvZ,GAIZiS,EAAO,GAAM,GAAK6K,EAAO,GAAM,GACjCtd,EAAIod,EAAMpd,EAAGyS,EAAO,EAAG6K,EAAO,GAC9B9c,EAAI4c,EAAM5c,EAAGiS,EAAO,EAAG6K,EAAO,IACrB7K,EAAO,GAAM,GACtBzS,EAAIod,EAAMpd,EAAGyS,EAAO,EAAG6K,GACvB9c,EAAI4c,EAAM5c,EAAGiS,EAAO,EAAG6K,IACdA,EAAO,GAAM,IACtBtd,EAAIod,EAAMpd,EAAGyS,EAAM6K,EAAO,GAC1B9c,EAAI4c,EAAM5c,EAAGiS,EAAM6K,EAAO,QAGxBK,EAAWC,SAAS5d,EAAEyS,KAAO,EAAG,IAChCoL,EAAWD,SAAS5d,EAAE2S,QAAU,EAAG,IAEnCwH,EAAMna,EAAE8d,UAAU,EAAGH,EAAW,EAAG,EAAGE,EAAW,GACjDzD,EAAM5Z,EAAEsd,UAAU,EAAGH,EAAW,EAAG,EAAGE,EAAW,GAEjDxD,EAAMra,EAAE8d,UAAU,EAAGH,EAAW,EAAGE,EAAU7d,EAAE2S,QAAU,GACzD2H,EAAM9Z,EAAEsd,UAAU,EAAGH,EAAW,EAAGE,EAAUrd,EAAEmS,QAAU,GAEzD4H,EAAMva,EAAE8d,UAAUH,EAAU3d,EAAEyS,KAAO,EAAG,EAAGoL,EAAW,GACtDrD,EAAMha,EAAEsd,UAAUH,EAAUnd,EAAEiS,KAAO,EAAG,EAAGoL,EAAW,GAEtDpD,EAAMza,EAAE8d,UAAUH,EAAU3d,EAAEyS,KAAO,EAAGoL,EAAU7d,EAAE2S,QAAU,GAC9D+H,EAAMla,EAAEsd,UAAUH,EAAUnd,EAAEiS,KAAO,EAAGoL,EAAUrd,EAAEmS,QAAU,GAG9DgI,EAAK+C,EACPjJ,GAAe7C,IAAIuI,EAAKM,GACxBhG,GAAe7C,IAAIwI,EAAKM,GACxBiD,EACAE,GAEEjD,EAAK8C,EAAUjJ,GAAe7C,IAAI2I,EAAKE,GAAML,EAAKuD,EAAUE,GAC5DhD,EAAK6C,EAAUvD,EAAK1F,GAAesJ,IAAIzD,EAAKI,GAAMiD,EAAUE,GAC5D/C,EAAK4C,EAAUjD,EAAKhG,GAAesJ,IAAIvD,EAAKJ,GAAMuD,EAAUE,GAC5D9C,EAAK2C,EAAUjJ,GAAe7C,IAAIuI,EAAKE,GAAMK,EAAKiD,EAAUE,GAC5D9B,EAAK2B,EACPjJ,GAAesJ,IAAIxD,EAAKJ,GACxB1F,GAAe7C,IAAIwI,EAAKE,GACxBqD,EACAE,GAEE7B,EAAK0B,EACPjJ,GAAesJ,IAAI1D,EAAKI,GACxBhG,GAAe7C,IAAI4I,EAAKE,GACxBiD,EACAE,GAIE1C,EAAM1G,GAAe7C,IAAI+I,EAAIG,GACjCK,EAAI4C,IAAIhD,GACRI,EAAIvJ,IAAIoK,OACJW,EAAMlI,GAAe7C,IAAIiJ,EAAIE,GAC7B8B,EAAMpI,GAAe7C,IAAIgJ,EAAIE,GAC7BgC,EAAMrI,GAAesJ,IAAIpD,EAAIC,GACjCkC,EAAIlL,IAAIiJ,GACRiC,EAAIlL,IAAImK,OAGJwB,EAAW9I,GAAeY,MAAM,EAAI8F,EAAI1I,KAAM,EAAI0I,EAAIxI,gBAC1D4K,EAAWA,EAASnG,aAAa+D,EAAK,EAAG,GACzCoC,EAAWA,EAASnG,aAAauF,EAAKxB,EAAI1I,KAAM,GAChD8K,EAAWA,EAASnG,aAAayF,EAAK,EAAG1B,EAAIxI,SAC7C4K,EAAWA,EAASnG,aAAa0F,EAAK3B,EAAI1I,KAAM0I,EAAIxI,SAC7C4K,EAASO,UAAU,EAAGrL,EAAO,EAAG,EAAG6K,EAAO,GAE5CI,CAAUtX,EA9EjBkJ,EAAI8N,EAAM9N,EAAG6D,EAAG5S,GA8EO4S,EAAG5S,GAG5Byd,UAAU7R,EAAU,OACK,iBAAZA,QACH,IAAIzM,UAAU,mCAEhBH,IAAEA,EAAM,EAARO,IAAWA,EAAM,GAAMqM,MACxB5K,OAAO0c,SAAS1e,GAAM,MAAM,IAAIG,UAAU,4BAC1C6B,OAAO0c,SAASne,GAAM,MAAM,IAAIJ,UAAU,2BAC3CH,GAAOO,EAAK,MAAM,IAAIuN,WAAW,oCACjCwH,EAAY,IAAIC,GAAOM,KAAK3C,KAAM2C,KAAKzC,aACtC,IAAI9S,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IAAK,OAC5BuJ,EAAMgM,KAAKmC,OAAO1X,GACxBqN,EAAQ9D,EAAK,CAAE7J,IAAAA,EAAKO,IAAAA,EAAKoM,OAAQ9C,IACjCyL,EAAU6C,OAAO7X,EAAGuJ,UAEfyL,EAGTqJ,aAAa/R,EAAU,OACE,iBAAZA,QACH,IAAIzM,UAAU,mCAEhBH,IAAEA,EAAM,EAARO,IAAWA,EAAM,GAAMqM,MACxB5K,OAAO0c,SAAS1e,GAAM,MAAM,IAAIG,UAAU,4BAC1C6B,OAAO0c,SAASne,GAAM,MAAM,IAAIJ,UAAU,2BAC3CH,GAAOO,EAAK,MAAM,IAAIuN,WAAW,oCACjCwH,EAAY,IAAIC,GAAOM,KAAK3C,KAAM2C,KAAKzC,aACtC,IAAI9S,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,IAAK,OAC/BkV,EAASK,KAAK0C,UAAUjY,GAC9BqN,EAAQ6H,EAAQ,CACdxV,IAAKA,EACLO,IAAKA,EACLoM,OAAQ6I,IAEVF,EAAUoD,UAAUpY,EAAGkV,UAElBF,EAGTsJ,iBACQC,EAAS/W,KAAKQ,KAAKuN,KAAKzC,QAAU,OACnC,IAAI9S,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8d,EAAQ9d,IAAK,KAC3B+d,EAAQjJ,KAAKM,IAAI7V,EAAGS,GACpBge,EAAOlJ,KAAKM,IAAI7V,EAAGuV,KAAKzC,QAAU,EAAIrS,QACrC0U,IAAInV,EAAGS,EAAGge,QACVtJ,IAAInV,EAAGuV,KAAKzC,QAAU,EAAIrS,EAAG+d,UAG/BjJ,KAGTmJ,oBACQH,EAAS/W,KAAKQ,KAAKuN,KAAK3C,KAAO,OAChC,IAAInS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,QAC3B,IAAIT,EAAI,EAAGA,EAAIue,EAAQve,IAAK,KAC3Bwe,EAAQjJ,KAAKM,IAAI7V,EAAGS,GACpBge,EAAOlJ,KAAKM,IAAIN,KAAK3C,KAAO,EAAI5S,EAAGS,QAClC0U,IAAInV,EAAGS,EAAGge,QACVtJ,IAAII,KAAK3C,KAAO,EAAI5S,EAAGS,EAAG+d,UAG5BjJ,KAGToJ,iBAAiBxE,GACfA,EAAQlF,GAAOW,YAAYuE,OAEvBhT,EAAIoO,KAAK3C,KACT1L,EAAIqO,KAAKzC,QACT1J,EAAI+Q,EAAMvH,KACVgM,EAAIzE,EAAMrH,QAEV3D,EAAS,IAAI8F,GAAO9N,EAAIiC,EAAGlC,EAAI0X,OAC9B,IAAI5e,EAAI,EAAGA,EAAImH,EAAGnH,QAChB,IAAIS,EAAI,EAAGA,EAAIyG,EAAGzG,QAChB,IAAIoE,EAAI,EAAGA,EAAIuE,EAAGvE,QAChB,IAAI4Q,EAAI,EAAGA,EAAImJ,EAAGnJ,IACrBtG,EAAOgG,IAAI/L,EAAIpJ,EAAI6E,EAAG+Z,EAAIne,EAAIgV,EAAGF,KAAKM,IAAI7V,EAAGS,GAAK0Z,EAAMtE,IAAIhR,EAAG4Q,WAKhEtG,EAGT9F,gBACM8F,EAAS,IAAI8F,GAAOM,KAAKzC,QAASyC,KAAK3C,UACtC,IAAI5S,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,IAChC0O,EAAOgG,IAAI1U,EAAGT,EAAGuV,KAAKM,IAAI7V,EAAGS,WAG1B0O,EAGT0P,SAASC,EAAkBC,QACpB,IAAI/e,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,SACxB6X,OAAO7X,EAAGuV,KAAKmC,OAAO1X,GAAG2K,KAAKmU,WAE9BvJ,KAGTyJ,YAAYF,EAAkBC,QACvB,IAAI/e,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,SAC3BoY,UAAUpY,EAAGuV,KAAK0C,UAAUjY,GAAG2K,KAAKmU,WAEpCvJ,KAGT0I,UAAUvK,EAAUC,EAAQC,EAAaC,GACvCJ,GAAW8B,KAAM7B,EAAUC,EAAQC,EAAaC,OAC5CmB,EAAY,IAAIC,GAClBtB,EAASD,EAAW,EACpBG,EAAYD,EAAc,OAEvB,IAAI5T,EAAI0T,EAAU1T,GAAK2T,EAAQ3T,QAC7B,IAAIS,EAAImT,EAAanT,GAAKoT,EAAWpT,IACxCuU,EAAUG,IAAInV,EAAI0T,EAAUjT,EAAImT,EAAa2B,KAAKM,IAAI7V,EAAGS,WAGtDuU,EAGTiK,aAAaC,EAAStL,EAAaC,WACbtH,IAAhBqH,IAA2BA,EAAc,QAC3BrH,IAAdsH,IAAyBA,EAAY0B,KAAKzC,QAAU,GAEtDc,EAAcC,GACdD,EAAc,GACdA,GAAe2B,KAAKzC,SACpBe,EAAY,GACZA,GAAa0B,KAAKzC,cAEZ,IAAItF,WAAW,6BAGnBwH,EAAY,IAAIC,GAAOiK,EAAQpf,OAAQ+T,EAAYD,EAAc,OAChE,IAAI5T,EAAI,EAAGA,EAAIkf,EAAQpf,OAAQE,QAC7B,IAAIS,EAAImT,EAAanT,GAAKoT,EAAWpT,IAAK,IACzCye,EAAQlf,GAAK,GAAKkf,EAAQlf,IAAMuV,KAAK3C,WACjC,IAAIpF,6CAAsC0R,EAAQlf,KAE1DgV,EAAUG,IAAInV,EAAGS,EAAImT,EAAa2B,KAAKM,IAAIqJ,EAAQlf,GAAIS,WAGpDuU,EAGTmK,gBAAgBD,EAASxL,EAAUC,WAChBpH,IAAbmH,IAAwBA,EAAW,QACxBnH,IAAXoH,IAAsBA,EAAS4B,KAAK3C,KAAO,GAE7Cc,EAAWC,GACXD,EAAW,GACXA,GAAY6B,KAAK3C,MACjBe,EAAS,GACTA,GAAU4B,KAAK3C,WAET,IAAIpF,WAAW,6BAGnBwH,EAAY,IAAIC,GAAOtB,EAASD,EAAW,EAAGwL,EAAQpf,YACrD,IAAIE,EAAI,EAAGA,EAAIkf,EAAQpf,OAAQE,QAC7B,IAAIS,EAAIiT,EAAUjT,GAAKkT,EAAQlT,IAAK,IACnCye,EAAQlf,GAAK,GAAKkf,EAAQlf,IAAMuV,KAAKzC,cACjC,IAAItF,gDAAyC0R,EAAQlf,KAE7DgV,EAAUG,IAAI1U,EAAIiT,EAAU1T,EAAGuV,KAAKM,IAAIpV,EAAGye,EAAQlf,YAGhDgV,EAGTuC,aAAajO,EAAQoK,EAAUE,GAI7BH,GAAW8B,KAAM7B,EAFJA,GADbpK,EAAS2L,GAAOW,YAAYtM,IACGsJ,KAAO,EAEHgB,EADnBA,EAActK,EAAOwJ,QAAU,OAE1C,IAAI9S,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,SAC7B0U,IAAIzB,EAAW1T,EAAG4T,EAAcnT,EAAG6I,EAAOuM,IAAI7V,EAAGS,WAGnD8U,KAGT6J,UAAUhM,EAAYI,OAChB0L,EFpmCD,SAAsB5V,EAAQ8J,EAAYI,SACxC,CACLjK,IAAK4J,EAAgB7J,EAAQ8J,GAC7B8B,OAAQ3B,GAAmBjK,EAAQkK,IEimCrB6L,CAAa9J,KAAMnC,EAAYI,GACzCwB,EAAY,IAAIC,GAAO7B,EAAWtT,OAAQ0T,EAAc1T,YACvD,IAAIE,EAAI,EAAGA,EAAIkf,EAAQ3V,IAAIzJ,OAAQE,IAAK,KACvCsf,EAAWJ,EAAQ3V,IAAIvJ,OACtB,IAAIS,EAAI,EAAGA,EAAIye,EAAQhK,OAAOpV,OAAQW,IAAK,KAC1C8e,EAAcL,EAAQhK,OAAOzU,GACjCuU,EAAUG,IAAInV,EAAGS,EAAG8U,KAAKM,IAAIyJ,EAAUC,YAGpCvK,EAGTwK,YACM9f,EAAM8H,KAAK9H,IAAI6V,KAAK3C,KAAM2C,KAAKzC,SAC/B0M,EAAQ,MACP,IAAIxf,EAAI,EAAGA,EAAIN,EAAKM,IACvBwf,GAASjK,KAAKM,IAAI7V,EAAGA,UAEhBwf,EAGTzI,YACM/B,EAAY,IAAIC,GAAOM,KAAK3C,KAAM2C,KAAKzC,aACtC,IAAIvJ,EAAM,EAAGA,EAAMgM,KAAK3C,KAAMrJ,QAC5B,IAAI2L,EAAS,EAAGA,EAASK,KAAKzC,QAASoC,IAC1CF,EAAUG,IAAI5L,EAAK2L,EAAQK,KAAKM,IAAItM,EAAK2L,WAGtCF,EAGTjJ,IAAI0T,UACMA,OACD,aCrsCJ,SAAkBnW,OACnByC,EAAMgI,GAASzK,EAAOsJ,UACrB,IAAI5S,EAAI,EAAGA,EAAIsJ,EAAOsJ,OAAQ5S,MAC5B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,UAAWrS,EACpCsL,EAAI/L,IAAMsJ,EAAOuM,IAAI7V,EAAGS,UAGrBsL,ED+rCM2T,CAASnK,UACb,gBC7rCJ,SAAqBjM,OACtByC,EAAMgI,GAASzK,EAAOwJ,aACrB,IAAI9S,EAAI,EAAGA,EAAIsJ,EAAOsJ,OAAQ5S,MAC5B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,UAAWrS,EACpCsL,EAAItL,IAAM6I,EAAOuM,IAAI7V,EAAGS,UAGrBsL,EDurCM4T,CAAYpK,gBAChBhJ,SCrrCJ,SAAgBjD,OACjB/B,EAAI,MACH,IAAIvH,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,IAClC8G,GAAK+B,EAAOuM,IAAI7V,EAAGS,UAGhB8G,ED+qCMqY,CAAOrK,oBAER,IAAI9T,gCAAyBge,KAIzCI,QAAQJ,UACEA,OACD,aCprCJ,SAAsBnW,OACvByC,EAAMgI,GAASzK,EAAOsJ,KAAM,OAC3B,IAAI5S,EAAI,EAAGA,EAAIsJ,EAAOsJ,OAAQ5S,MAC5B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,UAAWrS,EACpCsL,EAAI/L,IAAMsJ,EAAOuM,IAAI7V,EAAGS,UAGrBsL,ED8qCM+T,CAAavK,UACjB,gBC5qCJ,SAAyBjM,OAC1ByC,EAAMgI,GAASzK,EAAOwJ,QAAS,OAC9B,IAAI9S,EAAI,EAAGA,EAAIsJ,EAAOsJ,OAAQ5S,MAC5B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,UAAWrS,EACpCsL,EAAItL,IAAM6I,EAAOuM,IAAI7V,EAAGS,UAGrBsL,EDsqCMgU,CAAgBxK,gBACpBhJ,SCpqCJ,SAAoBjD,OACrB/B,EAAI,MACH,IAAIvH,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,IAClC8G,GAAK+B,EAAOuM,IAAI7V,EAAGS,UAGhB8G,ED8pCMyY,CAAWzK,oBAEZ,IAAI9T,gCAAyBge,KAIzC3U,KAAK2U,SACG1T,EAAMwJ,KAAKxJ,IAAI0T,UACbA,OACD,UACE,IAAIzf,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IAC7B+L,EAAI/L,IAAMuV,KAAKzC,eAEV/G,MAEJ,aACE,IAAI/L,EAAI,EAAGA,EAAIuV,KAAKzC,QAAS9S,IAChC+L,EAAI/L,IAAMuV,KAAK3C,YAEV7G,YAEJQ,SACIR,EAAMwJ,KAAKhH,mBAEZ,IAAI9M,gCAAyBge,KAIzCxY,SAASwY,EAAInT,EAAU,OACH,iBAAPmT,IACTnT,EAAUmT,EACVA,OAAKlT,GAEgB,iBAAZD,QACH,IAAIzM,UAAU,mCAEhBogB,SAAEA,GAAW,EAAbnV,KAAmBA,EAAOyK,KAAKzK,KAAK2U,IAAQnT,KAC1B,kBAAb2T,QACH,IAAIpgB,UAAU,qCAEd4f,OACD,UACEje,MAAM5B,QAAQkL,SACX,IAAIjL,UAAU,gCCtsCvB,SAAuByJ,EAAQ2W,EAAUnV,SACxC8H,EAAOtJ,EAAOsJ,KACd6K,EAAOnU,EAAOwJ,QACd7L,EAAW,OAEZ,IAAIjH,EAAI,EAAGA,EAAI4S,EAAM5S,IAAK,KACzBkgB,EAAO,EACPC,EAAO,EACP5Z,EAAI,MACH,IAAI9F,EAAI,EAAGA,EAAIgd,EAAMhd,IACxB8F,EAAI+C,EAAOuM,IAAI7V,EAAGS,GAAKqK,EAAK9K,GAC5BkgB,GAAQ3Z,EACR4Z,GAAQ5Z,EAAIA,EAEV0Z,EACFhZ,EAAS7B,MAAM+a,EAAQD,EAAOA,EAAQzC,IAASA,EAAO,IAEtDxW,EAAS7B,MAAM+a,EAAQD,EAAOA,EAAQzC,GAAQA,UAG3CxW,EDorCMmZ,CAAc7K,KAAM0K,EAAUnV,OAElC,aACEtJ,MAAM5B,QAAQkL,SACX,IAAIjL,UAAU,gCCrrCvB,SAA0ByJ,EAAQ2W,EAAUnV,SAC3C8H,EAAOtJ,EAAOsJ,KACd6K,EAAOnU,EAAOwJ,QACd7L,EAAW,OAEZ,IAAIxG,EAAI,EAAGA,EAAIgd,EAAMhd,IAAK,KACzByf,EAAO,EACPC,EAAO,EACP5Z,EAAI,MACH,IAAIvG,EAAI,EAAGA,EAAI4S,EAAM5S,IACxBuG,EAAI+C,EAAOuM,IAAI7V,EAAGS,GAAKqK,EAAKrK,GAC5Byf,GAAQ3Z,EACR4Z,GAAQ5Z,EAAIA,EAEV0Z,EACFhZ,EAAS7B,MAAM+a,EAAQD,EAAOA,EAAQtN,IAASA,EAAO,IAEtD3L,EAAS7B,MAAM+a,EAAQD,EAAOA,EAAQtN,GAAQA,UAG3C3L,EDmqCMoZ,CAAiB9K,KAAM0K,EAAUnV,aAErCyB,KACiB,iBAATzB,QACH,IAAIjL,UAAU,gCCpqCvB,SAAqByJ,EAAQ2W,EAAUnV,SACtC8H,EAAOtJ,EAAOsJ,KACd6K,EAAOnU,EAAOwJ,QACdvE,EAAOqE,EAAO6K,MAEhByC,EAAO,EACPC,EAAO,EACP5Z,EAAI,MACH,IAAIvG,EAAI,EAAGA,EAAI4S,EAAM5S,QACnB,IAAIS,EAAI,EAAGA,EAAIgd,EAAMhd,IACxB8F,EAAI+C,EAAOuM,IAAI7V,EAAGS,GAAKqK,EACvBoV,GAAQ3Z,EACR4Z,GAAQ5Z,EAAIA,SAGZ0Z,GACME,EAAQD,EAAOA,EAAQ3R,IAASA,EAAO,IAEvC4R,EAAQD,EAAOA,EAAQ3R,GAAQA,EDopC5B+R,CAAY/K,KAAM0K,EAAUnV,iBAG7B,IAAIrJ,gCAAyBge,KAIzCc,kBAAkBd,EAAInT,GACF,iBAAPmT,IACTnT,EAAUmT,EACVA,OAAKlT,SAEDtF,EAAWsO,KAAKtO,SAASwY,EAAInT,WACxBC,IAAPkT,SACKjY,KAAKC,KAAKR,OAEZ,IAAIjH,EAAI,EAAGA,EAAIiH,EAASnH,OAAQE,IACnCiH,EAASjH,GAAKwH,KAAKC,KAAKR,EAASjH,WAE5BiH,EAIXuZ,OAAOf,EAAInT,EAAU,OACD,iBAAPmT,IACTnT,EAAUmT,EACVA,OAAKlT,GAEgB,iBAAZD,QACH,IAAIzM,UAAU,mCAEhB2gB,OAAEA,EAASjL,KAAKzK,KAAK2U,IAAQnT,SAC3BmT,OACD,UACEje,MAAM5B,QAAQ4gB,SACX,IAAI3gB,UAAU,kCCnrCvB,SAAqByJ,EAAQwB,OAC7B,IAAI9K,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,IAClC6I,EAAO6L,IAAInV,EAAGS,EAAG6I,EAAOuM,IAAI7V,EAAGS,GAAKqK,EAAK9K,IDkrCvCygB,CAAYlL,KAAMiL,GACXjL,SAEJ,aACE/T,MAAM5B,QAAQ4gB,SACX,IAAI3gB,UAAU,kCClrCvB,SAAwByJ,EAAQwB,OAChC,IAAI9K,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,IAClC6I,EAAO6L,IAAInV,EAAGS,EAAG6I,EAAOuM,IAAI7V,EAAGS,GAAKqK,EAAKrK,IDirCvCigB,CAAenL,KAAMiL,GACdjL,eAEJhJ,KACmB,iBAAXiU,QACH,IAAI3gB,UAAU,kCCjrCvB,SAAmByJ,EAAQwB,OAC3B,IAAI9K,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,IAClC6I,EAAO6L,IAAInV,EAAGS,EAAG6I,EAAOuM,IAAI7V,EAAGS,GAAKqK,GDgrClC6V,CAAUpL,KAAMiL,GACTjL,mBAGD,IAAI9T,gCAAyBge,KAIzCmB,MAAMnB,EAAInT,EAAU,OACA,iBAAPmT,IACTnT,EAAUmT,EACVA,OAAKlT,GAEgB,iBAAZD,QACH,IAAIzM,UAAU,iCAElB+gB,EAAQtU,EAAQsU,aACZnB,OACD,cACWlT,IAAVqU,EACFA,EC/rCH,SAAuBtX,SACtBsX,EAAQ,OACT,IAAI5gB,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,IAAK,KAChC+L,EAAM,MACL,IAAItL,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,IAClCsL,GAAOvE,KAAKmB,IAAIW,EAAOuM,IAAI7V,EAAGS,GAAI,IAAM6I,EAAOwJ,QAAU,GAE3D8N,EAAMxb,KAAKoC,KAAKC,KAAKsE,WAEhB6U,EDsrCSC,CAActL,WACjB,IAAK/T,MAAM5B,QAAQghB,SAClB,IAAI/gB,UAAU,iCCrrCvB,SAAoByJ,EAAQsX,OAC5B,IAAI5gB,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,IAClC6I,EAAO6L,IAAInV,EAAGS,EAAG6I,EAAOuM,IAAI7V,EAAGS,GAAKmgB,EAAM5gB,IDorCxC8gB,CAAWvL,KAAMqL,GACVrL,SAEJ,iBACWhJ,IAAVqU,EACFA,ECprCH,SAA0BtX,SACzBsX,EAAQ,OACT,IAAIngB,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,IAAK,KACnCsL,EAAM,MACL,IAAI/L,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,IAC/B+L,GAAOvE,KAAKmB,IAAIW,EAAOuM,IAAI7V,EAAGS,GAAI,IAAM6I,EAAOsJ,KAAO,GAExDgO,EAAMxb,KAAKoC,KAAKC,KAAKsE,WAEhB6U,ED2qCSG,CAAiBxL,WACpB,IAAK/T,MAAM5B,QAAQghB,SAClB,IAAI/gB,UAAU,iCC1qCvB,SAAuByJ,EAAQsX,OAC/B,IAAI5gB,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,IAClC6I,EAAO6L,IAAInV,EAAGS,EAAG6I,EAAOuM,IAAI7V,EAAGS,GAAKmgB,EAAMngB,IDyqCxCugB,CAAczL,KAAMqL,GACbrL,eAEJhJ,UACWA,IAAVqU,EACFA,ECzqCH,SAAqBtX,SACpB2X,EAAU3X,EAAOiF,KAAO,MAC1BxC,EAAM,MACL,IAAItL,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,QAC7B,IAAIT,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,IAC/B+L,GAAOvE,KAAKmB,IAAIW,EAAOuM,IAAI7V,EAAGS,GAAI,GAAKwgB,SAGpCzZ,KAAKC,KAAKsE,GDiqCDmV,CAAY3L,WACf,GAAqB,iBAAVqL,QACV,IAAI/gB,UAAU,iCChqCvB,SAAkByJ,EAAQsX,OAC1B,IAAI5gB,EAAI,EAAGA,EAAIsJ,EAAOsJ,KAAM5S,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOwJ,QAASrS,IAClC6I,EAAO6L,IAAInV,EAAGS,EAAG6I,EAAOuM,IAAI7V,EAAGS,GAAKmgB,GD+pClCO,CAAS5L,KAAMqL,GACRrL,mBAGD,IAAI9T,gCAAyBge,MAY3C,SAASV,GAAe5e,EAAGQ,UAClBR,EAAIQ,EARbiU,GAAevV,UAAU0W,MAAQ,SACX,oBAAXjI,SACT8G,GAAevV,UACbyO,OAAOsT,IAAI,+BD33CR,iBACCC,EAAS,IAAI/J,OAAO,GACpBgK,EAAa,IAAIhK,OAAO,mBACpB/B,KAAKpS,YAAYmC,oBAC3B+b,gBACAC,UAWF,SAAqBhY,EAAQ+X,SACrBzO,KAAEA,EAAFE,QAAQA,GAAYxJ,EACpBiY,EAAO/Z,KAAK9H,IAAIkT,EANR,IAOR4O,EAAOha,KAAK9H,IAAIoT,EANL,IAOX3D,EAAS,OACV,IAAInP,EAAI,EAAGA,EAAIuhB,EAAMvhB,IAAK,KACzByhB,EAAO,OACN,IAAIhhB,EAAI,EAAGA,EAAI+gB,EAAM/gB,IACxBghB,EAAKrc,KAAK4O,GAAa1K,EAAOuM,IAAI7V,EAAGS,KAEvC0O,EAAO/J,eAAQqc,EAAKC,KAAK,OAEvBF,IAAS1O,IACX3D,EAAOA,EAAOrP,OAAS,mBAAcgT,EAhBtB,qBAkBbyO,IAAS3O,GACXzD,EAAO/J,mBAAYwN,EApBP,yBAsBPzD,EAAOuS,iBAAUL,IA7BXM,CAAYpM,KAAM+L,gBAC/BD,gBACAA,mBAAe9L,KAAK3C,kBACpByO,sBAAkB9L,KAAKzC,iBC43CzB8B,GAAe9I,OAAS8I,GAAegN,KACvChN,GAAeiN,UAAYjN,GAAekN,QAC1ClN,GAAemN,SAAWnN,GAAegF,KACzChF,GAAevV,UAAU0iB,SAAWnN,GAAevV,UAAUua,KAC7DhF,GAAejN,SAAWiN,GAAeoN,IACzCpN,GAAevV,UAAU4iB,OAASrN,GAAevV,UAAUmY,IAC3D5C,GAAevV,UAAU6iB,cACvBtN,GAAevV,UAAUsf,iBAEZ,MAAM1J,WAAeL,GAClCzR,YAAYgf,EAAOC,cAEbnN,GAAOa,SAASqM,UACXA,EAAMpL,QACR,GAAIrV,OAAO2T,UAAU8M,IAAUA,EAAQ,EAAG,SAE1CrY,KAAO,KACRpI,OAAO2T,UAAU+M,IAAaA,EAAW,SAKrC,IAAIviB,UAAU,2CAJf,IAAIG,EAAI,EAAGA,EAAImiB,EAAOniB,SACpB8J,KAAK1E,KAAK,IAAIvD,aAAaugB,QAK/B,CAAA,IAAI5gB,MAAM5B,QAAQuiB,SAkBjB,IAAItiB,UACR,wDAnB6B,OAEzBwiB,EAAYF,KAClBA,EAAQE,EAAUviB,OAEM,iBADxBsiB,EAAWC,EAAU,GAAGviB,SACyB,IAAbsiB,QAC5B,IAAIviB,UACR,0DAGCiK,KAAO,OACP,IAAI9J,EAAI,EAAGA,EAAImiB,EAAOniB,IAAK,IAC1BqiB,EAAUriB,GAAGF,SAAWsiB,QACpB,IAAI5U,WAAW,sCAElB1D,KAAK1E,KAAKvD,aAAasM,KAAKkU,EAAUriB,mBAO1C4S,KAAOuP,OACPrP,QAAUsP,EACR7M,KAGTJ,IAAImK,EAAUC,EAAapd,eACpB2H,KAAKwV,GAAUC,GAAepd,EAC5BoT,KAGTM,IAAIyJ,EAAUC,UACLhK,KAAKzL,KAAKwV,GAAUC,GAG7B+C,UAAU5P,MACRD,EAAc8C,KAAM7C,GACF,IAAd6C,KAAK3C,WACD,IAAIpF,WAAW,sDAElB1D,KAAKyY,OAAO7P,EAAO,QACnBE,MAAQ,EACN2C,KAGTiN,OAAO9P,EAAO1Q,eACEuK,IAAVvK,IACFA,EAAQ0Q,EACRA,EAAQ6C,KAAK3C,MAEfH,EAAc8C,KAAM7C,GAAO,GAC3B1Q,EAAQH,aAAasM,KAAK4E,EAAewC,KAAMvT,SAC1C8H,KAAKyY,OAAO7P,EAAO,EAAG1Q,QACtB4Q,MAAQ,EACN2C,KAGTkN,aAAa/P,MACXG,EAAiB0C,KAAM7C,GACF,IAAjB6C,KAAKzC,cACD,IAAItF,WAAW,iDAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IAAK,OAC5B0iB,EAAS,IAAI7gB,aAAa0T,KAAKzC,QAAU,OAC1C,IAAIrS,EAAI,EAAGA,EAAIiS,EAAOjS,IACzBiiB,EAAOjiB,GAAK8U,KAAKzL,KAAK9J,GAAGS,OAEtB,IAAIA,EAAIiS,EAAQ,EAAGjS,EAAI8U,KAAKzC,QAASrS,IACxCiiB,EAAOjiB,EAAI,GAAK8U,KAAKzL,KAAK9J,GAAGS,QAE1BqJ,KAAK9J,GAAK0iB,cAEZ5P,SAAW,EACTyC,KAGToN,UAAUjQ,EAAO1Q,QACM,IAAVA,IACTA,EAAQ0Q,EACRA,EAAQ6C,KAAKzC,SAEfD,EAAiB0C,KAAM7C,GAAO,GAC9B1Q,EAAQkR,EAAkBqC,KAAMvT,OAC3B,IAAIhC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,IAAK,OAC5B0iB,EAAS,IAAI7gB,aAAa0T,KAAKzC,QAAU,OAC3CrS,EAAI,OACDA,EAAIiS,EAAOjS,IAChBiiB,EAAOjiB,GAAK8U,KAAKzL,KAAK9J,GAAGS,OAE3BiiB,EAAOjiB,KAAOuB,EAAMhC,GACbS,EAAI8U,KAAKzC,QAAU,EAAGrS,IAC3BiiB,EAAOjiB,GAAK8U,KAAKzL,KAAK9J,GAAGS,EAAI,QAE1BqJ,KAAK9J,GAAK0iB,cAEZ5P,SAAW,EACTyC,OE7/CJ,SAA+BX,EAAgBK,GACpDL,EAAevV,UAAU0S,IAAM,SAAa5P,SACrB,iBAAVA,EAA2BoT,KAAKqN,KAAKzgB,GACzCoT,KAAKsN,KAAK1gB,IAGnByS,EAAevV,UAAUujB,KAAO,SAAczgB,OACvC,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK0B,UAG7BoT,MAGTX,EAAevV,UAAUwjB,KAAO,SAAcvZ,MAC5CA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK6I,EAAOuM,IAAI7V,EAAGS,WAG3C8U,MAGTX,EAAe7C,IAAM,SAAazI,EAAQnH,UACtB,IAAI8S,EAAO3L,GACZyI,IAAI5P,IAGvByS,EAAevV,UAAU6e,IAAM,SAAa/b,SACrB,iBAAVA,EAA2BoT,KAAKuN,KAAK3gB,GACzCoT,KAAKwN,KAAK5gB,IAGnByS,EAAevV,UAAUyjB,KAAO,SAAc3gB,OACvC,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK0B,UAG7BoT,MAGTX,EAAevV,UAAU0jB,KAAO,SAAczZ,MAC5CA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK6I,EAAOuM,IAAI7V,EAAGS,WAG3C8U,MAGTX,EAAesJ,IAAM,SAAa5U,EAAQnH,UACtB,IAAI8S,EAAO3L,GACZ4U,IAAI/b,IAEvByS,EAAevV,UAAU2jB,SAAWpO,EAAevV,UAAU6e,IAC7DtJ,EAAevV,UAAU4jB,UAAYrO,EAAevV,UAAUyjB,KAC9DlO,EAAevV,UAAU6jB,UAAYtO,EAAevV,UAAU0jB,KAC9DnO,EAAeoO,SAAWpO,EAAesJ,IAEzCtJ,EAAevV,UAAU8jB,IAAM,SAAahhB,SACrB,iBAAVA,EAA2BoT,KAAKkC,KAAKtV,GACzCoT,KAAK6N,KAAKjhB,IAGnByS,EAAevV,UAAUoY,KAAO,SAActV,OACvC,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK0B,UAG7BoT,MAGTX,EAAevV,UAAU+jB,KAAO,SAAc9Z,MAC5CA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK6I,EAAOuM,IAAI7V,EAAGS,WAG3C8U,MAGTX,EAAeuO,IAAM,SAAa7Z,EAAQnH,UACtB,IAAI8S,EAAO3L,GACZ6Z,IAAIhhB,IAEvByS,EAAevV,UAAUgkB,SAAWzO,EAAevV,UAAU8jB,IAC7DvO,EAAevV,UAAUikB,UAAY1O,EAAevV,UAAUoY,KAC9D7C,EAAevV,UAAUkkB,UAAY3O,EAAevV,UAAU+jB,KAC9DxO,EAAeyO,SAAWzO,EAAeuO,IAEzCvO,EAAevV,UAAUmkB,IAAM,SAAarhB,SACrB,iBAAVA,EAA2BoT,KAAKkO,KAAKthB,GACzCoT,KAAKmO,KAAKvhB,IAGnByS,EAAevV,UAAUokB,KAAO,SAActhB,OACvC,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK0B,UAG7BoT,MAGTX,EAAevV,UAAUqkB,KAAO,SAAcpa,MAC5CA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK6I,EAAOuM,IAAI7V,EAAGS,WAG3C8U,MAGTX,EAAe4O,IAAM,SAAala,EAAQnH,UACtB,IAAI8S,EAAO3L,GACZka,IAAIrhB,IAEvByS,EAAevV,UAAUskB,OAAS/O,EAAevV,UAAUmkB,IAC3D5O,EAAevV,UAAUukB,QAAUhP,EAAevV,UAAUokB,KAC5D7O,EAAevV,UAAUwkB,QAAUjP,EAAevV,UAAUqkB,KAC5D9O,EAAe+O,OAAS/O,EAAe4O,IAEvC5O,EAAevV,UAAUykB,IAAM,SAAa3hB,SACrB,iBAAVA,EAA2BoT,KAAKwO,KAAK5hB,GACzCoT,KAAKyO,KAAK7hB,IAGnByS,EAAevV,UAAU0kB,KAAO,SAAc5hB,OACvC,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK0B,UAG7BoT,MAGTX,EAAevV,UAAU2kB,KAAO,SAAc1a,MAC5CA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK6I,EAAOuM,IAAI7V,EAAGS,WAG3C8U,MAGTX,EAAekP,IAAM,SAAaxa,EAAQnH,UACtB,IAAI8S,EAAO3L,GACZwa,IAAI3hB,IAEvByS,EAAevV,UAAU4kB,QAAUrP,EAAevV,UAAUykB,IAC5DlP,EAAevV,UAAU6kB,SAAWtP,EAAevV,UAAU0kB,KAC7DnP,EAAevV,UAAU8kB,SAAWvP,EAAevV,UAAU2kB,KAC7DpP,EAAeqP,QAAUrP,EAAekP,IAExClP,EAAevV,UAAU+kB,IAAM,SAAajiB,SACrB,iBAAVA,EAA2BoT,KAAK8O,KAAKliB,GACzCoT,KAAK+O,KAAKniB,IAGnByS,EAAevV,UAAUglB,KAAO,SAAcliB,OACvC,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK0B,UAG7BoT,MAGTX,EAAevV,UAAUilB,KAAO,SAAchb,MAC5CA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK6I,EAAOuM,IAAI7V,EAAGS,WAG3C8U,MAGTX,EAAewP,IAAM,SAAa9a,EAAQnH,UACtB,IAAI8S,EAAO3L,GACZ8a,IAAIjiB,IAGvByS,EAAevV,UAAUklB,GAAK,SAAYpiB,SACnB,iBAAVA,EAA2BoT,KAAKiP,IAAIriB,GACxCoT,KAAKkP,IAAItiB,IAGlByS,EAAevV,UAAUmlB,IAAM,SAAariB,OACrC,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK0B,UAG7BoT,MAGTX,EAAevV,UAAUolB,IAAM,SAAanb,MAC1CA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK6I,EAAOuM,IAAI7V,EAAGS,WAG3C8U,MAGTX,EAAe2P,GAAK,SAAYjb,EAAQnH,UACpB,IAAI8S,EAAO3L,GACZib,GAAGpiB,IAGtByS,EAAevV,UAAUqlB,IAAM,SAAaviB,SACrB,iBAAVA,EAA2BoT,KAAKoP,KAAKxiB,GACzCoT,KAAKqP,KAAKziB,IAGnByS,EAAevV,UAAUslB,KAAO,SAAcxiB,OACvC,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK0B,UAG7BoT,MAGTX,EAAevV,UAAUulB,KAAO,SAActb,MAC5CA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,GAAK6I,EAAOuM,IAAI7V,EAAGS,WAG3C8U,MAGTX,EAAe8P,IAAM,SAAapb,EAAQnH,UACtB,IAAI8S,EAAO3L,GACZob,IAAIviB,IAGvByS,EAAevV,UAAUwlB,UAAY,SAAmB1iB,SACjC,iBAAVA,EAA2BoT,KAAKuP,WAAW3iB,GAC/CoT,KAAKwP,WAAW5iB,IAGzByS,EAAevV,UAAUylB,WAAa,SAAoB3iB,OACnD,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,IAAM0B,UAG9BoT,MAGTX,EAAevV,UAAU0lB,WAAa,SAAoBzb,MACxDA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,IAAM6I,EAAOuM,IAAI7V,EAAGS,WAG5C8U,MAGTX,EAAeiQ,UAAY,SAAmBvb,EAAQnH,UAClC,IAAI8S,EAAO3L,GACZub,UAAU1iB,IAG7ByS,EAAevV,UAAU2lB,0BAA4B,SAAmC7iB,SACjE,iBAAVA,EAA2BoT,KAAK0P,2BAA2B9iB,GAC/DoT,KAAK2P,2BAA2B/iB,IAGzCyS,EAAevV,UAAU4lB,2BAA6B,SAAoC9iB,OACnF,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,IAAM0B,UAG9BoT,MAGTX,EAAevV,UAAU6lB,2BAA6B,SAAoC5b,MACxFA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,IAAM6I,EAAOuM,IAAI7V,EAAGS,WAG5C8U,MAGTX,EAAeoQ,0BAA4B,SAAmC1b,EAAQnH,UAClE,IAAI8S,EAAO3L,GACZ0b,0BAA0B7iB,IAG7CyS,EAAevV,UAAU8lB,WAAa,SAAoBhjB,SACnC,iBAAVA,EAA2BoT,KAAK6P,YAAYjjB,GAChDoT,KAAK8P,YAAYljB,IAG1ByS,EAAevV,UAAU+lB,YAAc,SAAqBjjB,OACrD,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,KAAO0B,UAG/BoT,MAGTX,EAAevV,UAAUgmB,YAAc,SAAqB/b,MAC1DA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG8U,KAAKM,IAAI7V,EAAGS,KAAO6I,EAAOuM,IAAI7V,EAAGS,WAG7C8U,MAGTX,EAAeuQ,WAAa,SAAoB7b,EAAQnH,UACpC,IAAI8S,EAAO3L,GACZ6b,WAAWhjB,IAE9ByS,EAAevV,UAAUimB,mBAAqB1Q,EAAevV,UAAU8lB,WACvEvQ,EAAevV,UAAUkmB,oBAAsB3Q,EAAevV,UAAU+lB,YACxExQ,EAAevV,UAAUmmB,oBAAsB5Q,EAAevV,UAAUgmB,YACxEzQ,EAAe0Q,mBAAqB1Q,EAAeuQ,WAEnDvQ,EAAevV,UAAUomB,IAAM,eACxB,IAAIzlB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,GAAK8U,KAAKM,IAAI7V,EAAGS,WAG1B8U,MAGTX,EAAe6Q,IAAM,SAAanc,UACd,IAAI2L,EAAO3L,GACZmc,OAGnB7Q,EAAevV,UAAUoJ,IAAM,eACxB,IAAIzI,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKiB,IAAI8M,KAAKM,IAAI7V,EAAGS,YAGjC8U,MAGTX,EAAenM,IAAM,SAAaa,UACd,IAAI2L,EAAO3L,GACZb,OAGnBmM,EAAevV,UAAUqmB,KAAO,eACzB,IAAI1lB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKke,KAAKnQ,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAe8Q,KAAO,SAAcpc,UAChB,IAAI2L,EAAO3L,GACZoc,QAGnB9Q,EAAevV,UAAUsmB,MAAQ,eAC1B,IAAI3lB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKme,MAAMpQ,KAAKM,IAAI7V,EAAGS,YAGnC8U,MAGTX,EAAe+Q,MAAQ,SAAerc,UAClB,IAAI2L,EAAO3L,GACZqc,SAGnB/Q,EAAevV,UAAUumB,KAAO,eACzB,IAAI5lB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKoe,KAAKrQ,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAegR,KAAO,SAActc,UAChB,IAAI2L,EAAO3L,GACZsc,QAGnBhR,EAAevV,UAAUwmB,MAAQ,eAC1B,IAAI7lB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKqe,MAAMtQ,KAAKM,IAAI7V,EAAGS,YAGnC8U,MAGTX,EAAeiR,MAAQ,SAAevc,UAClB,IAAI2L,EAAO3L,GACZuc,SAGnBjR,EAAevV,UAAUymB,KAAO,eACzB,IAAI9lB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKse,KAAKvQ,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAekR,KAAO,SAAcxc,UAChB,IAAI2L,EAAO3L,GACZwc,QAGnBlR,EAAevV,UAAU0mB,MAAQ,eAC1B,IAAI/lB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKue,MAAMxQ,KAAKM,IAAI7V,EAAGS,YAGnC8U,MAGTX,EAAemR,MAAQ,SAAezc,UAClB,IAAI2L,EAAO3L,GACZyc,SAGnBnR,EAAevV,UAAU2mB,KAAO,eACzB,IAAIhmB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKwe,KAAKzQ,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAeoR,KAAO,SAAc1c,UAChB,IAAI2L,EAAO3L,GACZ0c,QAGnBpR,EAAevV,UAAU2I,KAAO,eACzB,IAAIhI,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKQ,KAAKuN,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAe5M,KAAO,SAAcsB,UAChB,IAAI2L,EAAO3L,GACZtB,QAGnB4M,EAAevV,UAAU4mB,MAAQ,eAC1B,IAAIjmB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKye,MAAM1Q,KAAKM,IAAI7V,EAAGS,YAGnC8U,MAGTX,EAAeqR,MAAQ,SAAe3c,UAClB,IAAI2L,EAAO3L,GACZ2c,SAGnBrR,EAAevV,UAAU6mB,IAAM,eACxB,IAAIlmB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAK0e,IAAI3Q,KAAKM,IAAI7V,EAAGS,YAGjC8U,MAGTX,EAAesR,IAAM,SAAa5c,UACd,IAAI2L,EAAO3L,GACZ4c,OAGnBtR,EAAevV,UAAU8mB,KAAO,eACzB,IAAInmB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAK2e,KAAK5Q,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAeuR,KAAO,SAAc7c,UAChB,IAAI2L,EAAO3L,GACZ6c,QAGnBvR,EAAevV,UAAU+mB,IAAM,eACxB,IAAIpmB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAK4e,IAAI7Q,KAAKM,IAAI7V,EAAGS,YAGjC8U,MAGTX,EAAewR,IAAM,SAAa9c,UACd,IAAI2L,EAAO3L,GACZ8c,OAGnBxR,EAAevV,UAAUgnB,MAAQ,eAC1B,IAAIrmB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAK6e,MAAM9Q,KAAKM,IAAI7V,EAAGS,YAGnC8U,MAGTX,EAAeyR,MAAQ,SAAe/c,UAClB,IAAI2L,EAAO3L,GACZ+c,SAGnBzR,EAAevV,UAAUkJ,MAAQ,eAC1B,IAAIvI,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKe,MAAMgN,KAAKM,IAAI7V,EAAGS,YAGnC8U,MAGTX,EAAerM,MAAQ,SAAee,UAClB,IAAI2L,EAAO3L,GACZf,SAGnBqM,EAAevV,UAAUinB,OAAS,eAC3B,IAAItmB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAK8e,OAAO/Q,KAAKM,IAAI7V,EAAGS,YAGpC8U,MAGTX,EAAe0R,OAAS,SAAgBhd,UACpB,IAAI2L,EAAO3L,GACZgd,UAGnB1R,EAAevV,UAAUuJ,IAAM,eACxB,IAAI5I,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKoB,IAAI2M,KAAKM,IAAI7V,EAAGS,YAGjC8U,MAGTX,EAAehM,IAAM,SAAaU,UACd,IAAI2L,EAAO3L,GACZV,OAGnBgM,EAAevV,UAAUknB,MAAQ,eAC1B,IAAIvmB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAK+e,MAAMhR,KAAKM,IAAI7V,EAAGS,YAGnC8U,MAGTX,EAAe2R,MAAQ,SAAejd,UAClB,IAAI2L,EAAO3L,GACZid,SAGnB3R,EAAevV,UAAUmnB,MAAQ,eAC1B,IAAIxmB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKgf,MAAMjR,KAAKM,IAAI7V,EAAGS,YAGnC8U,MAGTX,EAAe4R,MAAQ,SAAeld,UAClB,IAAI2L,EAAO3L,GACZkd,SAGnB5R,EAAevV,UAAUonB,KAAO,eACzB,IAAIzmB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKif,KAAKlR,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAe6R,KAAO,SAAcnd,UAChB,IAAI2L,EAAO3L,GACZmd,QAGnB7R,EAAevV,UAAUkR,MAAQ,eAC1B,IAAIvQ,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAK+I,MAAMgF,KAAKM,IAAI7V,EAAGS,YAGnC8U,MAGTX,EAAerE,MAAQ,SAAejH,UAClB,IAAI2L,EAAO3L,GACZiH,SAGnBqE,EAAevV,UAAUqnB,KAAO,eACzB,IAAI1mB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKkf,KAAKnR,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAe8R,KAAO,SAAcpd,UAChB,IAAI2L,EAAO3L,GACZod,QAGnB9R,EAAevV,UAAUsnB,IAAM,eACxB,IAAI3mB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKmf,IAAIpR,KAAKM,IAAI7V,EAAGS,YAGjC8U,MAGTX,EAAe+R,IAAM,SAAard,UACd,IAAI2L,EAAO3L,GACZqd,OAGnB/R,EAAevV,UAAUunB,KAAO,eACzB,IAAI5mB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKof,KAAKrR,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAegS,KAAO,SAActd,UAChB,IAAI2L,EAAO3L,GACZsd,QAGnBhS,EAAevV,UAAUoI,KAAO,eACzB,IAAIzH,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKC,KAAK8N,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAenN,KAAO,SAAc6B,UAChB,IAAI2L,EAAO3L,GACZ7B,QAGnBmN,EAAevV,UAAUwnB,IAAM,eACxB,IAAI7mB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKqf,IAAItR,KAAKM,IAAI7V,EAAGS,YAGjC8U,MAGTX,EAAeiS,IAAM,SAAavd,UACd,IAAI2L,EAAO3L,GACZud,OAGnBjS,EAAevV,UAAUynB,KAAO,eACzB,IAAI9mB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKsf,KAAKvR,KAAKM,IAAI7V,EAAGS,YAGlC8U,MAGTX,EAAekS,KAAO,SAAcxd,UAChB,IAAI2L,EAAO3L,GACZwd,QAGnBlS,EAAevV,UAAU0nB,MAAQ,eAC1B,IAAI/mB,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKuf,MAAMxR,KAAKM,IAAI7V,EAAGS,YAGnC8U,MAGTX,EAAemS,MAAQ,SAAezd,UAClB,IAAI2L,EAAO3L,GACZyd,SAGnBnS,EAAejM,IAAM,SAAaW,EAAQ0d,UACtB,IAAI/R,EAAO3L,GACZX,IAAIqe,IAGvBpS,EAAevV,UAAUsJ,IAAM,SAAaxG,SACrB,iBAAVA,EAA2BoT,KAAK0R,KAAK9kB,GACzCoT,KAAK2R,KAAK/kB,IAGnByS,EAAevV,UAAU4nB,KAAO,SAAc9kB,OACvC,IAAInC,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKmB,IAAI4M,KAAKM,IAAI7V,EAAGS,GAAI0B,WAGrCoT,MAGTX,EAAevV,UAAU6nB,KAAO,SAAc5d,MAC5CA,EAAS2L,EAAOW,YAAYtM,GACxBiM,KAAK3C,OAAStJ,EAAOsJ,MACvB2C,KAAKzC,UAAYxJ,EAAOwJ,cAClB,IAAItF,WAAW,yCAElB,IAAIxN,EAAI,EAAGA,EAAIuV,KAAK3C,KAAM5S,QACxB,IAAIS,EAAI,EAAGA,EAAI8U,KAAKzC,QAASrS,SAC3B0U,IAAInV,EAAGS,EAAG+G,KAAKmB,IAAI4M,KAAKM,IAAI7V,EAAGS,GAAI6I,EAAOuM,IAAI7V,EAAGS,YAGnD8U,MF6sBX4R,CAAsBvS,GAAgBK,IG//CvB,MAAMmS,WAAiBxS,GACpCzR,YAAYmG,EAAQsJ,EAAME,gBAEnBxJ,OAASA,OACTsJ,KAAOA,OACPE,QAAUA,GCLJ,MAAMuU,WAA4BD,GAC/CjkB,YAAYmG,SACJA,EAAQA,EAAOwJ,QAASxJ,EAAOsJ,MAGvCuC,IAAImK,EAAUC,EAAapd,eACpBmH,OAAO6L,IAAIoK,EAAaD,EAAUnd,GAChCoT,KAGTM,IAAIyJ,EAAUC,UACLhK,KAAKjM,OAAOuM,IAAI0J,EAAaD,ICXzB,MAAMgI,WAAwB1S,GAC3CzR,YAAY2G,gBAELA,KAAOA,OACP8I,KAAO9I,EAAKhK,YACZgT,QAAUhJ,EAAK,GAAGhK,OAGzBqV,IAAImK,EAAUC,EAAapd,eACpB2H,KAAKwV,GAAUC,GAAepd,EAC5BoT,KAGTM,IAAIyJ,EAAUC,UACLhK,KAAKzL,KAAKwV,GAAUC,ICbhB,MAAMgI,GACnBpkB,YAAYmG,OAQNtJ,EAAGS,EAAGoE,EAAGuE,EAAGhC,EAAGyE,EAAGtE,EAClBigB,EAAQC,EANRC,GAFJpe,EAASge,GAAgB1R,YAAYtM,IAErByN,QACZnE,EAAO8U,EAAG9U,KACVE,EAAU4U,EAAG5U,QACb6U,EAAc,IAAI9lB,aAAa+Q,GAC/BgV,EAAY,MAIX5nB,EAAI,EAAGA,EAAI4S,EAAM5S,IACpB2nB,EAAY3nB,GAAKA,MAGnBwnB,EAAS,IAAI3lB,aAAa+Q,GAErBnS,EAAI,EAAGA,EAAIqS,EAASrS,IAAK,KACvBT,EAAI,EAAGA,EAAI4S,EAAM5S,IACpBwnB,EAAOxnB,GAAK0nB,EAAG7R,IAAI7V,EAAGS,OAGnBT,EAAI,EAAGA,EAAI4S,EAAM5S,IAAK,KACzBynB,EAAOjgB,KAAK9H,IAAIM,EAAGS,GACnB2G,EAAI,EACCvC,EAAI,EAAGA,EAAI4iB,EAAM5iB,IACpBuC,GAAKsgB,EAAG7R,IAAI7V,EAAG6E,GAAK2iB,EAAO3iB,GAE7B2iB,EAAOxnB,IAAMoH,EACbsgB,EAAGvS,IAAInV,EAAGS,EAAG+mB,EAAOxnB,QAGtBoJ,EAAI3I,EACCT,EAAIS,EAAI,EAAGT,EAAI4S,EAAM5S,IACpBwH,KAAKiB,IAAI+e,EAAOxnB,IAAMwH,KAAKiB,IAAI+e,EAAOpe,MACxCA,EAAIpJ,MAIJoJ,IAAM3I,EAAG,KACNoE,EAAI,EAAGA,EAAIiO,EAASjO,IACvBgH,EAAI6b,EAAG7R,IAAIzM,EAAGvE,GACd6iB,EAAGvS,IAAI/L,EAAGvE,EAAG6iB,EAAG7R,IAAIpV,EAAGoE,IACvB6iB,EAAGvS,IAAI1U,EAAGoE,EAAGgH,GAGftE,EAAIogB,EAAYve,GAChBue,EAAYve,GAAKue,EAAYlnB,GAC7BknB,EAAYlnB,GAAK8G,EAEjBqgB,GAAaA,KAGXnnB,EAAImS,GAAyB,IAAjB8U,EAAG7R,IAAIpV,EAAGA,OACnBT,EAAIS,EAAI,EAAGT,EAAI4S,EAAM5S,IACxB0nB,EAAGvS,IAAInV,EAAGS,EAAGinB,EAAG7R,IAAI7V,EAAGS,GAAKinB,EAAG7R,IAAIpV,EAAGA,SAKvConB,GAAKH,OACLC,YAAcA,OACdC,UAAYA,EAGnBE,iBACMhe,EAAOyL,KAAKsS,GACZE,EAAMje,EAAKgJ,YACV,IAAIrS,EAAI,EAAGA,EAAIsnB,EAAKtnB,OACA,IAAnBqJ,EAAK+L,IAAIpV,EAAGA,UACP,SAGJ,EAGTunB,MAAM7lB,GACJA,EAAQ8S,GAAOW,YAAYzT,OAEvBulB,EAAKnS,KAAKsS,MACHH,EAAG9U,OAEDzQ,EAAMyQ,WACX,IAAInR,MAAM,gCAEd8T,KAAKuS,mBACD,IAAIrmB,MAAM,6BAMdzB,EAAGS,EAAGoE,EAHNwD,EAAQlG,EAAM2Q,QACdmV,EAAI9lB,EAAM8c,aAAa1J,KAAKoS,YAAa,EAAGtf,EAAQ,GACpDyK,EAAU4U,EAAG5U,YAGZjO,EAAI,EAAGA,EAAIiO,EAASjO,QAClB7E,EAAI6E,EAAI,EAAG7E,EAAI8S,EAAS9S,QACtBS,EAAI,EAAGA,EAAI4H,EAAO5H,IACrBwnB,EAAE9S,IAAInV,EAAGS,EAAGwnB,EAAEpS,IAAI7V,EAAGS,GAAKwnB,EAAEpS,IAAIhR,EAAGpE,GAAKinB,EAAG7R,IAAI7V,EAAG6E,QAInDA,EAAIiO,EAAU,EAAGjO,GAAK,EAAGA,IAAK,KAC5BpE,EAAI,EAAGA,EAAI4H,EAAO5H,IACrBwnB,EAAE9S,IAAItQ,EAAGpE,EAAGwnB,EAAEpS,IAAIhR,EAAGpE,GAAKinB,EAAG7R,IAAIhR,EAAGA,QAEjC7E,EAAI,EAAGA,EAAI6E,EAAG7E,QACZS,EAAI,EAAGA,EAAI4H,EAAO5H,IACrBwnB,EAAE9S,IAAInV,EAAGS,EAAGwnB,EAAEpS,IAAI7V,EAAGS,GAAKwnB,EAAEpS,IAAIhR,EAAGpE,GAAKinB,EAAG7R,IAAI7V,EAAG6E,WAIjDojB,wBAIHne,EAAOyL,KAAKsS,OACX/d,EAAK0M,iBACF,IAAI/U,MAAM,6BAEdymB,EAAc3S,KAAKqS,UACnBG,EAAMje,EAAKgJ,YACV,IAAIrS,EAAI,EAAGA,EAAIsnB,EAAKtnB,IACvBynB,GAAepe,EAAK+L,IAAIpV,EAAGA,UAEtBynB,kCAIHpe,EAAOyL,KAAKsS,GACZjV,EAAO9I,EAAK8I,KACZE,EAAUhJ,EAAKgJ,QACfmV,EAAI,IAAIhT,GAAOrC,EAAME,OACpB,IAAI9S,EAAI,EAAGA,EAAI4S,EAAM5S,QACnB,IAAIS,EAAI,EAAGA,EAAIqS,EAASrS,IACvBT,EAAIS,EACNwnB,EAAE9S,IAAInV,EAAGS,EAAGqJ,EAAK+L,IAAI7V,EAAGS,IACfT,IAAMS,EACfwnB,EAAE9S,IAAInV,EAAGS,EAAG,GAEZwnB,EAAE9S,IAAInV,EAAGS,EAAG,UAIXwnB,kCAIHne,EAAOyL,KAAKsS,GACZjV,EAAO9I,EAAK8I,KACZE,EAAUhJ,EAAKgJ,QACfmV,EAAI,IAAIhT,GAAOrC,EAAME,OACpB,IAAI9S,EAAI,EAAGA,EAAI4S,EAAM5S,QACnB,IAAIS,EAAI,EAAGA,EAAIqS,EAASrS,IACvBT,GAAKS,EACPwnB,EAAE9S,IAAInV,EAAGS,EAAGqJ,EAAK+L,IAAI7V,EAAGS,IAExBwnB,EAAE9S,IAAInV,EAAGS,EAAG,UAIXwnB,sCAIAzmB,MAAM2M,KAAKoH,KAAKoS,cCxKpB,SAASQ,GAAWhoB,EAAGQ,OACxB2S,EAAI,SACJ9L,KAAKiB,IAAItI,GAAKqH,KAAKiB,IAAI9H,IACzB2S,EAAI3S,EAAIR,EACDqH,KAAKiB,IAAItI,GAAKqH,KAAKC,KAAK,EAAI6L,EAAIA,IAE/B,IAAN3S,GACF2S,EAAInT,EAAIQ,EACD6G,KAAKiB,IAAI9H,GAAK6G,KAAKC,KAAK,EAAI6L,EAAIA,IAElC,ECLM,MAAM8U,GACnBjlB,YAAYhB,OAONnC,EAAGS,EAAGoE,EAAGuC,EAJTihB,GAFJlmB,EAAQmlB,GAAgB1R,YAAYzT,IAErB4U,QACX5P,EAAIhF,EAAMyQ,KACV1L,EAAI/E,EAAM2Q,QACVwV,EAAQ,IAAIzmB,aAAaqF,OAGxBrC,EAAI,EAAGA,EAAIqC,EAAGrC,IAAK,KAClB0jB,EAAM,MACLvoB,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACjBuoB,EAAMJ,GAAWI,EAAKF,EAAGxS,IAAI7V,EAAG6E,OAEtB,IAAR0jB,EAAW,KACTF,EAAGxS,IAAIhR,EAAGA,GAAK,IACjB0jB,GAAOA,GAEJvoB,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACjBqoB,EAAGlT,IAAInV,EAAG6E,EAAGwjB,EAAGxS,IAAI7V,EAAG6E,GAAK0jB,OAE9BF,EAAGlT,IAAItQ,EAAGA,EAAGwjB,EAAGxS,IAAIhR,EAAGA,GAAK,GACvBpE,EAAIoE,EAAI,EAAGpE,EAAIyG,EAAGzG,IAAK,KAC1B2G,EAAI,EACCpH,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACjBoH,GAAKihB,EAAGxS,IAAI7V,EAAG6E,GAAKwjB,EAAGxS,IAAI7V,EAAGS,OAEhC2G,GAAKA,EAAIihB,EAAGxS,IAAIhR,EAAGA,GACd7E,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACjBqoB,EAAGlT,IAAInV,EAAGS,EAAG4nB,EAAGxS,IAAI7V,EAAGS,GAAK2G,EAAIihB,EAAGxS,IAAI7V,EAAG6E,KAIhDyjB,EAAMzjB,IAAM0jB,OAGTC,GAAKH,OACLI,MAAQH,EAGfN,MAAM7lB,GACJA,EAAQ8S,GAAOW,YAAYzT,OAEvBkmB,EAAK9S,KAAKiT,GACVrhB,EAAIkhB,EAAGzV,QAEPzQ,EAAMyQ,OAASzL,QACX,IAAI1F,MAAM,wCAEb8T,KAAKmT,mBACF,IAAIjnB,MAAM,gCAMdzB,EAAGS,EAAGoE,EAAGuC,EAHTiB,EAAQlG,EAAM2Q,QACdmV,EAAI9lB,EAAM4U,QACV7P,EAAImhB,EAAGvV,YAGNjO,EAAI,EAAGA,EAAIqC,EAAGrC,QACZpE,EAAI,EAAGA,EAAI4H,EAAO5H,IAAK,KAC1B2G,EAAI,EACCpH,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACjBoH,GAAKihB,EAAGxS,IAAI7V,EAAG6E,GAAKojB,EAAEpS,IAAI7V,EAAGS,OAE/B2G,GAAKA,EAAIihB,EAAGxS,IAAIhR,EAAGA,GACd7E,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACjBioB,EAAE9S,IAAInV,EAAGS,EAAGwnB,EAAEpS,IAAI7V,EAAGS,GAAK2G,EAAIihB,EAAGxS,IAAI7V,EAAG6E,QAIzCA,EAAIqC,EAAI,EAAGrC,GAAK,EAAGA,IAAK,KACtBpE,EAAI,EAAGA,EAAI4H,EAAO5H,IACrBwnB,EAAE9S,IAAItQ,EAAGpE,EAAGwnB,EAAEpS,IAAIhR,EAAGpE,GAAK8U,KAAKkT,MAAM5jB,QAElC7E,EAAI,EAAGA,EAAI6E,EAAG7E,QACZS,EAAI,EAAGA,EAAI4H,EAAO5H,IACrBwnB,EAAE9S,IAAInV,EAAGS,EAAGwnB,EAAEpS,IAAI7V,EAAGS,GAAKwnB,EAAEpS,IAAIhR,EAAGpE,GAAK4nB,EAAGxS,IAAI7V,EAAG6E,WAKjDojB,EAAEhK,UAAU,EAAG/W,EAAI,EAAG,EAAGmB,EAAQ,GAG1CqgB,iBACM5V,EAAUyC,KAAKiT,GAAG1V,YACjB,IAAI9S,EAAI,EAAGA,EAAI8S,EAAS9S,OACL,IAAlBuV,KAAKkT,MAAMzoB,UACN,SAGJ,kCAOHA,EAAGS,EAHH4nB,EAAK9S,KAAKiT,GACVthB,EAAImhB,EAAGvV,QACPmV,EAAI,IAAIhT,GAAO/N,EAAGA,OAEjBlH,EAAI,EAAGA,EAAIkH,EAAGlH,QACZS,EAAI,EAAGA,EAAIyG,EAAGzG,IACbT,EAAIS,EACNwnB,EAAE9S,IAAInV,EAAGS,EAAG4nB,EAAGxS,IAAI7V,EAAGS,IACbT,IAAMS,EACfwnB,EAAE9S,IAAInV,EAAGS,EAAG8U,KAAKkT,MAAMzoB,IAEvBioB,EAAE9S,IAAInV,EAAGS,EAAG,UAIXwnB,6BAQHjoB,EAAGS,EAAGoE,EAAGuC,EAJTihB,EAAK9S,KAAKiT,GACV5V,EAAOyV,EAAGzV,KACVE,EAAUuV,EAAGvV,QACbmV,EAAI,IAAIhT,GAAOrC,EAAME,OAGpBjO,EAAIiO,EAAU,EAAGjO,GAAK,EAAGA,IAAK,KAC5B7E,EAAI,EAAGA,EAAI4S,EAAM5S,IACpBioB,EAAE9S,IAAInV,EAAG6E,EAAG,OAEdojB,EAAE9S,IAAItQ,EAAGA,EAAG,GACPpE,EAAIoE,EAAGpE,EAAIqS,EAASrS,OACF,IAAjB4nB,EAAGxS,IAAIhR,EAAGA,GAAU,KACtBuC,EAAI,EACCpH,EAAI6E,EAAG7E,EAAI4S,EAAM5S,IACpBoH,GAAKihB,EAAGxS,IAAI7V,EAAG6E,GAAKojB,EAAEpS,IAAI7V,EAAGS,OAG/B2G,GAAKA,EAAIihB,EAAGxS,IAAIhR,EAAGA,GAEd7E,EAAI6E,EAAG7E,EAAI4S,EAAM5S,IACpBioB,EAAE9S,IAAInV,EAAGS,EAAGwnB,EAAEpS,IAAI7V,EAAGS,GAAK2G,EAAIihB,EAAGxS,IAAI7V,EAAG6E,YAKzCojB,GC7II,MAAMU,GACnBxlB,YAAYhB,EAAOmK,EAAU,QAGvBnF,GAFJhF,EAAQmlB,GAAgB1R,YAAYzT,IAEtByQ,KACV1L,EAAI/E,EAAM2Q,cAER8V,2BACJA,GAA6B,EADzBC,4BAEJA,GAA8B,EAF1BC,cAGJA,GAAgB,GACdxc,MAMAnM,EAJA4oB,EAAQC,QAAQJ,GAChBK,EAAQD,QAAQH,GAEhBK,GAAU,KAEV/hB,EAAID,KACD4hB,EAME,CACL3oB,EAAIgC,EAAMkH,YACVlC,EAAIhH,EAAEyS,KACN1L,EAAI/G,EAAE2S,QACNoW,GAAU,MACNC,EAAMJ,EACVA,EAAQE,EACRA,EAAQE,OAZRhpB,EAAIgC,EAAM4U,QAEV4G,QAAQC,KACN,+FAYJzd,EAAIgC,EAAM4U,YAGRqS,EAAK5hB,KAAK9H,IAAIyH,EAAGD,GACjBmiB,EAAK7hB,KAAK9H,IAAIyH,EAAI,EAAGD,GACrBE,EAAI,IAAIvF,aAAawnB,GACrBC,EAAI,IAAIrU,GAAO9N,EAAGiiB,GAClBG,EAAI,IAAItU,GAAO/N,EAAGA,GAElB7G,EAAI,IAAIwB,aAAaqF,GACrBsiB,EAAO,IAAI3nB,aAAasF,GAExBsiB,EAAK,IAAI5nB,aAAawnB,OACrB,IAAIrpB,EAAI,EAAGA,EAAIqpB,EAAIrpB,IAAKypB,EAAGzpB,GAAKA,MAEjC0pB,EAAMliB,KAAK9H,IAAIyH,EAAI,EAAGD,GACtByiB,EAAMniB,KAAKvH,IAAI,EAAGuH,KAAK9H,IAAIwH,EAAI,EAAGC,IAClCyiB,EAAMpiB,KAAKvH,IAAIypB,EAAKC,OAEnB,IAAI9kB,EAAI,EAAGA,EAAI+kB,EAAK/kB,IAAK,IACxBA,EAAI6kB,EAAK,CACXtiB,EAAEvC,GAAK,MACF,IAAI7E,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACrBoH,EAAEvC,GAAKsjB,GAAW/gB,EAAEvC,GAAI1E,EAAE0V,IAAI7V,EAAG6E,OAEtB,IAATuC,EAAEvC,GAAU,CACV1E,EAAE0V,IAAIhR,EAAGA,GAAK,IAChBuC,EAAEvC,IAAMuC,EAAEvC,QAEP,IAAI7E,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACrBG,EAAEgV,IAAInV,EAAG6E,EAAG1E,EAAE0V,IAAI7V,EAAG6E,GAAKuC,EAAEvC,IAE9B1E,EAAEgV,IAAItQ,EAAGA,EAAG1E,EAAE0V,IAAIhR,EAAGA,GAAK,GAE5BuC,EAAEvC,IAAMuC,EAAEvC,OAGP,IAAIpE,EAAIoE,EAAI,EAAGpE,EAAIyG,EAAGzG,IAAK,IAC1BoE,EAAI6kB,GAAgB,IAATtiB,EAAEvC,GAAU,KACrBgH,EAAI,MACH,IAAI7L,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACrB6L,GAAK1L,EAAE0V,IAAI7V,EAAG6E,GAAK1E,EAAE0V,IAAI7V,EAAGS,GAE9BoL,GAAKA,EAAI1L,EAAE0V,IAAIhR,EAAGA,OACb,IAAI7E,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACrBG,EAAEgV,IAAInV,EAAGS,EAAGN,EAAE0V,IAAI7V,EAAGS,GAAKoL,EAAI1L,EAAE0V,IAAI7V,EAAG6E,IAG3CxE,EAAEI,GAAKN,EAAE0V,IAAIhR,EAAGpE,MAGdsoB,GAASlkB,EAAI6kB,MACV,IAAI1pB,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACrBspB,EAAEnU,IAAInV,EAAG6E,EAAG1E,EAAE0V,IAAI7V,EAAG6E,OAIrBA,EAAI8kB,EAAK,CACXtpB,EAAEwE,GAAK,MACF,IAAI7E,EAAI6E,EAAI,EAAG7E,EAAIkH,EAAGlH,IACzBK,EAAEwE,GAAKsjB,GAAW9nB,EAAEwE,GAAIxE,EAAEL,OAEf,IAATK,EAAEwE,GAAU,CACVxE,EAAEwE,EAAI,GAAK,IACbxE,EAAEwE,GAAK,EAAIxE,EAAEwE,QAEV,IAAI7E,EAAI6E,EAAI,EAAG7E,EAAIkH,EAAGlH,IACzBK,EAAEL,IAAMK,EAAEwE,GAEZxE,EAAEwE,EAAI,IAAM,KAEdxE,EAAEwE,IAAMxE,EAAEwE,GACNA,EAAI,EAAIsC,GAAc,IAAT9G,EAAEwE,GAAU,KACtB,IAAI7E,EAAI6E,EAAI,EAAG7E,EAAImH,EAAGnH,IACzBwpB,EAAKxpB,GAAK,MAEP,IAAIA,EAAI6E,EAAI,EAAG7E,EAAImH,EAAGnH,QACpB,IAAIS,EAAIoE,EAAI,EAAGpE,EAAIyG,EAAGzG,IACzB+oB,EAAKxpB,IAAMK,EAAEI,GAAKN,EAAE0V,IAAI7V,EAAGS,OAG1B,IAAIA,EAAIoE,EAAI,EAAGpE,EAAIyG,EAAGzG,IAAK,KAC1BoL,GAAKxL,EAAEI,GAAKJ,EAAEwE,EAAI,OACjB,IAAI7E,EAAI6E,EAAI,EAAG7E,EAAImH,EAAGnH,IACzBG,EAAEgV,IAAInV,EAAGS,EAAGN,EAAE0V,IAAI7V,EAAGS,GAAKoL,EAAI2d,EAAKxpB,QAIrCipB,MACG,IAAIjpB,EAAI6E,EAAI,EAAG7E,EAAIkH,EAAGlH,IACzBupB,EAAEpU,IAAInV,EAAG6E,EAAGxE,EAAEL,SAMlBoJ,EAAI5B,KAAK9H,IAAIwH,EAAGC,EAAI,MACpBuiB,EAAMxiB,IACRE,EAAEsiB,GAAOvpB,EAAE0V,IAAI6T,EAAKA,IAElBviB,EAAIiC,IACNhC,EAAEgC,EAAI,GAAK,GAETugB,EAAM,EAAIvgB,IACZ/I,EAAEspB,GAAOxpB,EAAE0V,IAAI8T,EAAKvgB,EAAI,IAE1B/I,EAAE+I,EAAI,GAAK,EAEP2f,EAAO,KACJ,IAAItoB,EAAIipB,EAAKjpB,EAAI2oB,EAAI3oB,IAAK,KACxB,IAAIT,EAAI,EAAGA,EAAImH,EAAGnH,IACrBspB,EAAEnU,IAAInV,EAAGS,EAAG,GAEd6oB,EAAEnU,IAAI1U,EAAGA,EAAG,OAET,IAAIoE,EAAI6kB,EAAM,EAAG7kB,GAAK,EAAGA,OACf,IAATuC,EAAEvC,GAAU,KACT,IAAIpE,EAAIoE,EAAI,EAAGpE,EAAI2oB,EAAI3oB,IAAK,KAC3BoL,EAAI,MACH,IAAI7L,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACrB6L,GAAKyd,EAAEzT,IAAI7V,EAAG6E,GAAKykB,EAAEzT,IAAI7V,EAAGS,GAE9BoL,GAAKA,EAAIyd,EAAEzT,IAAIhR,EAAGA,OACb,IAAI7E,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACrBspB,EAAEnU,IAAInV,EAAGS,EAAG6oB,EAAEzT,IAAI7V,EAAGS,GAAKoL,EAAIyd,EAAEzT,IAAI7V,EAAG6E,QAGtC,IAAI7E,EAAI6E,EAAG7E,EAAImH,EAAGnH,IACrBspB,EAAEnU,IAAInV,EAAG6E,GAAIykB,EAAEzT,IAAI7V,EAAG6E,IAExBykB,EAAEnU,IAAItQ,EAAGA,EAAG,EAAIykB,EAAEzT,IAAIhR,EAAGA,QACpB,IAAI7E,EAAI,EAAGA,EAAI6E,EAAI,EAAG7E,IACzBspB,EAAEnU,IAAInV,EAAG6E,EAAG,OAET,KACA,IAAI7E,EAAI,EAAGA,EAAImH,EAAGnH,IACrBspB,EAAEnU,IAAInV,EAAG6E,EAAG,GAEdykB,EAAEnU,IAAItQ,EAAGA,EAAG,OAKdokB,MACG,IAAIpkB,EAAIqC,EAAI,EAAGrC,GAAK,EAAGA,IAAK,IAC3BA,EAAI8kB,GAAgB,IAATtpB,EAAEwE,OACV,IAAIpE,EAAIoE,EAAI,EAAGpE,EAAIyG,EAAGzG,IAAK,KAC1BoL,EAAI,MACH,IAAI7L,EAAI6E,EAAI,EAAG7E,EAAIkH,EAAGlH,IACzB6L,GAAK0d,EAAE1T,IAAI7V,EAAG6E,GAAK0kB,EAAE1T,IAAI7V,EAAGS,GAE9BoL,GAAKA,EAAI0d,EAAE1T,IAAIhR,EAAI,EAAGA,OACjB,IAAI7E,EAAI6E,EAAI,EAAG7E,EAAIkH,EAAGlH,IACzBupB,EAAEpU,IAAInV,EAAGS,EAAG8oB,EAAE1T,IAAI7V,EAAGS,GAAKoL,EAAI0d,EAAE1T,IAAI7V,EAAG6E,QAIxC,IAAI7E,EAAI,EAAGA,EAAIkH,EAAGlH,IACrBupB,EAAEpU,IAAInV,EAAG6E,EAAG,GAEd0kB,EAAEpU,IAAItQ,EAAGA,EAAG,OAIZglB,EAAKzgB,EAAI,EAET0gB,EAAMpoB,OAAOqoB,aACV3gB,EAAI,GAAG,KACRvE,EAAGmlB,MACFnlB,EAAIuE,EAAI,EAAGvE,IAAM,IACT,IAAPA,EADmBA,IAAK,OAItBolB,EACJvoB,OAAOkQ,UAAYkY,EAAMtiB,KAAKiB,IAAIrB,EAAEvC,GAAK2C,KAAKiB,IAAIrB,EAAEvC,EAAI,QACtD2C,KAAKiB,IAAIpI,EAAEwE,KAAOolB,GAASvoB,OAAO2F,MAAMhH,EAAEwE,IAAK,CACjDxE,EAAEwE,GAAK,YAIPA,IAAMuE,EAAI,EACZ4gB,EAAO,MACF,KACDE,MACCA,EAAK9gB,EAAI,EAAG8gB,GAAMrlB,GACjBqlB,IAAOrlB,EADaqlB,IAAM,KAI1Bre,GACDqe,IAAO9gB,EAAI5B,KAAKiB,IAAIpI,EAAE6pB,IAAO,IAC7BA,IAAOrlB,EAAI,EAAI2C,KAAKiB,IAAIpI,EAAE6pB,EAAK,IAAM,MACpC1iB,KAAKiB,IAAIrB,EAAE8iB,KAAQJ,EAAMje,EAAG,CAC9BzE,EAAE8iB,GAAM,SAIRA,IAAOrlB,EACTmlB,EAAO,EACEE,IAAO9gB,EAAI,EACpB4gB,EAAO,GAEPA,EAAO,EACPnlB,EAAIqlB,UAIRrlB,IAEQmlB,QACD,OACC1pB,EAAID,EAAE+I,EAAI,GACd/I,EAAE+I,EAAI,GAAK,MACN,IAAI3I,EAAI2I,EAAI,EAAG3I,GAAKoE,EAAGpE,IAAK,KAC3BoL,EAAIsc,GAAW/gB,EAAE3G,GAAIH,GACrB6pB,EAAK/iB,EAAE3G,GAAKoL,EACZue,EAAK9pB,EAAIuL,KACbzE,EAAE3G,GAAKoL,EACHpL,IAAMoE,IACRvE,GAAK8pB,EAAK/pB,EAAEI,EAAI,GAChBJ,EAAEI,EAAI,GAAK0pB,EAAK9pB,EAAEI,EAAI,IAEpBwoB,MACG,IAAIjpB,EAAI,EAAGA,EAAIkH,EAAGlH,IACrB6L,EAAIse,EAAKZ,EAAE1T,IAAI7V,EAAGS,GAAK2pB,EAAKb,EAAE1T,IAAI7V,EAAGoJ,EAAI,GACzCmgB,EAAEpU,IAAInV,EAAGoJ,EAAI,GAAIghB,EAAKb,EAAE1T,IAAI7V,EAAGS,GAAK0pB,EAAKZ,EAAE1T,IAAI7V,EAAGoJ,EAAI,IACtDmgB,EAAEpU,IAAInV,EAAGS,EAAGoL,cAMf,OACCvL,EAAID,EAAEwE,EAAI,GACdxE,EAAEwE,EAAI,GAAK,MACN,IAAIpE,EAAIoE,EAAGpE,EAAI2I,EAAG3I,IAAK,KACtBoL,EAAIsc,GAAW/gB,EAAE3G,GAAIH,GACrB6pB,EAAK/iB,EAAE3G,GAAKoL,EACZue,EAAK9pB,EAAIuL,KACbzE,EAAE3G,GAAKoL,EACPvL,GAAK8pB,EAAK/pB,EAAEI,GACZJ,EAAEI,GAAK0pB,EAAK9pB,EAAEI,GACVsoB,MACG,IAAI/oB,EAAI,EAAGA,EAAImH,EAAGnH,IACrB6L,EAAIse,EAAKb,EAAEzT,IAAI7V,EAAGS,GAAK2pB,EAAKd,EAAEzT,IAAI7V,EAAG6E,EAAI,GACzCykB,EAAEnU,IAAInV,EAAG6E,EAAI,GAAIulB,EAAKd,EAAEzT,IAAI7V,EAAGS,GAAK0pB,EAAKb,EAAEzT,IAAI7V,EAAG6E,EAAI,IACtDykB,EAAEnU,IAAInV,EAAGS,EAAGoL,cAMf,SACG+U,EAAQpZ,KAAKvH,IACjBuH,KAAKiB,IAAIrB,EAAEgC,EAAI,IACf5B,KAAKiB,IAAIrB,EAAEgC,EAAI,IACf5B,KAAKiB,IAAIpI,EAAE+I,EAAI,IACf5B,KAAKiB,IAAIrB,EAAEvC,IACX2C,KAAKiB,IAAIpI,EAAEwE,KAEPwlB,EAAKjjB,EAAEgC,EAAI,GAAKwX,EAChB0J,EAAOljB,EAAEgC,EAAI,GAAKwX,EAClB2J,EAAOlqB,EAAE+I,EAAI,GAAKwX,EAClB4J,EAAKpjB,EAAEvC,GAAK+b,EACZ6J,EAAKpqB,EAAEwE,GAAK+b,EACZjgB,IAAM2pB,EAAOD,IAAOC,EAAOD,GAAME,EAAOA,GAAQ,EAChD7pB,EAAI2pB,EAAKE,GAAQF,EAAKE,OACxBpgB,EAAQ,EACF,IAANxJ,GAAiB,IAAND,IAEXyJ,EADExJ,EAAI,EACE,EAAI6G,KAAKC,KAAK9G,EAAIA,EAAID,GAEtB8G,KAAKC,KAAK9G,EAAIA,EAAID,GAE5ByJ,EAAQzJ,GAAKC,EAAIwJ,QAEf7J,GAAKkqB,EAAKH,IAAOG,EAAKH,GAAMlgB,EAC5B5J,EAAIiqB,EAAKC,MACR,IAAIhqB,EAAIoE,EAAGpE,EAAI2I,EAAI,EAAG3I,IAAK,KAC1BoL,EAAIsc,GAAW7nB,EAAGC,GACZ,IAANsL,IAASA,EAAInK,OAAOkQ,eACpBuY,EAAK7pB,EAAIuL,EACTue,EAAK7pB,EAAIsL,KACTpL,IAAMoE,IACRxE,EAAEI,EAAI,GAAKoL,GAEbvL,EAAI6pB,EAAK/iB,EAAE3G,GAAK2pB,EAAK/pB,EAAEI,GACvBJ,EAAEI,GAAK0pB,EAAK9pB,EAAEI,GAAK2pB,EAAKhjB,EAAE3G,GAC1BF,EAAI6pB,EAAKhjB,EAAE3G,EAAI,GACf2G,EAAE3G,EAAI,GAAK0pB,EAAK/iB,EAAE3G,EAAI,GAClBwoB,MACG,IAAIjpB,EAAI,EAAGA,EAAIkH,EAAGlH,IACrB6L,EAAIse,EAAKZ,EAAE1T,IAAI7V,EAAGS,GAAK2pB,EAAKb,EAAE1T,IAAI7V,EAAGS,EAAI,GACzC8oB,EAAEpU,IAAInV,EAAGS,EAAI,GAAI2pB,EAAKb,EAAE1T,IAAI7V,EAAGS,GAAK0pB,EAAKZ,EAAE1T,IAAI7V,EAAGS,EAAI,IACtD8oB,EAAEpU,IAAInV,EAAGS,EAAGoL,MAGhBA,EAAIsc,GAAW7nB,EAAGC,GACR,IAANsL,IAASA,EAAInK,OAAOkQ,WACxBuY,EAAK7pB,EAAIuL,EACTue,EAAK7pB,EAAIsL,EACTzE,EAAE3G,GAAKoL,EACPvL,EAAI6pB,EAAK9pB,EAAEI,GAAK2pB,EAAKhjB,EAAE3G,EAAI,GAC3B2G,EAAE3G,EAAI,IAAM2pB,EAAK/pB,EAAEI,GAAK0pB,EAAK/iB,EAAE3G,EAAI,GACnCF,EAAI6pB,EAAK/pB,EAAEI,EAAI,GACfJ,EAAEI,EAAI,GAAK0pB,EAAK9pB,EAAEI,EAAI,GAClBsoB,GAAStoB,EAAI0G,EAAI,MACd,IAAInH,EAAI,EAAGA,EAAImH,EAAGnH,IACrB6L,EAAIse,EAAKb,EAAEzT,IAAI7V,EAAGS,GAAK2pB,EAAKd,EAAEzT,IAAI7V,EAAGS,EAAI,GACzC6oB,EAAEnU,IAAInV,EAAGS,EAAI,GAAI2pB,EAAKd,EAAEzT,IAAI7V,EAAGS,GAAK0pB,EAAKb,EAAEzT,IAAI7V,EAAGS,EAAI,IACtD6oB,EAAEnU,IAAInV,EAAGS,EAAGoL,GAIlBxL,EAAE+I,EAAI,GAAK9I,aAIR,KACC8G,EAAEvC,IAAM,IACVuC,EAAEvC,GAAKuC,EAAEvC,GAAK,GAAKuC,EAAEvC,GAAK,EACtBokB,OACG,IAAIjpB,EAAI,EAAGA,GAAK6pB,EAAI7pB,IACvBupB,EAAEpU,IAAInV,EAAG6E,GAAI0kB,EAAE1T,IAAI7V,EAAG6E,SAIrBA,EAAIglB,KACLziB,EAAEvC,IAAMuC,EAAEvC,EAAI,KADL,KAITgH,EAAIzE,EAAEvC,MACVuC,EAAEvC,GAAKuC,EAAEvC,EAAI,GACbuC,EAAEvC,EAAI,GAAKgH,EACPod,GAASpkB,EAAIqC,EAAI,MACd,IAAIlH,EAAI,EAAGA,EAAIkH,EAAGlH,IACrB6L,EAAI0d,EAAE1T,IAAI7V,EAAG6E,EAAI,GACjB0kB,EAAEpU,IAAInV,EAAG6E,EAAI,EAAG0kB,EAAE1T,IAAI7V,EAAG6E,IACzB0kB,EAAEpU,IAAInV,EAAG6E,EAAGgH,MAGZkd,GAASlkB,EAAIsC,EAAI,MACd,IAAInH,EAAI,EAAGA,EAAImH,EAAGnH,IACrB6L,EAAIyd,EAAEzT,IAAI7V,EAAG6E,EAAI,GACjBykB,EAAEnU,IAAInV,EAAG6E,EAAI,EAAGykB,EAAEzT,IAAI7V,EAAG6E,IACzBykB,EAAEnU,IAAInV,EAAG6E,EAAGgH,GAGhBhH,IAGFuE,QAOF8f,EAAS,KACPhS,EAAMqS,EACVA,EAAID,EACJA,EAAIpS,OAGD/P,EAAIA,OACJD,EAAIA,OACJE,EAAIA,OACJkiB,EAAIA,OACJC,EAAIA,EAGXvB,MAAM7lB,OACAuoB,EAAIvoB,EACJ9B,EAAIkV,KAAK1L,UACT8gB,EAAQpV,KAAKnO,EAAEtH,OACf8qB,EAAK3V,GAAOO,MAAMmV,EAAOA,OAExB,IAAI3qB,EAAI,EAAGA,EAAI2qB,EAAO3qB,IACrBwH,KAAKiB,IAAI8M,KAAKnO,EAAEpH,KAAOK,EACzBuqB,EAAGzV,IAAInV,EAAGA,EAAG,GAEb4qB,EAAGzV,IAAInV,EAAGA,EAAG,EAAIuV,KAAKnO,EAAEpH,QAIxBspB,EAAI/T,KAAK+T,EACTC,EAAIhU,KAAKsV,qBAETC,EAAKvB,EAAErP,KAAK0Q,GACZG,EAAQxB,EAAE3W,KACVoY,EAAQ1B,EAAE1W,KACVqY,EAAMhW,GAAOO,MAAMuV,EAAOC,OAEzB,IAAIhrB,EAAI,EAAGA,EAAI+qB,EAAO/qB,QACpB,IAAIS,EAAI,EAAGA,EAAIuqB,EAAOvqB,IAAK,KAC1BsL,EAAM,MACL,IAAIlH,EAAI,EAAGA,EAAI8lB,EAAO9lB,IACzBkH,GAAO+e,EAAGjV,IAAI7V,EAAG6E,GAAKykB,EAAEzT,IAAIpV,EAAGoE,GAEjComB,EAAI9V,IAAInV,EAAGS,EAAGsL,UAIXkf,EAAI/Q,KAAKwQ,GAGlBQ,iBAAiB/oB,UACRoT,KAAKyS,MAAM/S,GAAO2E,KAAKzX,IAGhCgpB,cACM5B,EAAIhU,KAAKgU,EACTlpB,EAAIkV,KAAK1L,UACTkhB,EAAQxB,EAAE3W,KACVwY,EAAQ7B,EAAEzW,QACVmV,EAAI,IAAIhT,GAAO8V,EAAOxV,KAAKnO,EAAEtH,YAE5B,IAAIE,EAAI,EAAGA,EAAI+qB,EAAO/qB,QACpB,IAAIS,EAAI,EAAGA,EAAI2qB,EAAO3qB,IACrB+G,KAAKiB,IAAI8M,KAAKnO,EAAE3G,IAAMJ,GACxB4nB,EAAE9S,IAAInV,EAAGS,EAAG8oB,EAAE1T,IAAI7V,EAAGS,GAAK8U,KAAKnO,EAAE3G,QAKnC6oB,EAAI/T,KAAK+T,EAET0B,EAAQ1B,EAAE1W,KACVyY,EAAQ/B,EAAExW,QACV4X,EAAI,IAAIzV,GAAO8V,EAAOC,OAErB,IAAIhrB,EAAI,EAAGA,EAAI+qB,EAAO/qB,QACpB,IAAIS,EAAI,EAAGA,EAAIuqB,EAAOvqB,IAAK,KAC1BsL,EAAM,MACL,IAAIlH,EAAI,EAAGA,EAAIwmB,EAAOxmB,IACzBkH,GAAOkc,EAAEpS,IAAI7V,EAAG6E,GAAKykB,EAAEzT,IAAIpV,EAAGoE,GAEhC6lB,EAAEvV,IAAInV,EAAGS,EAAGsL,UAIT2e,yBAIAnV,KAAKnO,EAAE,GAAKmO,KAAKnO,EAAEI,KAAK9H,IAAI6V,KAAKpO,EAAGoO,KAAKrO,GAAK,sBAI9CqO,KAAKnO,EAAE,kBAIVkkB,EAAM9jB,KAAKvH,IAAIsV,KAAKpO,EAAGoO,KAAKrO,GAAKqO,KAAKnO,EAAE,GAAK1F,OAAOqoB,QACpDzW,EAAI,EACJlM,EAAImO,KAAKnO,MACR,IAAIpH,EAAI,EAAGurB,EAAKnkB,EAAEtH,OAAQE,EAAIurB,EAAIvrB,IACjCoH,EAAEpH,GAAKsrB,GACThY,WAGGA,wBAIA9R,MAAM2M,KAAKoH,KAAKnO,0BAIf1F,OAAOqoB,QAAU,EAAKviB,KAAKvH,IAAIsV,KAAKpO,EAAGoO,KAAKrO,GAAKqO,KAAKnO,EAAE,oCAIzDmO,KAAK+T,oCAIL/T,KAAKgU,8BAILtU,GAAO2E,KAAKrE,KAAKnO,IClgBrB,SAAS+jB,GAAQ7hB,EAAQkiB,GAAS,UACvCliB,EAASge,GAAgB1R,YAAYtM,GACjCkiB,EACK,IAAI7C,GAA2Brf,GAAQ6hB,UAM3C,SAAeM,EAAcC,EAAeF,GAAS,UAC1DC,EAAenE,GAAgB1R,YAAY6V,GAC3CC,EAAgBpE,GAAgB1R,YAAY8V,GACxCF,EACK,IAAI7C,GAA2B8C,GAAczD,MAAM0D,GAEnDD,EAAajV,WAChB,IAAI+Q,GAAgBkE,GAAczD,MAAM0D,GACxC,IAAItD,GAAgBqD,GAAczD,MAAM0D,GAZrC1D,CAAM1e,EAAQ2L,GAAO+M,IAAI1Y,EAAOsJ,OCT3C,IAAI+Y,GAAiB,CACnBpd,KAAM,EACNpM,MAAO,GAgGT,OAVA,SAAkB2H,EAAMwC,MACtBA,EAAUlN,OAAOwsB,OAAO,GAAID,GAAgBrf,GACxC9K,MAAM5B,QAAQkK,UACZtI,MAAM5B,QAAQkK,EAAK,IAjB3B,SAAoBA,EAAMwC,cAGAC,IAApBD,EAAQiC,KAAK,KACfjC,EAAQiC,KAAO,CAACjC,EAAQiC,KAAMjC,EAAQiC,KAAMjC,EAAQiC,KAAMjC,EAAQiC,OAE9D,IAAI9M,MAAM,mCAWqBoqB,CAAW/hB,EAAMwC,GAhFxD,SAAmBxC,EAAMwC,OACnBrG,EAAM6D,EAAKhK,OACa,iBAAjBwM,EAAQiC,OACjBjC,EAAQiC,KAAO,CAACjC,EAAQiC,KAAMjC,EAAQiC,WAKpClC,EAUArM,EAZA8rB,EAAO7lB,EAAMqG,EAAQiC,KAAK,GAAKjC,EAAQiC,KAAK,MAG5CjC,EAAQD,OAAQ,IACdC,EAAQD,OAAOvM,SAAWgsB,QACtB,IAAIte,WAAW,qBAEvBnB,EAASC,EAAQD,YAEjBA,EAAS,IAAI7K,MAAMsqB,MAIC,aAAlBxf,EAAQnK,UACLnC,EAAI,EAAGA,EAAI8rB,EAAM9rB,IAChBA,EAAIsM,EAAQiC,KAAK,GACnBlC,EAAOrM,GAAK8J,GAAM7D,EAAOqG,EAAQiC,KAAK,GAAKtI,EAAOjG,GAAKiG,GAC9CjG,EAAIsM,EAAQiC,KAAK,GAAKtI,EAC/BoG,EAAOrM,GAAK8J,EAAK9J,EAAIsM,EAAQiC,KAAK,IAElClC,EAAOrM,GAAK8J,GAAM9J,EAAIsM,EAAQiC,KAAK,IAAMtI,QAGxC,GAAsB,cAAlBqG,EAAQnK,UACZnC,EAAI,EAAGA,EAAI8rB,EAAM9rB,IAChBA,EAAIsM,EAAQiC,KAAK,GAAIlC,EAAOrM,GAAK8J,EAAK,GACjC9J,EAAIsM,EAAQiC,KAAK,GAAKtI,EAAKoG,EAAOrM,GAAK8J,EAAK9J,EAAIsM,EAAQiC,KAAK,IACjElC,EAAOrM,GAAK8J,EAAK7D,EAAM,QAEzB,GAAsB,cAAlBqG,EAAQnK,MAAuB,IACpCmK,EAAQiC,KAAK,GAAKtI,GAAOqG,EAAQiC,KAAK,GAAKtI,QACvC,IAAIuH,WACR,gEAGCxN,EAAI,EAAGA,EAAI8rB,EAAM9rB,IAChBA,EAAIsM,EAAQiC,KAAK,GAAIlC,EAAOrM,GAAK8J,EAAKwC,EAAQiC,KAAK,GAAK,EAAIvO,GACvDA,EAAIsM,EAAQiC,KAAK,GAAKtI,EAAKoG,EAAOrM,GAAK8J,EAAK9J,EAAIsM,EAAQiC,KAAK,IACjElC,EAAOrM,GAAK8J,EAAK,EAAI7D,EAAMqG,EAAQiC,KAAK,GAAKvO,EAAI,YAGnDA,EAAI,EAAGA,EAAI8rB,EAAM9rB,IAChBA,EAAIsM,EAAQiC,KAAK,GAAIlC,EAAOrM,GAAKsM,EAAQnK,MACpCnC,EAAIsM,EAAQiC,KAAK,GAAKtI,EAAKoG,EAAOrM,GAAK8J,EAAK9J,EAAIsM,EAAQiC,KAAK,IACjElC,EAAOrM,GAAKsM,EAAQnK,aAItBkK,EA2BO0f,CAAUjiB,EAAMwC,SAEtB,IAAIzM,UAAU,4BCjFxB,MAAM8rB,GAAiB,CACrBK,WAAY,EACZC,WAAY,EACZC,WAAY,EACZC,IAAK,OACLC,SAAU,aAUG,SAASC,GAAcviB,EAAMtJ,EAAG8L,OAC7CA,EAAUlN,OAAOwsB,OAAO,GAAID,GAAgBrf,IAElC0f,WAAa,GAAM,GAC3B1f,EAAQ0f,WAAa,IACpBtqB,OAAO2T,UAAU/I,EAAQ0f,kBAEpB,IAAIxe,WACR,wEAGAlB,EAAQ2f,WAAa,IAAMvqB,OAAO2T,UAAU/I,EAAQ2f,kBAChD,IAAIze,WAAW,8CAEnBlB,EAAQ4f,WAAa,IAAMxqB,OAAO2T,UAAU/I,EAAQ4f,kBAChD,IAAI1e,WAAW,+CAGnB8e,EAAGlgB,EACHrE,EAAOP,KAAKe,MAAM+D,EAAQ0f,WAAa,GAEvB,QAAhB1f,EAAQ6f,MACVriB,EAAOyiB,GAASziB,EAAM,CAAEyE,KAAMxG,EAAM5F,MAAOmK,EAAQ8f,gBAGjDI,EAAM,IAAIhrB,MAAMsI,EAAKhK,OAAS,EAAIiI,MAGb,IAAvBuE,EAAQ0f,YACe,IAAvB1f,EAAQ4f,YACgB,IAAvB5f,EAAQ2f,YAA2C,IAAvB3f,EAAQ2f,WAShC,KACDQ,EAAIxX,GAAOyX,KAAKpgB,EAAQ0f,WAAY1f,EAAQ4f,WAAa,GACzDS,IAASrgB,EAAQ0f,WAAa,GAAK,MAClC,IAAIhsB,EAAI,EAAGA,EAAIysB,EAAE7Z,KAAM5S,QACrB,IAAIS,EAAI,EAAGA,EAAIgsB,EAAE3Z,QAASrS,IACzBksB,EAAO,IAAM,GAAW,IAANlsB,GAASgsB,EAAEtX,IAAInV,EAAGS,EAAG+G,KAAKmB,IAAIgkB,EAAO3sB,EAAGS,QAG9DmsB,EAAa,IAAIvF,GAAoBoF,GAEzCH,EADWnB,GAAQyB,EAAW1S,KAAKuS,IAC1BvS,KAAK0S,GACdN,EAAIA,EAAE5U,OAAOpL,EAAQ2f,YACrB7f,EAAO,EAxEX,SAAmBlF,OACboM,EAAI,OACDpM,EAAI,GAAGoM,GAAKpM,WACZoM,EAqEMuZ,CAAUvgB,EAAQ2f,iBAnBF,IAAvB3f,EAAQ2f,YACVK,EAAI,EAAE,GAAI,EAAG,EAAG,EAAG,GACnBlgB,EAAO,KAEPkgB,EAAI,CAAC,GAAI,GAAI,GAAI,EAAG,GACpBlgB,EAAO,OAgBP0gB,EAAM1gB,EAAO5E,KAAKmB,IAAInI,EAAG8L,EAAQ2f,gBAChC,IAAIpnB,EAAIkD,EAAMlD,EAAIiF,EAAKhK,OAASiI,EAAMlD,IAAK,KAC1CzE,EAAI,MACH,IAAIqV,EAAI,EAAGA,EAAI6W,EAAExsB,OAAQ2V,IAAKrV,GAAMksB,EAAE7W,GAAK3L,EAAK2L,EAAI5Q,EAAIkD,GAAS+kB,EACtEN,EAAI3nB,EAAIkD,GAAQ3H,QAGE,SAAhBkM,EAAQ6f,MACVK,EAAMD,GAASC,EAAK,CAAEje,KAAMxG,EAAM5F,MAAOmK,EAAQ8f,YAG5CI,mCC5FAzN,EAAe5e,EAAGQ,UAChBR,EAAIQ,EAQfG,MAAc,SAAakI,WACnB+C,EAAM,EACD/L,EAAI,EAAGA,EAAIgJ,EAAOlJ,OAAQE,IAC/B+L,GAAO/C,EAAOhJ,UAEX+L,GAQXjL,MAAc,SAAakI,WACnB/I,EAAM+I,EAAO,GACbyM,EAAIzM,EAAOlJ,OACNE,EAAI,EAAGA,EAAIyV,EAAGzV,IACfgJ,EAAOhJ,GAAKC,IAAKA,EAAM+I,EAAOhJ,WAE/BC,GAQXa,MAAc,SAAakI,WACnBtJ,EAAMsJ,EAAO,GACbyM,EAAIzM,EAAOlJ,OACNE,EAAI,EAAGA,EAAIyV,EAAGzV,IACfgJ,EAAOhJ,GAAKN,IAAKA,EAAMsJ,EAAOhJ,WAE/BN,GAQXoB,SAAiB,SAAgBkI,WACzBtJ,EAAMsJ,EAAO,GACb/I,EAAM+I,EAAO,GACbyM,EAAIzM,EAAOlJ,OACNE,EAAI,EAAGA,EAAIyV,EAAGzV,IACfgJ,EAAOhJ,GAAKN,IAAKA,EAAMsJ,EAAOhJ,IAC9BgJ,EAAOhJ,GAAKC,IAAKA,EAAM+I,EAAOhJ,UAE/B,CACHN,IAAKA,EACLO,IAAKA,IASba,iBAAyB,SAAwBkI,WACzC+C,EAAM,EACN0J,EAAIzM,EAAOlJ,OACNE,EAAI,EAAGA,EAAIyV,EAAGzV,IACnB+L,GAAO/C,EAAOhJ,UAEX+L,EAAM0J,GAMjB3U,OAAeA,EAAQisB,eAOvBjsB,gBAAwB,SAAuBkI,WACvCma,EAAM,EACN1N,EAAIzM,EAAOlJ,OACNE,EAAI,EAAGA,EAAIyV,EAAGzV,IACnBmjB,GAAOna,EAAOhJ,UAEXwH,KAAKmB,IAAIwa,EAAK,EAAI1N,IAU7B3U,UAAkB,SAAiBkI,WAC3BgkB,EAAQ,EACRvX,EAAIzM,EAAOlJ,OACNE,EAAI,EAAGA,EAAIyV,EAAGzV,IACnBgtB,GAASxlB,KAAKoB,IAAII,EAAOhJ,WAEtBgtB,EAAQvX,GASnB3U,YAAoB,SAAmBmsB,EAAOC,WACtCnhB,EAAM,EACN7E,EAAI,EACJuO,EAAIwX,EAAMntB,OACLE,EAAI,EAAGA,EAAIyV,EAAGzV,IACnB+L,GAAOmhB,EAAQltB,GAAKitB,EAAMjtB,GAC1BkH,GAAKgmB,EAAQltB,UAEV+L,EAAM7E,GAUjBpG,gBAAwB,SAAuBkI,EAAQmkB,EAASC,QACtC7gB,IAAlB6gB,IAA6BA,GAAgB,GAC5CA,IACDpkB,EAAS,GAAGoE,OAAOpE,GAAQ2B,KAAKoU,YAEhCtJ,EAAIzM,EAAOlJ,OACX+E,EAAI2C,KAAKe,MAAMkN,EAAI0X,GACnBphB,EAAM,EACD/L,EAAI6E,EAAG7E,EAAKyV,EAAI5Q,EAAI7E,IACzB+L,GAAO/C,EAAOhJ,UAEX+L,GAAO0J,EAAI,EAAI5Q,IAQ1B/D,eAAuB,SAAsBkI,WACrC+C,EAAM,EACN0J,EAAIzM,EAAOlJ,OACNE,EAAI,EAAGA,EAAIyV,EAAGzV,IAAK,IACN,IAAdgJ,EAAOhJ,SACD,IAAIwN,WAAW,kBAAoBxN,EAAI,WAEjD+L,GAAO,EAAI/C,EAAOhJ,UAEfyV,EAAI1J,GAQfjL,qBAA6B,SAA4BkI,WACjDmU,EAAK,EACLE,EAAK,EACL5H,EAAIzM,EAAOlJ,OACNE,EAAI,EAAGA,EAAIyV,EAAGzV,IACnBmd,GAAMnU,EAAOhJ,GAAKgJ,EAAOhJ,GACzBqd,GAAMrU,EAAOhJ,MAEbqd,EAAK,QACC,IAAI7P,WAAW,oCAElB2P,EAAKE,GAShBvc,SAAiB,SAAgBkI,EAAQokB,QACf7gB,IAAlB6gB,IAA6BA,GAAgB,GAC5CA,IACDpkB,EAAS,GAAGoE,OAAOpE,GAAQ2B,KAAKoU,QAEhCtJ,EAAIzM,EAAOlJ,OACXutB,EAAO7lB,KAAKe,MAAMkN,EAAI,UACtBA,EAAI,GAAM,EACiC,IAAnCzM,EAAOqkB,EAAO,GAAKrkB,EAAOqkB,IAE3BrkB,EAAOqkB,IAUtBvsB,WAAmB,SAAkBkI,EAAQiX,QACxB1T,IAAb0T,IAAwBA,GAAW,WACnCqN,EAAUxsB,EAAQgK,KAAK9B,GACvBukB,EAAc,EACd9X,EAAIzM,EAAOlJ,OAENE,EAAI,EAAGA,EAAIyV,EAAGzV,IAAK,KACpBuG,EAAIyC,EAAOhJ,GAAKstB,EACpBC,GAAehnB,EAAIA,SAGnB0Z,EACOsN,GAAe9X,EAAI,GAEnB8X,EAAc9X,GAU7B3U,oBAA4B,SAA2BkI,EAAQiX,UACpDzY,KAAKC,KAAK3G,EAAQmG,SAAS+B,EAAQiX,KAG9Cnf,gBAAwB,SAAuBkI,UACpClI,EAAQyf,kBAAkBvX,GAAUxB,KAAKC,KAAKuB,EAAOlJ,SAShEgB,qBAA6B,SAA4B2O,OACjD3E,EAAO,EACPhL,EAAS2P,EAAE3P,OAAQE,EAAI,MACtBA,EAAI,EAAGA,EAAIF,EAAQE,IACpB8K,GAAQ2E,EAAEzP,GAEd8K,GAAQhL,MACJ0tB,EAAoB,IAAIhsB,MAAM1B,OAC7BE,EAAI,EAAGA,EAAIF,EAAQE,IACpBwtB,EAAkBxtB,GAAKwH,KAAKiB,IAAIgH,EAAEzP,GAAK8K,UAC3C0iB,EAAkB7iB,KAAKoU,GAOhB,CACHjU,KAAMA,EACN2iB,MARA3tB,EAAS,GAAM,EACP0tB,GAAmB1tB,EAAS,GAAK,GAAK,MAEtC,IAAO0tB,EAAkB1tB,EAAS,GAAK0tB,EAAkB1tB,EAAS,EAAI,IAAM,QAS5FgB,YAAoB,SAAmBkI,EAAQokB,QACZ,IAAnBA,IAAgCA,GAAgB,GACvDA,IACDpkB,EAAS,GAAGoE,OAAOpE,GAAQ2B,KAAKoU,QAGhC2O,EAAQ1kB,EAAOlJ,OAAS,QAKrB,CAAC6tB,GAJC3kB,EAAOxB,KAAKQ,KAAK0lB,GAAS,GAInBE,GAHP9sB,EAAQE,OAAOgI,GAAQ,GAGR6kB,GAFf7kB,EAAOxB,KAAKQ,KAAa,EAAR0lB,GAAa,KAK3C5sB,0BAAkC,SAAiCosB,EAASjN,UACjEzY,KAAKC,KAAK3G,EAAQgtB,eAAeZ,EAASjN,KAGrDnf,iBAAyB,SAAwBosB,EAASjN,QAC5B,IAAdA,IAA2BA,GAAW,WAC9ClU,EAAM,EACNjM,EAAS,EAAG2V,EAAIyX,EAAQptB,OACnBE,EAAI,EAAGA,EAAIyV,EAAGzV,IAAK,KACpBgJ,EAASkkB,EAAQltB,GACjB+tB,EAAOjtB,EAAQmG,SAAS+B,GAE5B+C,IAAQ/C,EAAOlJ,OAAS,GAAKiuB,EAGzBjuB,GADAmgB,EACUjX,EAAOlJ,OAAS,EAEhBkJ,EAAOlJ,cAElBiM,EAAMjM,GAGjBgB,OAAe,SAAckI,OAGrBhJ,EAFAyV,EAAIzM,EAAOlJ,OACXkuB,EAAY,IAAIxsB,MAAMiU,OAErBzV,EAAI,EAAGA,EAAIyV,EAAGzV,IACfguB,EAAUhuB,GAAK,MAEfiuB,EAAY,IAAIzsB,MAAMiU,GACtBpN,EAAQ,MAEPrI,EAAI,EAAGA,EAAIyV,EAAGzV,IAAK,KAChB0S,EAAQub,EAAUvZ,QAAQ1L,EAAOhJ,IACjC0S,GAAS,EACTsb,EAAUtb,MAEVub,EAAU5lB,GAASW,EAAOhJ,GAC1BguB,EAAU3lB,GAAS,EACnBA,SAIJnI,EAAW,EAAGgZ,EAAW,MACxBlZ,EAAI,EAAGA,EAAIqI,EAAOrI,IACfguB,EAAUhuB,GAAKE,IACfA,EAAW8tB,EAAUhuB,GACrBkZ,EAAWlZ,UAIZiuB,EAAU/U,IAGrBpY,aAAqB,SAAoBmZ,EAASD,EAASiG,QAC7B,IAAdA,IAA2BA,GAAW,OAC9CiO,EAAQptB,EAAQgK,KAAKmP,GACrBkU,EAAQrtB,EAAQgK,KAAKkP,MAErBC,EAAQna,SAAWka,EAAQla,OAC3B,KAAM,kDAENsuB,EAAM,EAAG3Y,EAAIwE,EAAQna,OAChBE,EAAI,EAAGA,EAAIyV,EAAGzV,IAAK,CAGxBouB,IAFQnU,EAAQja,GAAKkuB,IACblU,EAAQha,GAAKmuB,UAIrBlO,EACOmO,GAAO3Y,EAAI,GAEX2Y,EAAM3Y,GAGrB3U,WAAmB,SAAkBkI,EAAQiX,QACf,IAAdA,IAA2BA,GAAW,WAC9CqN,EAAUxsB,EAAQgK,KAAK9B,GAEvBqlB,EAAK,EAAGC,EAAK,EAAG7Y,EAAIzM,EAAOlJ,OACtBE,EAAI,EAAGA,EAAIyV,EAAGzV,IAAK,KACpBuuB,EAAMvlB,EAAOhJ,GAAKstB,EACtBe,GAAME,EAAMA,EACZD,GAAMC,EAAMA,EAAMA,MAElBxT,EAAKsT,EAAK5Y,EAGVlV,EAFK+tB,EAAK7Y,EAEAjO,KAAKmB,IAAIoS,EAAI,YACvBkF,EACQzY,KAAKC,KAAKgO,GAAKA,EAAI,KACnBA,EAAI,GACKlV,EAEVA,GAIfO,WAAmB,SAAkBkI,EAAQiX,QACf,IAAdA,IAA2BA,GAAW,WAC9CqN,EAAUxsB,EAAQgK,KAAK9B,GACvB9B,EAAI8B,EAAOlJ,OAAQuuB,EAAK,EAAGG,EAAK,EAE3BxuB,EAAI,EAAGA,EAAIkH,EAAGlH,IAAK,KACpBuuB,EAAMvlB,EAAOhJ,GAAKstB,EACtBe,GAAME,EAAMA,EACZC,GAAMD,EAAMA,EAAMA,EAAMA,MAExBxT,EAAKsT,EAAKnnB,KAGV+Y,EAAU,KACN1Y,EAAI8mB,GAAMnnB,EAAI,UACTA,GAAKA,EAAI,KAAQA,EAAI,IAAMA,EAAI,IAAMA,EAAI,KAC1CsnB,GAAMjnB,EAAIA,IAGH,IAFLL,EAAI,IAAMA,EAAI,KAAQA,EAAI,IAAMA,EAAI,YANzCsnB,EAAKtnB,GAUG6T,EAAKA,GAAM,GAIhCja,UAAkB,SAAiBkI,EAAQ8gB,QAClB,IAATA,IAAsBA,EAAM,WACpC/d,EAAM,EAAG0J,EAAIzM,EAAOlJ,OACfE,EAAI,EAAGA,EAAIyV,EAAGzV,IACnB+L,GAAO/C,EAAOhJ,GAAKwH,KAAKoB,IAAII,EAAOhJ,GAAK8pB,UACpC/d,GAGZjL,eAAuB,SAAsBkI,EAAQylB,WAC7C1iB,EAAM,EAAG0J,EAAIzM,EAAOlJ,OACfE,EAAI,EAAGA,EAAIyV,EAAGzV,IACnB+L,GAAO/C,EAAOhJ,GAAKyuB,EAAQzuB,UACxB+L,GAGXjL,4BAAoC,SAAmCkI,EAAQylB,UACpEjnB,KAAKC,KAAK3G,EAAQ4tB,iBAAiB1lB,EAAQylB,KAGtD3tB,mBAA2B,SAA0BkI,EAAQylB,WACrDnB,EAAUxsB,EAAQ6tB,aAAa3lB,EAAQylB,GACvCV,EAAO,EAAGtY,EAAIzM,EAAOlJ,OACrBK,EAAI,EAAGQ,EAAI,EAENX,EAAI,EAAGA,EAAIyV,EAAGzV,IAAK,KACpB4uB,EAAI5lB,EAAOhJ,GAAKstB,EAChBuB,EAAIJ,EAAQzuB,GAEhB+tB,GAAQc,GAAKD,EAAIA,GACjBjuB,GAAKkuB,EACL1uB,GAAK0uB,EAAIA,SAGNd,GAAQptB,GAAKA,EAAIA,EAAIR,KAGhCW,SAAiB,SAAgBkI,EAAQ8lB,QACZ,IAAbA,IAA0BA,GAAU,OAE5C3f,EAASnG,EACR8lB,IACD3f,EAAS,GAAG/B,OAAOpE,YAEnBskB,EAAUxsB,EAAQgK,KAAKqE,GAASsG,EAAItG,EAAOrP,OACtCE,EAAI,EAAGA,EAAIyV,EAAGzV,IACnBmP,EAAOnP,IAAMstB,GAGrBxsB,cAAsB,SAAqBkI,EAAQ+lB,EAAaD,QAC/B,IAAjBC,IAA8BA,EAAcjuB,EAAQyf,kBAAkBvX,SACzD,IAAb8lB,IAA0BA,GAAU,WAC5CrZ,EAAIzM,EAAOlJ,OACXqP,EAAS2f,EAAU9lB,EAAS,IAAIxH,MAAMiU,GACjCzV,EAAI,EAAGA,EAAIyV,EAAGzV,IACnBmP,EAAOnP,GAAKgJ,EAAOhJ,GAAK+uB,SACrB5f,GAGXrO,gBAAwB,SAAuBkB,OACvCyT,EAAIzT,EAAMlC,OACVqP,EAAS,IAAI3N,MAAMiU,GACvBtG,EAAO,GAAKnN,EAAM,OACb,IAAIhC,EAAI,EAAGA,EAAIyV,EAAGzV,IACnBmP,EAAOnP,GAAKmP,EAAOnP,EAAI,GAAKgC,EAAMhC,UAC/BmP,+cC/cJ,MAAM6f,GACX7rB,YAAYmJ,EAAU,SACf2iB,GAAK3iB,EAAQ2iB,IAAMznB,KAAKsE,SAAS3M,SAAS,IAAIwV,UAAU,EAAG,SAC3Dua,MAAQ5iB,EAAQ4iB,OAAS3Z,KAAK0Z,QAC9BE,QAAU,GAoBjBC,aAAaC,EAAW/iB,EAAU,SAC3B6iB,QAAQ/pB,KA+DjB,SAAyBiqB,EAAW/iB,EAAU,QACxCgjB,KAAEA,EAAO,GAATC,SAAaA,EAAW,GAAxBC,MAA4BA,EAAQ,IAAOljB,EAE3CmjB,EAAYJ,EAAU9oB,EACtBmpB,EAAYL,EAAU5f,MACrBggB,IAAcC,QACXjuB,MAAM,0DAETnC,EAAWmwB,EAAU3lB,QAAUxK,EAAWowB,EAAU5lB,YACjDrI,MAAM,oDAGV8E,EAAIkpB,EAAU3lB,KACd6F,EAAUpJ,GAAKA,EAAEzG,OAAS,GAAKyG,EAAE,GAAKA,EAAEA,EAAEzG,OAAS,OAElD,IAAIiG,KAAOspB,EAAW,KACrBM,EAAWN,EAAUtpB,GACrB4J,IAASggB,EAAS7lB,KAAO6lB,EAAS7lB,KAAK6F,WAC3CggB,EAAST,MAAQS,EAAST,OAASnpB,EACnC4pB,EAASC,MACPD,EAASC,OAASD,EAAST,MAAMW,QAAQ,sBAAuB,MAClEF,EAASjwB,IAAMA,EAAIiwB,EAAS7lB,MAC5B6lB,EAAS1vB,IAAMA,EAAI0vB,EAAS7lB,MAChB,MAAR/D,IACF4pB,EAASG,WAAa/tB,EAAY4tB,EAAS7lB,aAIxC,CACLulB,UAAAA,EACAG,MAAAA,EACAD,SAAAA,EACAD,KAAAA,EACAS,iBAAWL,EAAUE,qBAAYH,EAAUG,QAhGzBI,CAAgBX,EAAW/iB,IAU/C2jB,YAAYC,EAAW,QACjBf,EAAU5Z,KAAK4a,WAAWD,UACvBf,EAAUA,EAAQ,QAAK5iB,EAUhC4jB,WAAWD,EAAW,UACdxd,MAAEA,EAAFqd,OAASA,GAAWG,cACZ3jB,IAAVmG,EACK6C,KAAK4Z,QAAQzc,GAAS,CAAC6C,KAAK4Z,QAAQzc,SAAUnG,OAExCA,IAAXwjB,GAAmC,KAAXA,EAAsBxa,KAAK4Z,QAChD5Z,KAAK4Z,QAAQlgB,OAAQmhB,GAAaA,EAASL,SAAWA,GAa/DM,kBAAkB/jB,EAAU,UACpBgkB,cAAEA,EAAFJ,SAAiBA,GAAa5jB,EAC9B8jB,EAAW7a,KAAK0a,YAAYC,MAC7BE,SC/DF,SAA2BA,EAAU9jB,EAAU,QAChDxC,EAAO,CACTvD,EAAG6pB,EAASf,UAAU9oB,EAAEuD,KACxB2F,EAAG2gB,EAASf,UAAU5f,EAAE3F,OAEtBqE,KACFA,EAAOiiB,EAASf,UAAU9oB,EAAE7G,IAD1B2O,GAEFA,EAAK+hB,EAASf,UAAU9oB,EAAEtG,IAFxB4P,eAGFA,EAHE0gB,QAIFA,EAAU,GAJRzgB,WAKFA,EAAa,GALX0gB,WAMFA,EAAa,IACXlkB,GACA/F,EAAEA,EAAFkJ,EAAKA,GAAMwC,EAAQnI,EAAM,CAAEqE,KAAAA,EAAME,GAAAA,WAE7BmiB,OACD,kBACClkB,EAAQkkB,aACV/gB,EAAI4c,GAAc5c,EAAG,EAAG,CACtBwc,WAAY,EACZC,WAAY,EACZF,WAAY,IAEdzlB,EAAIA,EAAErF,MAAM,EAAGqF,EAAEzG,OAAS,cAGzB,mBACCwM,EAAQkkB,aACV/gB,EAAI4c,GAAc5c,EAAG,EAAG,CACtBwc,WAAY,EACZC,WAAY,EACZF,WAAY,IAEdzlB,EAAIA,EAAErF,MAAM,EAAGqF,EAAEzG,OAAS,QAM3B,IAAImP,KAAUshB,EAAS,KACtBE,EAAgBxhB,EAAO3C,SAAW,UAC9B2C,EAAO3J,KAAKsH,mBACb,aAEH6C,EAAIvD,EAAUuD,EADHihB,GAAK5lB,KAAK2E,cAIlB,aAEHA,EAAI3N,EAAQ2N,EADFihB,GAAKnQ,kBAAkB9Q,cAI9B,YACHA,EAAIkhB,EAAOlhB,EAAG,CACZtD,SAAUskB,EAActuB,MAAQT,OAAO+uB,EAActuB,OAAS,EAC9DsK,UAAW,uBAIV,UACHgD,EAAIpC,EAAQoC,EAAG,CACb/P,IAAK+wB,EAAc/wB,IAAMgC,OAAO+uB,EAAc/wB,KAAO,EACrDO,IAAKwwB,EAAcxwB,IAAMyB,OAAO+uB,EAAcxwB,KAAO,cAIpD,cAEHwP,EAAI3N,EAAQ2N,EADGxP,EAAIwP,cAIhB,WACHA,EAAI7N,EAAU6N,EAAGghB,EAActuB,MAAQT,OAAO+uB,EAActuB,OAAS,aAGlE,MACHsN,EAAItO,EAAKsO,EAAGghB,EAActuB,MAAQT,OAAO+uB,EAActuB,OAAS,aAG7D,aACAoK,sBAGG,IAAI9K,sCAA+BmvB,QAAQC,eAIlDhhB,EAIEN,EAAc,CAAEhJ,EAAAA,EAAGkJ,EAAAA,GAAK,CAAEtB,KAAAA,EAAME,GAAAA,EAAIwB,eAAAA,EAAgBC,WAAAA,IAHlDmC,EAAQ,CAAE1L,EAAAA,EAAGkJ,EAAAA,GAAK,CAAEtB,KAAAA,EAAME,GAAAA,EAAIyB,WAAAA,IDxB9BugB,CAAkBD,EAAUE,GAGrCQ,UAAUZ,UACD3a,KAAK0a,YAAYC,GAAUb,UAAU9oB,EAAE2oB,MAGhD6B,UAAUb,UACD3a,KAAK0a,YAAYC,GAAUb,UAAU5f,EAAEyf,OE5FlD,MAAM8B,GAAe,CAAC,MAAO,OAAQ,cAE9B,SAASC,GAAoB9hB,OAC9BggB,EAAUhgB,EAAOggB,QACjBrvB,EAASqvB,EAAQrvB,OACjBoxB,EAAe,CACjBC,MAAO,IAAI3vB,MAAM1B,GACjBsxB,OAAQ,CACNC,GAAI,CACFC,UAAW,EACXxnB,KAAM,IAAItI,MAAM1B,MAKlByxB,EAAqB,OACpB,IAAIvxB,EAAI,EAAGA,EAAIgxB,GAAalxB,OAAQE,IAAK,KACxCkvB,EAAQsC,GAAsBR,GAAahxB,IAC3CmvB,EAAQ,GAAGD,KACbqC,EAAmBnsB,KAAK8pB,GACxBgC,EAAaE,OAAOlC,GAAS,CAC3BoC,UAAW,EACXxnB,KAAM,IAAItI,MAAM1B,SAKjB,IAAIE,EAAI,EAAGA,EAAIF,EAAQE,IAAK,KAC3BowB,EAAWjB,EAAQnvB,GACvBkxB,EAAaC,MAAMnxB,GAAKowB,EAASqB,cAC5B,IAAIhxB,EAAI,EAAGA,EAAI8wB,EAAmBzxB,OAAQW,IAC7CywB,EAAaE,OAAOG,EAAmB9wB,IAAIqJ,KAAK9J,GAAK0xB,WACnDtB,EAASmB,EAAmB9wB,KAG5B2vB,EAAStmB,OACXonB,EAAaE,OAAOC,GAAGvnB,KAAK9J,GAAK,CAACowB,EAAStmB,KAAKvD,EAAG6pB,EAAStmB,KAAK2F,IAGrEN,EAAO+hB,aAAeA,EAGjB,SAASS,GAAUC,UAC2B,IAA5CZ,GAAatc,QAAQkd,GAGvB,SAASJ,GAAsBrvB,UAC7BA,EAAMyK,cAAcijB,QAAQ,aAAc,IC/CpC,SAASgC,GAAoBC,OACtCC,EAAa,OACZ,IAAI/xB,EAAI,EAAGA,EAAI8xB,EAAYhyB,OAAQE,IACtC+xB,EAAW3sB,KAAKssB,WAAWI,EAAY9xB,YAElC+xB,ECLM,SAASC,GAAgB5B,EAAUjuB,OAK5C8vB,EAAU7B,EAAS6B,QACnBC,EAAS9B,EAAS8B,OAEtB9B,EAAS+B,UAAW,MAChBC,EAAc,CAAE7rB,EAAG,GAAIkJ,EAAG,IAC9B2gB,EAAStmB,KAAOsoB,MAQZC,EANAC,EAAWlC,EAASmC,OACpBC,EAAWpC,EAASqC,OAIpBC,GAAU,EAEV1yB,EAAI,OACDA,EAAImC,EAAMrC,OAAQE,OACvBqyB,EAAQlwB,EAAMwwB,WAAW3yB,GACX,KAAVqyB,GAA0B,KAAVA,EAClBK,GAAU,UAENA,EAAS,UAKbE,GAAU,EACVC,GAAe,EACfC,GAAmB,EACnBC,EAAiB,EACjBC,GAAc,EACdC,GAAY,EACZ3hB,EAAe,EACf4hB,EAAY,EACZC,GAAa,EACbC,GAAU,EACVC,GAAiB,EACjBC,EAAkB,OACftzB,GAAKmC,EAAMrC,OAAQE,OACAqyB,EAApBryB,IAAMmC,EAAMrC,OAAgB,GACnBqC,EAAMwwB,WAAW3yB,GAC1BizB,EAEY,KAAVZ,GAA0B,KAAVA,IAClBO,GAAU,EACVK,GAAY,WAMVZ,GAAS,IAAMA,GAAS,GAE1Be,GAAU,EACNE,EAAkB,EACpBhiB,IAAiB+gB,EAAQ,IAAM7qB,KAAKmB,IAAI,GAAI2qB,MAE5ChiB,GAAgB,GAChBA,GAAgB+gB,EAAQ,SAErB,GAAc,KAAVA,GAA0B,KAAVA,EAEzBe,GAAU,EACVE,QACK,IACDF,EAAS,IAEPR,EACFA,GAAU,EAINE,IAAkBO,GAAiB,WAGnCA,EACFA,GAAiB,MACZ,CACDR,GACFE,EAAiBI,EAAa,EAAI7hB,EAAeA,EACjDwhB,GAAmB,EACnBD,GAAe,GACLG,IACVE,EAAYC,EAAa,EAAI7hB,EAAeA,OAE1CiiB,EAAYP,EAAc1hB,EAAe,EAAI,MAC5C,IAAI7Q,EAAI,EAAGA,EAAI8yB,EAAW9yB,IACzBqyB,EACFN,GAAYO,EAEZP,EAAWU,EAEbd,EAAY7rB,EAAEnB,KAAKktB,GACnBF,EAAY3iB,EAAErK,KAAKotB,EAAWP,GAC9BK,GAAYJ,EAIlBiB,GAAa,EACb7hB,EAAe,EACfgiB,EAAkB,EAClBF,GAAU,EACVJ,GAAc,KAIZX,EAAQ,IAAMA,EAAQ,GACxBe,GAAU,EACVN,GAAmB,EACnBxhB,EAAe+gB,EAAQ,QAClB,GAAIA,EAAQ,IAAMA,EAAQ,IAE/Be,GAAU,EACVN,GAAmB,EACnBxhB,EAAe+gB,EAAQ,GACvBc,GAAa,OACR,GAAc,MAAVd,EAETe,GAAU,EACVJ,GAAc,EACd1hB,EAAe,OACV,GAAI+gB,EAAQ,IAAMA,EAAQ,GAC/Be,GAAU,EACVJ,GAAc,EACd1hB,EAAe+gB,EAAQ,QAClB,GAAIA,EAAQ,IAAMA,EAAQ,GAE/Be,GAAU,EACVP,GAAe,EACfvhB,EAAe+gB,EAAQ,QAClB,GAAIA,EAAQ,KAAOA,EAAQ,IAEhCe,GAAU,EACVP,GAAe,EACfvhB,EAAe+gB,EAAQ,IACvBc,GAAa,OACR,GAAc,KAAVd,GAA4C,KAA5BlwB,EAAMwwB,WAAW3yB,EAAI,GAE9CozB,GAAU,EACVH,GAAY,OACP,GAAc,KAAVZ,EAETe,GAAU,EACVP,GAAe,EACfvhB,EAAe,EACf6hB,GAAa,OACR,GAAc,KAAVd,EAAc,KAGnBmB,EAASrxB,EAAMwwB,WAAW3yB,EAAI,IAE/BwzB,GAAU,IAAMA,GAAU,IAChB,KAAXA,GACW,KAAXA,KAEAJ,GAAU,EACLR,IAASE,GAAmB,GACjCK,GAAa,QAEI,KAAVd,GAA0B,KAAVA,IACzBO,GAAU,EACVK,GAAY,ICrKtB,MAAMQ,GAAsB,SACtBC,GAAuB,UAEd,SAASC,GAAevD,EAAUjuB,EAAOgN,MACtDihB,EAASwD,aAAc,EAElBxD,EAASf,WAAiD,IAApCjwB,OAAOmD,KAAK6tB,EAASf,WAsClD,SAAkBe,EAAUjuB,EAAOgN,OAC7BijB,EAAc,GACd/C,EAAYjwB,OAAOmD,KAAK6tB,EAASf,WACjCwE,EAAoBxE,EAAUvvB,OAClCuvB,EAAUrgB,QAAS2gB,GAAcyC,EAAYzC,GAAY,IACzDS,EAAStmB,KAAOsoB,MAGZ0B,EAAQ3xB,EAAM4xB,MAAM,wBAEnB,IAAI/zB,EAAI,EAAGA,EAAI8zB,EAAMh0B,OAAQE,IAAK,KACjCgJ,EAAS8qB,EAAM9zB,GAChBg0B,OACAnE,QAAQ4D,GAAqB,IAC7BM,MAAML,OACL1qB,EAAOlJ,OAAS+zB,GAAsB,MACnC,IAAIpzB,EAAI,EAAGA,EAAIuI,EAAOlJ,OAAQW,IAEjC2xB,EAAY/C,EAAU5uB,EAAIozB,IAAoBzuB,KAC5CssB,WAAW1oB,EAAOvI,UAItB0O,EAAO8kB,KAAK7uB,6BAAsB4D,KA1DpCkrB,CAAS9D,EAAUjuB,EAAOgN,GAW9B,SAAiBihB,EAAUjuB,EAAOgN,OAC5BijB,EAAc,CAAE7rB,EAAG,GAAIkJ,EAAG,IAC9B2gB,EAAStmB,KAAOsoB,MAGZ0B,EAAQ3xB,EAAM4xB,MAAM,wBAEnB,IAAI/zB,EAAI,EAAGA,EAAI8zB,EAAMh0B,OAAQE,IAAK,KACjCgJ,EAAS8qB,EAAM9zB,GAChBg0B,OACAnE,QAAQ4D,GAAqB,IAC7BM,MAAML,OACL1qB,EAAOlJ,OAAS,GAAM,MACnB,IAAIW,EAAI,EAAGA,EAAIuI,EAAOlJ,OAAQW,GAAQ,EAEzC2xB,EAAY7rB,EAAEnB,KAAKssB,WAAW1oB,EAAOvI,IAAM2vB,EAAS+D,SACpD/B,EAAY3iB,EAAErK,KAAKssB,WAAW1oB,EAAOvI,EAAI,IAAM2vB,EAAS6B,cAG1D9iB,EAAO8kB,KAAK7uB,6BAAsB4D,KAhCpCorB,CAAQhE,EAAUjuB,EAAOgN,GAMvBihB,EAASf,cACN,IAAItpB,KAAOqqB,EAASf,UACvBe,EAASf,UAAUtpB,GAAK+D,KAAOsmB,EAAStmB,KAAK/D,GCfpC,SAASsuB,GAASjE,EAAUjuB,OAIrC6G,EAHAsrB,EAAqB,uBAEzBlE,EAASmE,WAAY,MAEjBnC,EAAc,CAAE7rB,EAAG,GAAIkJ,EAAG,IAC9B2gB,EAAStmB,KAAOsoB,MAEZ0B,EAAQ3xB,EAAM4xB,MAAM,wBAEnB,IAAI/zB,EAAI,EAAGA,EAAI8zB,EAAMh0B,OAAQE,IAChCgJ,EAAS8qB,EAAM9zB,GAAGg0B,OAAOnE,QAAQyE,EAAoB,IAAIP,MAAM,KAC/D3B,EAAY7rB,EAAEnB,KAAKssB,WAAW1oB,EAAO,KACrCopB,EAAY3iB,EAAErK,KAAKssB,WAAW1oB,EAAO,KCV1B,SAASwrB,GAAMrlB,EAAQ7C,OAChCmoB,ECFS,SAAsBtF,OAC/BuF,EAAOvF,EAAQ,GAAGrlB,KAAK2F,EAAE,GACzBklB,EAAOD,EACPE,EAAQzF,EAAQrvB,OAChB+0B,EAAQ1F,EAAQ,GAAGrlB,KAAKvD,EAAEzG,OAE1B8uB,EAAI,IAAIptB,MAAMozB,OACb,IAAI50B,EAAI,EAAGA,EAAI40B,EAAO50B,IAAK,CAC9B4uB,EAAE5uB,GAAKmvB,EAAQnvB,GAAG8J,KAAK2F,MAClB,IAAIhP,EAAI,EAAGA,EAAIo0B,EAAOp0B,IAAK,KAC1B0B,EAAQysB,EAAE5uB,GAAGS,GACb0B,EAAQuyB,IAAMA,EAAOvyB,GACrBA,EAAQwyB,IAAMA,EAAOxyB,UAIvBowB,EAASpD,EAAQ,GAAGrlB,KAAKvD,EAAE,GAC3BuuB,EAAQ3F,EAAQ,GAAGrlB,KAAKvD,EAAE4oB,EAAQ,GAAGrlB,KAAKvD,EAAEzG,OAAS,GACrD2yB,EAAStD,EAAQ,GAAGsC,UACpBsD,EAAQ5F,EAAQyF,EAAQ,GAAGnD,aAI7Bc,EAASuC,MACN,IAAI1E,KAAYxB,EACnBwB,EAASzgB,iBAGT8iB,EAASsC,GACXnG,EAAEjf,UAGG,CACLif,EAAGA,EACHoG,KAAMxtB,KAAK9H,IAAI6yB,EAAQuC,GACvBG,KAAMztB,KAAKvH,IAAIsyB,EAAQuC,GACvBI,KAAM1tB,KAAK9H,IAAI+yB,EAAQsC,GACvBI,KAAM3tB,KAAKvH,IAAIwyB,EAAQsC,GACvBL,KAAMA,EACNC,KAAMA,EACNS,MAAOC,EAAUzG,EAAE,GAAGnkB,IAAIjD,KAAKiB,ODtCrB6sB,CAAanmB,EAAOggB,SAC3B7iB,EAAQipB,YACXpmB,EAAOqmB,aENI,SAA8Bf,EAAOnoB,OAG9CmpB,EAAcC,EAAcC,EAAcC,EAC1CC,EAASC,EAASC,EAASC,EAG3BC,EAAKC,EAAKC,EAAKC,EAwBfC,EA9BAjB,EAAQX,EAAMW,MACdxG,EAAI6F,EAAM7F,EAGV0H,EAAe1H,EAAE9uB,OACjBy2B,EAAW3H,EAAE,GAAG9uB,OAGhBkK,EAAKyqB,EAAMO,KAEXwB,GADK/B,EAAMQ,KACAjrB,IAAOusB,EAAW,GAC7BE,EAAKhC,EAAMS,KAEXwB,GADKjC,EAAMU,KACAsB,IAAOH,EAAe,GACjC5B,EAAOD,EAAMC,KACbC,EAAOF,EAAME,KAabgC,EAAiC,EAA1BrqB,EAAQsqB,gBACfC,EAAgB,IAAIr1B,MAAMm1B,OAEzB,IAAIG,EAAQ,EAAGA,EAAQH,EAAMG,IAAS,KAErCC,EAAe,GACnBF,EAAcC,GAASC,MACnBC,EAAOF,EAAQ,EACf9pB,GACD2nB,EAAOroB,EAAQ2qB,gBAAkB7B,GAClC5tB,KAAK4e,KAAK0Q,GAAS,GAAKxqB,EAAQsqB,iBAEhCP,EADW,IAATW,EACWhqB,EAASV,EAAQ2qB,gBAAkB7B,EAEnC,EAAIpoB,EAASV,EAAQ2qB,gBAAkB7B,MAElDtB,EAAQ,MACZiD,EAAaG,OAASb,EACtBU,EAAajD,MAAQA,IAEjBuC,GAAc3B,GAAQ2B,GAAc1B,OAEnC,IAAIwC,EAAc,EAAGA,EAAcb,EAAe,EAAGa,IAAe,KACnEC,EAAaxI,EAAEuI,GACfE,EAAkBzI,EAAEuI,EAAc,OACjC,IAAIG,EAAQ,EAAGA,EAAQf,EAAW,EAAGe,IACxC7B,EAAe2B,EAAWE,GAC1B5B,EAAe0B,EAAWE,EAAQ,GAClC3B,EAAe0B,EAAgBC,GAC/B1B,EAAeyB,EAAgBC,EAAQ,GAEvCzB,EAAUJ,EAAeY,EACzBP,EAAUJ,EAAeW,EACzBN,EAAUJ,EAAeU,EACzBL,EAAUJ,EAAeS,EAKrBR,IAAYC,GAAWD,IAAYE,IACrCE,EACEqB,GAASjB,EAAaZ,IAAiBC,EAAeD,GACxDS,EAAMiB,EACNhB,EAAMmB,EACNlB,EACEe,GACCd,EAAaZ,IAAiBE,EAAeF,GAChD3B,EAAM1uB,KAAK6wB,EAAMO,EAAKxsB,GACtB8pB,EAAM1uB,KAAK8wB,EAAMQ,EAAKD,GACtB3C,EAAM1uB,KAAK+wB,EAAMK,EAAKxsB,GACtB8pB,EAAM1uB,KAAKgxB,EAAMM,EAAKD,IAGpBT,IAAYF,GAAWE,IAAYD,IACrCE,EAAMqB,EAAQ,EACdpB,EACEiB,EACA,GACCd,EAAaT,IAAiBF,EAAeE,GAChDO,EACEmB,EACA,GACCjB,EAAaT,IAAiBD,EAAeC,GAChDQ,EAAMe,EAAc,EACpBrD,EAAM1uB,KAAK6wB,EAAMO,EAAKxsB,GACtB8pB,EAAM1uB,KAAK8wB,EAAMQ,EAAKD,GACtB3C,EAAM1uB,KAAK+wB,EAAMK,EAAKxsB,GACtB8pB,EAAM1uB,KAAKgxB,EAAMM,EAAKD,IAGpBX,IAAYC,IACdE,GACGqB,EACC,GACCjB,EAAaX,IAAiBC,EAAeD,IAC9Cc,EACFxsB,EACFksB,GACGiB,GACEd,EAAaX,IAAiBC,EAAeD,IAC9CgB,EACFD,EACEX,IAAYD,IACdM,EACEmB,EACA,GACCjB,EAAaX,IAAiBD,EAAeC,GAChDU,EAAMe,EACNrD,EAAM1uB,KAAK6wB,GACXnC,EAAM1uB,KAAK8wB,GACXpC,EAAM1uB,KAAK+wB,EAAMK,EAAKxsB,GACtB8pB,EAAM1uB,KAAKgxB,EAAMM,EAAKD,IAEpBV,IAAYF,IACdM,EAAMmB,EACNlB,EACEe,EACA,GACCd,EAAaV,IAAiBF,EAAeE,GAChD7B,EAAM1uB,KAAK6wB,GACXnC,EAAM1uB,KAAK8wB,GACXpC,EAAM1uB,KAAK+wB,EAAMK,EAAKxsB,GACtB8pB,EAAM1uB,KAAKgxB,EAAMM,EAAKD,IAEpBX,IAAYE,IACdG,EAAMmB,EAAQ,EACdlB,EACEe,GACCd,EAAaX,IAAiBE,EAAeF,GAChD5B,EAAM1uB,KAAK6wB,GACXnC,EAAM1uB,KAAK8wB,GACXpC,EAAM1uB,KAAK+wB,EAAMK,EAAKxsB,GACtB8pB,EAAM1uB,KAAKgxB,EAAMM,EAAKD,IAEpBV,IAAYC,IACdG,EACEmB,GACCjB,EAAaV,IAAiBC,EAAeD,GAChDS,EAAMe,EAAc,EACpBrD,EAAM1uB,KAAK6wB,GACXnC,EAAM1uB,KAAK8wB,GACXpC,EAAM1uB,KAAK+wB,EAAMK,EAAKxsB,GACtB8pB,EAAM1uB,KAAKgxB,EAAMM,EAAKD,YAOzB,CACLzB,KAAMP,EAAMO,KACZC,KAAMR,EAAMQ,KACZC,KAAMT,EAAMS,KACZC,KAAMV,EAAMU,KACZoC,SAAUV,GF7JYW,CAAqB/C,EAAOnoB,UAC3CmoB,EAAM7F,GAEfzf,EAAOsoB,OAAShD,oBGLP,eACLiD,EAQAluB,EACO,QADPA,EAEI,WAPNkuB,EAAM52B,GASJ3B,SAAW,iBACN,WAAaqK,EAAkB,cAAgBA,WAIpDmuB,EAAK,EACLC,EAAU,KACVC,EAAQ,KAERC,EAAO,CACTC,KAAO,SAAS7wB,MACL,IAANA,GAA6B,IAAjBA,EAAKA,EAAI,SAMhB,IAAIzF,MAAM,0BALhBk2B,EAAKzwB,EACL4wB,EAAKE,aACLF,EAAKG,wBACLH,EAAKI,oBAMTC,MAAQ,SAASC,EAAIC,GACnBP,EAAKQ,IAAIF,EAAIC,EAAI,IAGnBE,OAAS,SAASH,EAAIC,OAChBnxB,EAAI,EAAEywB,EACVG,EAAKQ,IAAIF,EAAIC,GAAK,OACd,IAAIr4B,EAAE,EAAGA,EAAE23B,EAAI33B,IACjBo4B,EAAGp4B,IAAMkH,EACTmxB,EAAGr4B,IAAMkH,GAIbsxB,KAAO,SAASJ,EAAIC,GAClBP,EAAKQ,IAAIF,EAAIC,GAAK,IAGpBI,MAAQ,SAASL,EAAIC,WACfK,EAAM,GACNC,EAAM,GACN34B,EAAI,EAEAyP,EAAE,EAAGA,EAAEkoB,EAAIloB,IAAK,CACtBzP,EAAIyP,EAAEkoB,MACF,IAAI1tB,EAAG,EAAGA,EAAG0tB,EAAI1tB,IACnByuB,EAAIzuB,GAAMmuB,EAAGnuB,EAAKjK,GAClB24B,EAAI1uB,GAAMouB,EAAGpuB,EAAKjK,GAEpB83B,EAAKK,MAAMO,EAAKC,OACZ,IAAIC,EAAG,EAAGA,EAAGjB,EAAIiB,IACnBR,EAAGQ,EAAK54B,GAAK04B,EAAIE,GACjBP,EAAGO,EAAK54B,GAAK24B,EAAIC,OAIjB,IAAIryB,EAAE,EAAGA,EAAEoxB,EAAIpxB,IAAK,KAClB,IAAIsyB,EAAG,EAAGA,EAAGlB,EAAIkB,IACnB74B,EAAIuG,EAAIsyB,EAAGlB,EACXe,EAAIG,GAAMT,EAAGp4B,GACb24B,EAAIE,GAAMR,EAAGr4B,GAEf83B,EAAKK,MAAMO,EAAKC,OACZ,IAAIG,EAAG,EAAGA,EAAGnB,EAAImB,IAEnBV,EADAp4B,EAAIuG,EAAIuyB,EAAGnB,GACHe,EAAII,GACZT,EAAGr4B,GAAK24B,EAAIG,KAKlBC,OAAS,SAASX,EAAIC,WAChBK,EAAM,GACNC,EAAM,GACN34B,EAAI,EAEAyP,EAAE,EAAGA,EAAEkoB,EAAIloB,IAAK,CACtBzP,EAAIyP,EAAEkoB,MACF,IAAI1tB,EAAG,EAAGA,EAAG0tB,EAAI1tB,IACnByuB,EAAIzuB,GAAMmuB,EAAGnuB,EAAKjK,GAClB24B,EAAI1uB,GAAMouB,EAAGpuB,EAAKjK,GAEpB83B,EAAKS,OAAOG,EAAKC,OACb,IAAIC,EAAG,EAAGA,EAAGjB,EAAIiB,IACnBR,EAAGQ,EAAK54B,GAAK04B,EAAIE,GACjBP,EAAGO,EAAK54B,GAAK24B,EAAIC,OAIjB,IAAIryB,EAAE,EAAGA,EAAEoxB,EAAIpxB,IAAK,KAClB,IAAIsyB,EAAG,EAAGA,EAAGlB,EAAIkB,IACnB74B,EAAIuG,EAAIsyB,EAAGlB,EACXe,EAAIG,GAAMT,EAAGp4B,GACb24B,EAAIE,GAAMR,EAAGr4B,GAEf83B,EAAKS,OAAOG,EAAKC,OACb,IAAIG,EAAG,EAAGA,EAAGnB,EAAImB,IAEnBV,EADAp4B,EAAIuG,EAAIuyB,EAAGnB,GACHe,EAAII,GACZT,EAAGr4B,GAAK24B,EAAIG,KAKlBR,IAAM,SAASF,EAAIC,EAAIW,WACjB54B,EAAGI,EAAGy4B,EAAI9xB,EAAG+P,EAAKgiB,EAAIC,EAAIC,EAAI5tB,EAC9B6tB,EAAK1B,GAAM,EAEPliB,EAAE,EAAGA,EAAEkiB,EAAIliB,IAEdA,GADHtO,EAAIywB,EAAQniB,MAEVyB,EAAMkhB,EAAG3iB,GACT2iB,EAAG3iB,GAAK2iB,EAAGjxB,GACXixB,EAAGjxB,GAAK+P,EACRA,EAAMmhB,EAAG5iB,GACT4iB,EAAG5iB,GAAK4iB,EAAGlxB,GACXkxB,EAAGlxB,GAAK+P,OAIR,IAAIrS,EAAE,EAAGA,EAAE8yB,EAAI9yB,IAAI,EAAG,CACxBrE,EAAI,EACJJ,EAAIu3B,GAAI9yB,GAAK,OACT,IAAIpE,EAAE,EAAGA,EAAEoE,EAAGpE,IAAK,CACrBy4B,EAAKrB,EAAMr3B,EAAI64B,GACfF,EAAKH,EAAInB,EAAMr3B,OACX,IAAIR,EAAES,EAAGT,EAAE23B,EAAI33B,GAAI6E,GAAG,EAExBu0B,EAAKF,EAAGd,EADRa,EAAKj5B,EAAI6E,GACQs0B,EAAGd,EAAGY,GACvBztB,EAAK0tB,EAAGb,EAAGY,GAAME,EAAGf,EAAGa,GACvBb,EAAGa,GAAMb,EAAGp4B,GAAKo5B,EACjBhB,EAAGp4B,IAAMo5B,EACTf,EAAGY,GAAMZ,EAAGr4B,GAAKwL,EACjB6sB,EAAGr4B,IAAMwL,EAEXhL,GAAKJ,KAKX43B,WAAa,WAETJ,EADwB,oBAAhB0B,YACE,IAAIA,YAAY3B,GAEhB,GAGVE,EADyB,oBAAjBh2B,aACA,IAAIA,aAAgB,KAAH81B,GAEjB,IAIZ4B,aAAe,aAIftB,sBAAwB,eAClBj4B,EAAI,EACJS,EAAI,EACJoE,EAAI,MACR+yB,EAAQ,GAAK,IACL53B,EAAI23B,GAAI,KACd9yB,EAAI8yB,GAAM,EACJ9yB,GAAKpE,GACTA,GAAKoE,EACLA,IAAM,EAERpE,GAAKoE,EACL+yB,EAAQ53B,GAAKS,IAIjBy3B,iBAAmB,eACbsB,EAAK7B,GAAM,EACX0B,EAAK1B,GAAM,EACX8B,EAAK9B,GAAM,EACX+B,EAAOF,EAAKH,EACZxtB,EAAIrE,KAAKmf,IAAInf,KAAKmyB,GAAGhC,GACrBiC,EAAK,EAAE/tB,EAAEA,EACTguB,EAAKryB,KAAKC,KAAKmyB,GAAI,EAAIA,IACvBl5B,EAAIm3B,EAAMwB,GAAM,EAChBjyB,EAAIywB,EAAM,GAAK,EACnBhsB,EAAI,EAAE+tB,MACF,IAAI55B,EAAE,EAAGA,EAAEy5B,EAAIz5B,IAEjB45B,GAAM/tB,GADNnL,GAAKk5B,GAGLC,GAAMhuB,GADNzE,GAAKyyB,GAELhC,EAAM73B,GAAKoH,EACXywB,EAAMwB,EAAKr5B,GAAKU,EAER,IAAP+4B,IACD5B,EAAM4B,GAAMjyB,KAAKC,KAAK,SAEpB,IAAIhH,EAAE,EAAGA,EAAE44B,EAAI54B,IACjBo3B,EAAM2B,EAAK/4B,GAAMo3B,EAAMp3B,OAErB,IAAIoE,EAAE,EAAGA,EAAE60B,EAAM70B,IACnBgzB,EAAMhzB,EAAI20B,IAAO3B,EAAMhzB,KAKzBi1B,EAAO,CAAC,OAAQ,QAAS,SAAU,QAAS,UACxC95B,EAAE,EAAGA,EAAE85B,EAAKh6B,OAAQE,IAC1B03B,EAAIoC,EAAK95B,IAAM83B,EAAKgC,EAAK95B,WAE3B03B,EAAIqC,GAAKjC,EAAKU,KACdd,EAAIY,IAAMR,EAAKK,MACfT,EAAIsC,KAAOlC,EAAKS,OAETb,IACNl4B,KAAK+V,uCClOCwJ,EAAe5e,EAAGQ,UAChBR,EAAIQ,EAGfG,MAAc,SAAawI,WACnBrJ,GAAOg6B,EAAAA,EACFj6B,EAAI,EAAGA,EAAIsJ,EAAOxJ,OAAQE,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOtJ,GAAGF,OAAQW,IAC9B6I,EAAOtJ,GAAGS,GAAKR,IAAKA,EAAMqJ,EAAOtJ,GAAGS,WAGzCR,GAGXa,MAAc,SAAawI,WACnB5J,EAAMu6B,EAAAA,EACDj6B,EAAI,EAAGA,EAAIsJ,EAAOxJ,OAAQE,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOtJ,GAAGF,OAAQW,IAC9B6I,EAAOtJ,GAAGS,GAAKf,IAAKA,EAAM4J,EAAOtJ,GAAGS,WAGzCf,GAGXoB,SAAiB,SAAgBwI,WACzB5J,EAAMu6B,EAAAA,EACNh6B,GAAOg6B,EAAAA,EACFj6B,EAAI,EAAGA,EAAIsJ,EAAOxJ,OAAQE,QAC1B,IAAIS,EAAI,EAAGA,EAAI6I,EAAOtJ,GAAGF,OAAQW,IAC9B6I,EAAOtJ,GAAGS,GAAKf,IAAKA,EAAM4J,EAAOtJ,GAAGS,IACpC6I,EAAOtJ,GAAGS,GAAKR,IAAKA,EAAMqJ,EAAOtJ,GAAGS,UAGzC,CACHf,IAAIA,EACJO,IAAIA,IAIZa,UAAkB,SAAiBwI,EAAQwgB,QAClB,IAATA,IACRA,EAAM,WAEN/d,EAAM,EACNmuB,EAAK5wB,EAAOxJ,OACZq6B,EAAK7wB,EAAO,GAAGxJ,OACVE,EAAI,EAAGA,EAAIk6B,EAAIl6B,QACf,IAAIS,EAAI,EAAGA,EAAI05B,EAAI15B,IACpBsL,GAAOzC,EAAOtJ,GAAGS,GAAK+G,KAAKoB,IAAIU,EAAOtJ,GAAGS,GAAKqpB,UAG9C/d,GAGZjL,OAAe,SAAcwI,EAAQgoB,QACN,IAAfA,IACRA,EAAY,OAIZhE,EAAS8M,EAAGp6B,EAAGS,EAFfmS,EAAOtJ,EAAOxJ,OACd2d,EAAOnU,EAAO,GAAGxJ,WAGF,IAAfwxB,EAAkB,KAClBhE,EAAU,CAAC,GACX8M,EAAIxnB,EAAO6K,EACNzd,EAAI,EAAGA,EAAI4S,EAAM5S,QACbS,EAAI,EAAGA,EAAIgd,EAAMhd,IAClB6sB,EAAQ,IAAMhkB,EAAOtJ,GAAGS,GAGhC6sB,EAAQ,IAAM8M,OACX,GAAkB,IAAd9I,MACPhE,EAAU,IAAI9rB,MAAMic,GACpB2c,EAAIxnB,EACCnS,EAAI,EAAGA,EAAIgd,EAAMhd,IAAK,KACvB6sB,EAAQ7sB,GAAK,EACRT,EAAI,EAAGA,EAAI4S,EAAM5S,IAClBstB,EAAQ7sB,IAAM6I,EAAOtJ,GAAGS,GAE5B6sB,EAAQ7sB,IAAM25B,MAEf,CAAA,GAAkB,IAAd9I,QAWD,IAAI7vB,MAAM,yBAVhB6rB,EAAU,IAAI9rB,MAAMoR,GACpBwnB,EAAI3c,EACChd,EAAI,EAAGA,EAAImS,EAAMnS,IAAK,KACvB6sB,EAAQ7sB,GAAK,EACRT,EAAI,EAAGA,EAAIyd,EAAMzd,IAClBstB,EAAQ7sB,IAAM6I,EAAO7I,GAAGT,GAE5BstB,EAAQ7sB,IAAM25B,UAKf9M,GAGXxsB,MAAc,SAAawI,EAAQgoB,QACJ,IAAfA,IACRA,EAAY,OAIZ+I,EAAQr6B,EAAGS,EAFXmS,EAAOtJ,EAAOxJ,OACd2d,EAAOnU,EAAO,GAAGxJ,WAGF,IAAfwxB,MACA+I,EAAS,CAAC,GACLr6B,EAAI,EAAGA,EAAI4S,EAAM5S,QACbS,EAAI,EAAGA,EAAIgd,EAAMhd,IAClB45B,EAAO,IAAM/wB,EAAOtJ,GAAGS,QAG5B,GAAkB,IAAd6wB,MACP+I,EAAS,IAAI74B,MAAMic,GACdhd,EAAI,EAAGA,EAAIgd,EAAMhd,QAClB45B,EAAO55B,GAAK,EACPT,EAAI,EAAGA,EAAI4S,EAAM5S,IAClBq6B,EAAO55B,IAAM6I,EAAOtJ,GAAGS,OAG5B,CAAA,GAAkB,IAAd6wB,QASD,IAAI7vB,MAAM,yBARhB44B,EAAS,IAAI74B,MAAMoR,GACdnS,EAAI,EAAGA,EAAImS,EAAMnS,QAClB45B,EAAO55B,GAAK,EACPT,EAAI,EAAGA,EAAIyd,EAAMzd,IAClBq6B,EAAO55B,IAAM6I,EAAO7I,GAAGT,UAM5Bq6B,GAGXv5B,UAAkB,SAAiBwI,EAAQgoB,QACZ,IAAfA,IACRA,EAAY,OAIZgJ,EAAYt6B,EAAGS,EAFfmS,EAAOtJ,EAAOxJ,OACd2d,EAAOnU,EAAO,GAAGxJ,WAGF,IAAfwxB,MACAgJ,EAAa,CAAC,GACTt6B,EAAI,EAAGA,EAAI4S,EAAM5S,QACbS,EAAI,EAAGA,EAAIgd,EAAMhd,IAClB65B,EAAW,IAAMhxB,EAAOtJ,GAAGS,QAGhC,GAAkB,IAAd6wB,MACPgJ,EAAa,IAAI94B,MAAMic,GAClBhd,EAAI,EAAGA,EAAIgd,EAAMhd,QAClB65B,EAAW75B,GAAK,EACXT,EAAI,EAAGA,EAAI4S,EAAM5S,IAClBs6B,EAAW75B,IAAM6I,EAAOtJ,GAAGS,OAGhC,CAAA,GAAkB,IAAd6wB,QASD,IAAI7vB,MAAM,yBARhB64B,EAAa,IAAI94B,MAAMoR,GAClBnS,EAAI,EAAGA,EAAImS,EAAMnS,QAClB65B,EAAW75B,GAAK,EACXT,EAAI,EAAGA,EAAIyd,EAAMzd,IAClBs6B,EAAW75B,IAAM6I,EAAO7I,GAAGT,UAMhCs6B,GAGXx5B,oBAA4B,SAA2BwI,EAAQ2jB,EAAOhN,WAC9D8N,EAAOjtB,EAAQmG,SAASqC,EAAQ2jB,EAAOhN,GAAWxK,EAAIsY,EAAKjuB,OACtDE,EAAI,EAAGA,EAAIyV,EAAGzV,IACnB+tB,EAAK/tB,GAAKwH,KAAKC,KAAKsmB,EAAK/tB,WAEtB+tB,GAGXjtB,WAAmB,SAAkBwI,EAAQ2jB,EAAOhN,QACtB,IAAdA,IACRA,GAAW,GAEfgN,EAAQA,GAASnsB,EAAQgK,KAAKxB,OAC1BsJ,EAAOtJ,EAAOxJ,UACL,IAAT8S,EAAY,MAAO,WACnB6K,EAAOnU,EAAO,GAAGxJ,OACjBiuB,EAAO,IAAIvsB,MAAMic,GAEZhd,EAAI,EAAGA,EAAIgd,EAAMhd,IAAK,SACvByf,EAAO,EAAGC,EAAO,EAAG5Z,EAAI,EACnBvG,EAAI,EAAGA,EAAI4S,EAAM5S,IAEtBkgB,GADA3Z,EAAI+C,EAAOtJ,GAAGS,GAAKwsB,EAAMxsB,GAEzB0f,GAAQ5Z,EAAIA,EAGZwnB,EAAKttB,GADLwf,GACWE,EAASD,EAAOA,EAAQtN,IAAUA,EAAO,IAEzCuN,EAASD,EAAOA,EAAQtN,GAASA,SAG7Cmb,GAGXjtB,SAAiB,SAAgBwI,WACzBsJ,EAAOtJ,EAAOxJ,OAAQ2d,EAAOnU,EAAO,GAAGxJ,OACvCy6B,EAAU,IAAI/4B,MAAMic,GAEfzd,EAAI,EAAGA,EAAIyd,EAAMzd,IAAK,SACvB8J,EAAO,IAAItI,MAAMoR,GACZnS,EAAI,EAAGA,EAAImS,EAAMnS,IACtBqJ,EAAKrJ,GAAK6I,EAAO7I,GAAGT,GAExB8J,EAAKa,KAAKoU,OACNqb,EAAItwB,EAAKhK,OAETy6B,EAAQv6B,GADRo6B,EAAI,GAAM,EACuC,IAAnCtwB,EAAKswB,EAAI,GAAKtwB,EAAMswB,EAAI,EAAK,IAE9BtwB,EAAKtC,KAAKe,MAAM6xB,EAAI,WAGlCG,GAGXz5B,OAAe,SAAcwI,OAIrBtJ,EAAGS,EAHHmS,EAAOtJ,EAAOxJ,OACd2d,EAAOnU,EAAO,GAAGxJ,OACjB06B,EAAQ,IAAIh5B,MAAMic,OAEjBzd,EAAI,EAAGA,EAAIyd,EAAMzd,IAAK,SACnBguB,EAAY,IAAIxsB,MAAMoR,GACjB/N,EAAI,EAAGA,EAAI+N,EAAM/N,IACtBmpB,EAAUnpB,GAAK,MAEfopB,EAAY,IAAIzsB,MAAMoR,GACtBvK,EAAQ,MAEP5H,EAAI,EAAGA,EAAImS,EAAMnS,IAAK,KACnBiS,EAAQub,EAAUvZ,QAAQpL,EAAO7I,GAAGT,IACpC0S,GAAS,EACTsb,EAAUtb,MAEVub,EAAU5lB,GAASiB,EAAO7I,GAAGT,GAC7BguB,EAAU3lB,GAAS,EACnBA,SAIJnI,EAAW,EAAGgZ,EAAW,MACxBzY,EAAI,EAAGA,EAAI4H,EAAO5H,IACfutB,EAAUvtB,GAAKP,IACfA,EAAW8tB,EAAUvtB,GACrByY,EAAWzY,GAInB+5B,EAAMx6B,GAAKiuB,EAAU/U,UAElBshB,GAGX15B,WAAmB,SAAkBwI,EAAQ2W,QACf,IAAdA,IAA2BA,GAAW,WAC9CgN,EAAQnsB,EAAQgK,KAAKxB,GACrBpC,EAAIoC,EAAOxJ,OAAQ2V,EAAIwX,EAAMntB,OAC7B26B,EAAO,IAAIj5B,MAAMiU,GAEZhV,EAAI,EAAGA,EAAIgV,EAAGhV,IAAK,SACpB4tB,EAAK,EAAGC,EAAK,EACRtuB,EAAI,EAAGA,EAAIkH,EAAGlH,IAAK,KACpBuuB,EAAMjlB,EAAOtJ,GAAGS,GAAKwsB,EAAMxsB,GAC/B4tB,GAAME,EAAMA,EACZD,GAAMC,EAAMA,EAAMA,MAGlBxT,EAAKsT,EAAKnnB,EAEV3G,EADK+tB,EAAKpnB,EACDM,KAAKmB,IAAIoS,EAAI,QAEtBkF,EAAU,KACN9f,EAAIqH,KAAKC,KAAKP,GAAKA,EAAI,IACvBvG,EAAIuG,EAAI,EACZuzB,EAAKh6B,GAAMN,EAAIQ,EAAKJ,OAEpBk6B,EAAKh6B,GAAKF,SAGXk6B,GAGX35B,WAAmB,SAAkBwI,EAAQ2W,QACf,IAAdA,IAA2BA,GAAW,WAC9CgN,EAAQnsB,EAAQgK,KAAKxB,GACrBpC,EAAIoC,EAAOxJ,OAAQqH,EAAImC,EAAO,GAAGxJ,OACjC46B,EAAO,IAAIl5B,MAAM2F,GAEZ1G,EAAI,EAAGA,EAAI0G,EAAG1G,IAAK,SACpB4tB,EAAK,EAAGG,EAAK,EACRxuB,EAAI,EAAGA,EAAIkH,EAAGlH,IAAK,KACpBuuB,EAAMjlB,EAAOtJ,GAAGS,GAAKwsB,EAAMxsB,GAC/B4tB,GAAME,EAAMA,EACZC,GAAMD,EAAMA,EAAMA,EAAMA,MAExBxT,EAAKsT,EAAKnnB,EACV+T,EAAKuT,EAAKtnB,KAEV+Y,EAAU,KACN1Y,EAAI8mB,GAAMnnB,EAAI,GACd/G,EAAK+G,GAAKA,EAAI,KAAQA,EAAI,IAAMA,EAAI,IAAMA,EAAI,IAC9CvG,EAAI6tB,GAAMjnB,EAAIA,GACd7G,GAAMwG,EAAI,IAAMA,EAAI,KAAQA,EAAI,IAAMA,EAAI,IAC9CwzB,EAAKj6B,GAAKN,EAAIQ,EAAI,EAAID,OAEtBg6B,EAAKj6B,GAAKwa,GAAMF,EAAKA,GAAM,SAG5B2f,GAGX55B,gBAAwB,SAAuBwI,WACvC4jB,EAAU5jB,EAAOxJ,OACjB66B,EAAqB75B,EAAQyf,kBAAkBjX,GAC/CmM,EAAIklB,EAAmB76B,OACvB86B,EAAiB,IAAIp5B,MAAMiU,GAC3BolB,EAAQrzB,KAAKC,KAAKylB,GAEbltB,EAAI,EAAGA,EAAIyV,EAAGzV,IACnB46B,EAAe56B,GAAK26B,EAAmB36B,GAAK66B,SAEzCD,GAGX95B,aAAqB,SAAoBwI,EAAQgoB,UACtCxwB,EAAQg6B,QAAQxxB,OAAQiD,EAAW+kB,IAG9CxwB,UAAkB,SAAiBwI,EAAQyxB,EAASzJ,QACrB,IAAfA,IACRA,EAAY,QAES,IAAbyJ,IACU,IAAdzJ,EACAyJ,EAAUzxB,EAAOxJ,OAAS,EACL,IAAdwxB,IACPyJ,EAAUzxB,EAAO,GAAGxJ,OAAS,QAGjCmtB,EAAQnsB,EAAQgK,KAAKxB,EAAQgoB,GAC7B1e,EAAOtJ,EAAOxJ,UACL,IAAT8S,QACO,CAAC,QAGRwb,EAAKpuB,EAAGS,EAAG2G,EAAGvC,EADd4Y,EAAOnU,EAAO,GAAGxJ,UAGH,IAAdwxB,EAAiB,KACjBlD,EAAM,IAAI5sB,MAAMic,GACXzd,EAAI,EAAGA,EAAIyd,EAAMzd,IAClBouB,EAAIpuB,GAAK,IAAIwB,MAAMic,OAElBzd,EAAI,EAAGA,EAAIyd,EAAMzd,QACbS,EAAIT,EAAGS,EAAIgd,EAAMhd,IAAK,KACvB2G,EAAI,EACCvC,EAAI,EAAGA,EAAI+N,EAAM/N,IAClBuC,IAAMkC,EAAOzE,GAAGpE,GAAKwsB,EAAMxsB,KAAO6I,EAAOzE,GAAG7E,GAAKitB,EAAMjtB,IAE3DoH,GAAK2zB,EACL3M,EAAIpuB,GAAGS,GAAK2G,EACZgnB,EAAI3tB,GAAGT,GAAKoH,OAGjB,CAAA,GAAkB,IAAdkqB,QAiBD,IAAI7vB,MAAM,yBAhBhB2sB,EAAM,IAAI5sB,MAAMoR,GACX5S,EAAI,EAAGA,EAAI4S,EAAM5S,IAClBouB,EAAIpuB,GAAK,IAAIwB,MAAMoR,OAElB5S,EAAI,EAAGA,EAAI4S,EAAM5S,QACbS,EAAIT,EAAGS,EAAImS,EAAMnS,IAAK,KACvB2G,EAAI,EACCvC,EAAI,EAAGA,EAAI4Y,EAAM5Y,IAClBuC,IAAMkC,EAAO7I,GAAGoE,GAAKooB,EAAMxsB,KAAO6I,EAAOtJ,GAAG6E,GAAKooB,EAAMjtB,IAE3DoH,GAAK2zB,EACL3M,EAAIpuB,GAAGS,GAAK2G,EACZgnB,EAAI3tB,GAAGT,GAAKoH,UAOjBgnB,GAGXttB,cAAsB,SAAqBwI,OAMnCtJ,EAAGS,EALHwsB,EAAQnsB,EAAQgK,KAAKxB,GACrBqxB,EAAqB75B,EAAQyf,kBAAkBjX,GAAQ,EAAM2jB,GAC7D+N,EAASl6B,EAAQm6B,QAAQ3xB,EAAQ2jB,EAAO0N,GACxC/nB,EAAOtJ,EAAOxJ,OACd2d,EAAOnU,EAAO,GAAGxJ,OAGjBo7B,EAAM,IAAI15B,MAAMic,OACfzd,EAAI,EAAGA,EAAIyd,EAAMzd,IAClBk7B,EAAIl7B,GAAK,IAAIwB,MAAMic,OAElBzd,EAAI,EAAGA,EAAIyd,EAAMzd,QACbS,EAAIT,EAAGS,EAAIgd,EAAMhd,IAAK,SACnBC,EAAI,EACCmE,EAAI,EAAG4Q,EAAIulB,EAAOl7B,OAAQ+E,EAAI4Q,EAAG5Q,IACtCnE,GAAKs6B,EAAOn2B,GAAGpE,GAAKu6B,EAAOn2B,GAAG7E,GAElCU,GAAKkS,EAAO,EACZsoB,EAAIl7B,GAAGS,GAAKC,EACZw6B,EAAIz6B,GAAGT,GAAKU,SAGbw6B,GAGXp6B,UAAkB,SAAiBwI,EAAQ2jB,EAAO0N,UAC9C1N,EAAQA,GAASnsB,EAAQgK,KAAKxB,QACM,IAAxBqxB,IAAqCA,EAAqB75B,EAAQyf,kBAAkBjX,GAAQ,EAAM2jB,IACvGnsB,EAAQq6B,YAAYr6B,EAAQ0f,OAAOlX,EAAQ2jB,GAAO,GAAQ0N,GAAoB,IAGzF75B,SAAiB,SAAgBwI,EAAQ2jB,EAAO6B,GAC5C7B,EAAQA,GAASnsB,EAAQgK,KAAKxB,OAG1BtJ,EAAGS,EAAG26B,EAFNjsB,EAAS7F,EACTmM,EAAInM,EAAOxJ,WAGVgvB,MACD3f,EAAS,IAAI3N,MAAMiU,GACdzV,EAAI,EAAGA,EAAIyV,EAAGzV,IACfmP,EAAOnP,GAAK,IAAIwB,MAAM8H,EAAOtJ,GAAGF,YAInCE,EAAI,EAAGA,EAAIyV,EAAGzV,IAAK,KAChBuJ,EAAM4F,EAAOnP,OACZS,EAAI,EAAG26B,EAAK7xB,EAAIzJ,OAAQW,EAAI26B,EAAI36B,IACjC8I,EAAI9I,GAAK6I,EAAOtJ,GAAGS,GAAKwsB,EAAMxsB,UAG/B0O,GAGXrO,cAAsB,SAAqBwI,EAAQqxB,EAAoB7L,QAC/B,IAAxB6L,IAAqCA,EAAqB75B,EAAQyf,kBAAkBjX,QAG5FtJ,EAAGS,EAAG26B,EAFNjsB,EAAS7F,EACTmM,EAAInM,EAAOxJ,WAGVgvB,MACD3f,EAAS,IAAI3N,MAAMiU,GACdzV,EAAI,EAAGA,EAAIyV,EAAGzV,IACfmP,EAAOnP,GAAK,IAAIwB,MAAM8H,EAAOtJ,GAAGF,YAInCE,EAAI,EAAGA,EAAIyV,EAAGzV,IAAK,KAChBq7B,EAAYlsB,EAAOnP,GACnBs7B,EAAYhyB,EAAOtJ,OAClBS,EAAI,EAAG26B,EAAKC,EAAUv7B,OAAQW,EAAI26B,EAAI36B,IACT,IAA1Bk6B,EAAmBl6B,IAAa4G,MAAMszB,EAAmBl6B,MACzD46B,EAAU56B,GAAK66B,EAAU76B,GAAKk6B,EAAmBl6B,WAItD0O,GAGXrO,mBAA2B,SAA0BwI,EAAQmlB,OACrDxB,EAAQnsB,EAAQgK,KAAKxB,GACrBsJ,EAAOtJ,EAAOxJ,UACL,IAAT8S,EAAY,MAAO,WACnB6K,EAAOnU,EAAO,GAAGxJ,OACjBiuB,EAAO,IAAIvsB,MAAMic,GAEZhd,EAAI,EAAGA,EAAIgd,EAAMhd,IAAK,SACvBsL,EAAM,EACN5L,EAAI,EAAGQ,EAAI,EAENX,EAAI,EAAGA,EAAI4S,EAAM5S,IAAK,KACvB4uB,EAAItlB,EAAOtJ,GAAGS,GAAKwsB,EAAMxsB,GACzBouB,EAAIJ,EAAQzuB,GAEhB+L,GAAO8iB,GAAKD,EAAIA,GAChBjuB,GAAKkuB,EACL1uB,GAAK0uB,EAAIA,EAGbd,EAAKttB,GAAKsL,GAAOpL,GAAKA,EAAIA,EAAIR,WAG3B4tB,GAGXjtB,eAAuB,SAAsBwI,EAAQmlB,EAAS6C,QAC/B,IAAfA,IACRA,EAAY,OAEZ1e,EAAOtJ,EAAOxJ,UACL,IAAT8S,EAAY,MAAO,OAEnBqa,EAAOjtB,EAAGurB,EAAI9qB,EAAGouB,EAAGtlB,EADpBkU,EAAOnU,EAAO,GAAGxJ,UAGH,IAAdwxB,EAAiB,KACjBrE,EAAQ,IAAIzrB,MAAMic,GACbzd,EAAI,EAAGA,EAAIyd,EAAMzd,IAClBitB,EAAMjtB,GAAK,MAEVA,EAAI,EAAGA,EAAI4S,EAAM5S,QAClBuJ,EAAMD,EAAOtJ,GACb6uB,EAAIJ,EAAQzuB,GACPS,EAAI,EAAGA,EAAIgd,EAAMhd,IAClBwsB,EAAMxsB,IAAM8I,EAAI9I,GAAKouB,MAG1B,CAAA,GAAkB,IAAdyC,QAaD,IAAI7vB,MAAM,yBAZhBwrB,EAAQ,IAAIzrB,MAAMoR,GACb5S,EAAI,EAAGA,EAAI4S,EAAM5S,IAClBitB,EAAMjtB,GAAK,MAEVS,EAAI,EAAGA,EAAImS,EAAMnS,QAClB8I,EAAMD,EAAO7I,GACbouB,EAAIJ,EAAQhuB,GACPT,EAAI,EAAGA,EAAIyd,EAAMzd,IAClBitB,EAAMxsB,IAAM8I,EAAIvJ,GAAK6uB,MAO7B0M,EAAYC,GAAUzvB,IAAI0iB,MACZ,IAAd8M,MACKv7B,EAAI,EAAGurB,EAAK0B,EAAMntB,OAAQE,EAAIurB,EAAIvrB,IACnCitB,EAAMjtB,IAAMu7B,SAGbtO,GAGXnsB,qBAA6B,SAA4BwI,EAAQmlB,EAASxB,EAAOqE,GAC7EA,EAAYA,GAAa,EACzBrE,EAAQA,GAASnsB,EAAQ6tB,aAAarlB,EAAQmlB,EAAS6C,WACnDmK,EAAK,EAAGpN,EAAK,EACRruB,EAAI,EAAGurB,EAAKkD,EAAQ3uB,OAAQE,EAAIurB,EAAIvrB,IACzCy7B,GAAMhN,EAAQzuB,GACdquB,GAAMI,EAAQzuB,GAAKyuB,EAAQzuB,OAE3BgN,EAASyuB,GAAMA,EAAKA,EAAKpN,UACtBvtB,EAAQ46B,gBAAgBpyB,EAAQmlB,EAASxB,EAAOjgB,EAAQskB,IAGnExwB,kBAA0B,SAAyBwI,EAAQmlB,EAASxB,EAAOjgB,EAAQskB,GAC/EA,EAAYA,GAAa,EACzBrE,EAAQA,GAASnsB,EAAQ6tB,aAAarlB,EAAQmlB,EAAS6C,QAC/B,IAAZtkB,IACRA,EAAS,OAET4F,EAAOtJ,EAAOxJ,UACL,IAAT8S,QACO,CAAC,QAGRwb,EAAKpuB,EAAGS,EAAGoE,EAAGuC,EADdqW,EAAOnU,EAAO,GAAGxJ,UAGH,IAAdwxB,EAAiB,KACjBlD,EAAM,IAAI5sB,MAAMic,GACXzd,EAAI,EAAGA,EAAIyd,EAAMzd,IAClBouB,EAAIpuB,GAAK,IAAIwB,MAAMic,OAElBzd,EAAI,EAAGA,EAAIyd,EAAMzd,QACbS,EAAIT,EAAGS,EAAIgd,EAAMhd,IAAK,KACvB2G,EAAI,EACCvC,EAAI,EAAGA,EAAI+N,EAAM/N,IAClBuC,GAAKqnB,EAAQ5pB,IAAMyE,EAAOzE,GAAGpE,GAAKwsB,EAAMxsB,KAAO6I,EAAOzE,GAAG7E,GAAKitB,EAAMjtB,IAExEouB,EAAIpuB,GAAGS,GAAK2G,EAAI4F,EAChBohB,EAAI3tB,GAAGT,GAAKoH,EAAI4F,OAGrB,CAAA,GAAkB,IAAdskB,QAgBD,IAAI7vB,MAAM,yBAfhB2sB,EAAM,IAAI5sB,MAAMoR,GACX5S,EAAI,EAAGA,EAAI4S,EAAM5S,IAClBouB,EAAIpuB,GAAK,IAAIwB,MAAMoR,OAElB5S,EAAI,EAAGA,EAAI4S,EAAM5S,QACbS,EAAIT,EAAGS,EAAImS,EAAMnS,IAAK,KACvB2G,EAAI,EACCvC,EAAI,EAAGA,EAAI4Y,EAAM5Y,IAClBuC,GAAKqnB,EAAQ5pB,IAAMyE,EAAO7I,GAAGoE,GAAKooB,EAAMxsB,KAAO6I,EAAOtJ,GAAG6E,GAAKooB,EAAMjtB,IAExEouB,EAAIpuB,GAAGS,GAAK2G,EAAI4F,EAChBohB,EAAI3tB,GAAGT,GAAKoH,EAAI4F,UAOrBohB,0UC7lBA,eACLsJ,EAQAluB,EACO,QADPA,EAEI,WAPNkuB,EAAM52B,GASJ3B,SAAW,iBACN,WAAaqK,EAAkB,cAAgBA,WAIpDmuB,EAAK,EACLC,EAAU,KACVC,EAAQ,KAERC,EAAO,CACTC,KAAO,SAAS7wB,MACL,IAANA,GAA6B,IAAjBA,EAAKA,EAAI,SAMhB,IAAIzF,MAAM,0BALhBk2B,EAAKzwB,EACL4wB,EAAKE,aACLF,EAAKG,wBACLH,EAAKI,oBAMTC,MAAQ,SAASC,EAAIC,GACnBP,EAAKQ,IAAIF,EAAIC,EAAI,IAGnBE,OAAS,SAASH,EAAIC,OAChBnxB,EAAI,EAAEywB,EACVG,EAAKQ,IAAIF,EAAIC,GAAK,OACd,IAAIr4B,EAAE,EAAGA,EAAE23B,EAAI33B,IACjBo4B,EAAGp4B,IAAMkH,EACTmxB,EAAGr4B,IAAMkH,GAIbsxB,KAAO,SAASJ,EAAIC,GAClBP,EAAKQ,IAAIF,EAAIC,GAAK,IAGpBI,MAAQ,SAASL,EAAIC,WACfK,EAAM,GACNC,EAAM,GACN34B,EAAI,EAEAyP,EAAE,EAAGA,EAAEkoB,EAAIloB,IAAK,CACtBzP,EAAIyP,EAAEkoB,MACF,IAAI1tB,EAAG,EAAGA,EAAG0tB,EAAI1tB,IACnByuB,EAAIzuB,GAAMmuB,EAAGnuB,EAAKjK,GAClB24B,EAAI1uB,GAAMouB,EAAGpuB,EAAKjK,GAEpB83B,EAAKK,MAAMO,EAAKC,OACZ,IAAIC,EAAG,EAAGA,EAAGjB,EAAIiB,IACnBR,EAAGQ,EAAK54B,GAAK04B,EAAIE,GACjBP,EAAGO,EAAK54B,GAAK24B,EAAIC,OAIjB,IAAIryB,EAAE,EAAGA,EAAEoxB,EAAIpxB,IAAK,KAClB,IAAIsyB,EAAG,EAAGA,EAAGlB,EAAIkB,IACnB74B,EAAIuG,EAAIsyB,EAAGlB,EACXe,EAAIG,GAAMT,EAAGp4B,GACb24B,EAAIE,GAAMR,EAAGr4B,GAEf83B,EAAKK,MAAMO,EAAKC,OACZ,IAAIG,EAAG,EAAGA,EAAGnB,EAAImB,IAEnBV,EADAp4B,EAAIuG,EAAIuyB,EAAGnB,GACHe,EAAII,GACZT,EAAGr4B,GAAK24B,EAAIG,KAKlBC,OAAS,SAASX,EAAIC,WAChBK,EAAM,GACNC,EAAM,GACN34B,EAAI,EAEAyP,EAAE,EAAGA,EAAEkoB,EAAIloB,IAAK,CACtBzP,EAAIyP,EAAEkoB,MACF,IAAI1tB,EAAG,EAAGA,EAAG0tB,EAAI1tB,IACnByuB,EAAIzuB,GAAMmuB,EAAGnuB,EAAKjK,GAClB24B,EAAI1uB,GAAMouB,EAAGpuB,EAAKjK,GAEpB83B,EAAKS,OAAOG,EAAKC,OACb,IAAIC,EAAG,EAAGA,EAAGjB,EAAIiB,IACnBR,EAAGQ,EAAK54B,GAAK04B,EAAIE,GACjBP,EAAGO,EAAK54B,GAAK24B,EAAIC,OAIjB,IAAIryB,EAAE,EAAGA,EAAEoxB,EAAIpxB,IAAK,KAClB,IAAIsyB,EAAG,EAAGA,EAAGlB,EAAIkB,IACnB74B,EAAIuG,EAAIsyB,EAAGlB,EACXe,EAAIG,GAAMT,EAAGp4B,GACb24B,EAAIE,GAAMR,EAAGr4B,GAEf83B,EAAKS,OAAOG,EAAKC,OACb,IAAIG,EAAG,EAAGA,EAAGnB,EAAImB,IAEnBV,EADAp4B,EAAIuG,EAAIuyB,EAAGnB,GACHe,EAAII,GACZT,EAAGr4B,GAAK24B,EAAIG,KAKlBR,IAAM,SAASF,EAAIC,EAAIW,WACjB54B,EAAGI,EAAGy4B,EAAI9xB,EAAG+P,EAAKgiB,EAAIC,EAAIC,EAAI5tB,EAC9B6tB,EAAK1B,GAAM,EAEPliB,EAAE,EAAGA,EAAEkiB,EAAIliB,IAEdA,GADHtO,EAAIywB,EAAQniB,MAEVyB,EAAMkhB,EAAG3iB,GACT2iB,EAAG3iB,GAAK2iB,EAAGjxB,GACXixB,EAAGjxB,GAAK+P,EACRA,EAAMmhB,EAAG5iB,GACT4iB,EAAG5iB,GAAK4iB,EAAGlxB,GACXkxB,EAAGlxB,GAAK+P,OAIR,IAAIrS,EAAE,EAAGA,EAAE8yB,EAAI9yB,IAAI,EAAG,CACxBrE,EAAI,EACJJ,EAAIu3B,GAAI9yB,GAAK,OACT,IAAIpE,EAAE,EAAGA,EAAEoE,EAAGpE,IAAK,CACrBy4B,EAAKrB,EAAMr3B,EAAI64B,GACfF,EAAKH,EAAInB,EAAMr3B,OACX,IAAIR,EAAES,EAAGT,EAAE23B,EAAI33B,GAAI6E,GAAG,EAExBu0B,EAAKF,EAAGd,EADRa,EAAKj5B,EAAI6E,GACQs0B,EAAGd,EAAGY,GACvBztB,EAAK0tB,EAAGb,EAAGY,GAAME,EAAGf,EAAGa,GACvBb,EAAGa,GAAMb,EAAGp4B,GAAKo5B,EACjBhB,EAAGp4B,IAAMo5B,EACTf,EAAGY,GAAMZ,EAAGr4B,GAAKwL,EACjB6sB,EAAGr4B,IAAMwL,EAEXhL,GAAKJ,KAKX43B,WAAa,WAETJ,EADwB,oBAAhB0B,YACE,IAAIA,YAAY3B,GAEhB,GAGVE,EADyB,oBAAjBh2B,aACA,IAAIA,aAAgB,KAAH81B,GAEjB,IAIZ4B,aAAe,aAIftB,sBAAwB,eAClBj4B,EAAI,EACJS,EAAI,EACJoE,EAAI,MACR+yB,EAAQ,GAAK,IACL53B,EAAI23B,GAAI,KACd9yB,EAAI8yB,GAAM,EACJ9yB,GAAKpE,GACTA,GAAKoE,EACLA,IAAM,EAERpE,GAAKoE,EACL+yB,EAAQ53B,GAAKS,IAIjBy3B,iBAAmB,eACbsB,EAAK7B,GAAM,EACX0B,EAAK1B,GAAM,EACX8B,EAAK9B,GAAM,EACX+B,EAAOF,EAAKH,EACZxtB,EAAIrE,KAAKmf,IAAInf,KAAKmyB,GAAGhC,GACrBiC,EAAK,EAAE/tB,EAAEA,EACTguB,EAAKryB,KAAKC,KAAKmyB,GAAI,EAAIA,IACvBl5B,EAAIm3B,EAAMwB,GAAM,EAChBjyB,EAAIywB,EAAM,GAAK,EACnBhsB,EAAI,EAAE+tB,MACF,IAAI55B,EAAE,EAAGA,EAAEy5B,EAAIz5B,IAEjB45B,GAAM/tB,GADNnL,GAAKk5B,GAGLC,GAAMhuB,GADNzE,GAAKyyB,GAELhC,EAAM73B,GAAKoH,EACXywB,EAAMwB,EAAKr5B,GAAKU,EAER,IAAP+4B,IACD5B,EAAM4B,GAAMjyB,KAAKC,KAAK,SAEpB,IAAIhH,EAAE,EAAGA,EAAE44B,EAAI54B,IACjBo3B,EAAM2B,EAAK/4B,GAAMo3B,EAAMp3B,OAErB,IAAIoE,EAAE,EAAGA,EAAE60B,EAAM70B,IACnBgzB,EAAMhzB,EAAI20B,IAAO3B,EAAMhzB,KAKzBi1B,EAAO,CAAC,OAAQ,QAAS,SAAU,QAAS,UACxC95B,EAAE,EAAGA,EAAE85B,EAAKh6B,OAAQE,IAC1B03B,EAAIoC,EAAK95B,IAAM83B,EAAKgC,EAAK95B,WAE3B03B,EAAIqC,GAAKjC,EAAKU,KACdd,EAAIY,IAAMR,EAAKK,MACfT,EAAIsC,KAAOlC,EAAKS,OAETb,IACNl4B,KAAK+V,MCpOD,MAAMomB,GAAoB,MACzB,kBACA,aACA,iBACE,eACD,eACA,eACA,eACC,eACA,cACD,gBACC,eACA,gBACC,aACF,gBACC,cACA,eACA,iBACE,SCpBG,SAASC,GAAUzsB,EAAQ0sB,EAAQvvB,GAC5C6C,EAAOysB,WACTzsB,EAAOysB,UAAUx2B,KAAK,CACpBy2B,OAAAA,EACAC,KAAMC,KAAKC,MAAQ1vB,EAAQzE,QCJlB,SAASo0B,GAAmB9sB,OACrCrF,EAAOqF,EAAOggB,QAAQ,GAAGrlB,KAC7BqF,EAAO+hB,aAAe,CACpBC,MAAOrnB,EAAKvD,EAAErF,QACdkwB,OAAQ,CACN8K,UAAW,CACT5K,UAAW,EACXxnB,KAAMA,EAAK2F,EAAEvO,WCDN,SAASi7B,GAAeC,EAAajtB,EAAQ7C,ICJ7C,SAA2B8vB,OAEpCC,EAAmB,EACnBC,EAAiB,MAEhB,IAAIC,KAASH,MACX,IAAIhM,KAAYmM,EAAMpN,QAAS,IAC9BoN,EAAMC,SAAWD,EAAMC,QAAQC,SAC5BJ,GAAoBjM,EAASiM,mBAChCA,EAAmBjM,EAASiM,mBAEzBC,GAAkBlM,EAASkM,iBAC9BA,EAAiBlM,EAASkM,kBAG5BD,EAAmBjM,EAASiM,iBAC5BC,EAAiBlM,EAASkM,gBAGxBD,GACEjM,EAASsM,QAAUtM,EAASsM,OAAOC,cAAcC,SAAS,MAAO,CACnExM,EAASsM,OAAS,MAClBtM,EAAS+D,QAAU/D,EAAS+D,QAAUkI,EACtCjM,EAASmC,OAASnC,EAASmC,OAAS8J,EACpCjM,EAAS0E,MAAQ1E,EAAS0E,MAAQuH,EAClCjM,EAAS8B,OAAS9B,EAAS8B,OAASmK,MAC/B,IAAIr8B,EAAI,EAAGA,EAAIowB,EAAStmB,KAAKvD,EAAEzG,OAAQE,IAC1CowB,EAAStmB,KAAKvD,EAAEvG,IAAMq8B,KAIxBC,EAAgB,KACdnyB,EAAQimB,EAASmC,OAAS+J,EAC9BlM,EAASmC,OAASnC,EAASmC,OAASpoB,EACpCimB,EAAS0E,MAAQ1E,EAAS0E,MAAQ3qB,MAC7B,IAAInK,EAAI,EAAGA,EAAIowB,EAAStmB,KAAKvD,EAAEzG,OAAQE,IAC1CowB,EAAStmB,KAAKvD,EAAEvG,IAAMmK,KAKxBkyB,GACAE,EAAMC,SACND,EAAMC,QAAQC,QACdF,EAAMC,QAAQK,QACd,KACIC,EAAO,GACPC,EAAkBR,EAAMC,QAAQC,OAAO/nB,QAAQ0b,EAAS4M,eACxDT,EAAMC,QAAQ5M,OAAS2M,EAAMC,QAAQ5M,MAAMmN,KAC7CD,EAAOP,EAAMC,QAAQ5M,MAAMmN,IAEhB,QAATD,EAAgB,IACM,IAApBC,QACIt7B,MAAM,0CAGVw7B,EAAStB,GAAkBY,EAAMC,QAAQK,QAAQ,IACjDK,EAASvB,GAAkBY,EAAMC,QAAQK,QAAQ,QAChDI,IAAWC,QACRz7B,MAAM,wDAEV07B,EAASF,EAASC,EAAUb,EAChCjM,EAASqB,WAAa0L,KDxD9BC,CAAkBhB,OAEb,IAAIG,KAASH,EAAa,IACzBh9B,OAAOmD,KAAKg6B,EAAMC,SAAS18B,OAAS,EAAG,KACrCu9B,EAAa,GACb96B,EAAOnD,OAAOmD,KAAKg6B,EAAMC,aACxB,IAAIx8B,EAAI,EAAGA,EAAIuC,EAAKzC,OAAQE,IAAK,KAChC+F,EAAMxD,EAAKvC,GACXgJ,EAASuzB,EAAMC,QAAQz2B,OACtB,IAAItF,EAAI,EAAGA,EAAIuI,EAAOlJ,OAAQW,IAC5B48B,EAAW58B,KAAI48B,EAAW58B,GAAK,IACpC48B,EAAW58B,GAAGsF,GAAOiD,EAAOvI,GAGhC87B,EAAMC,QAAUa,EAGdd,EAAMe,MAAQhxB,EAAQixB,SACxB/I,GAAM+H,EAAOjwB,GAEbsvB,GAAUzsB,EAAQ,qCAAsC7C,GAEnDA,EAAQkxB,oBACJjB,EAAMpN,SAKb7iB,EAAQ4kB,eACNqL,EAAMpN,QAAQrvB,OAAS,EACzBmxB,GAAoBsL,GAEpBN,GAAmBM,GAErBX,GAAUzsB,EAAQ,oCAAqC7C,KE1C9C,SAASmxB,GAAwBC,EAActN,EAAUS,OAClE8M,GAAU,EACVC,GAAU,EACVC,EAAgB,GAChBC,EAAiB,MACjBjN,EAAKnc,QAAQ,MAAQ,EACvBmpB,EAAgBhN,EAAKhB,QAAQ,2BAA4B,MACzDiO,EAAiBjN,EAAKhB,QAAQ,yBAA0B,UACnD,CAELgO,GADAhN,EAAOA,EAAKhB,QAAQ,aAAc,KACbkO,OAAO,GAC5BD,EAAiBjN,EAAKkN,OAAO,GAC7B3N,EAASf,UAAY,OAChB,IAAIoN,KAAU5L,EAAM,KACnBmN,EAAkBvB,EAAO7vB,cACzB8F,EAAQgrB,EAAalB,QAAQC,OAAO/nB,QAAQ+nB,OACjC,IAAX/pB,EAAc,MAAMjR,kCAA2Bg7B,IACnDrM,EAASf,UAAU2O,GAAmB,OACjC,IAAIj4B,KAAO23B,EAAalB,QACvBkB,EAAalB,QAAQz2B,GAAK2M,KAC5B0d,EAASf,UAAU2O,GAAiBj4B,EAAI8pB,QAAQ,OAAQ,KACtD6N,EAAalB,QAAQz2B,GAAK2M,KAKpCirB,EAASD,EAAalB,QAAQC,OAAO/nB,QAAQmpB,GAC7CD,EAASF,EAAalB,QAAQC,OAAO/nB,QAAQopB,IAE7B,IAAZH,IAAeA,EAAS,IACZ,IAAZC,IAAeA,EAAS,GAExBF,EAAalB,QAAQhe,QACnBkf,EAAalB,QAAQhe,MAAM1e,OAAS69B,IACtCvN,EAASmC,OAASmL,EAAalB,QAAQhe,MAAMmf,IAE3CD,EAAalB,QAAQhe,MAAM1e,OAAS89B,IACtCxN,EAASqC,OAASiL,EAAalB,QAAQhe,MAAMof,KAG7CF,EAAalB,QAAQ/d,OACnBif,EAAalB,QAAQ/d,KAAK3e,OAAS69B,IACrCvN,EAAS0E,MAAQ4I,EAAalB,QAAQ/d,KAAKkf,IAEzCD,EAAalB,QAAQ/d,KAAK3e,OAAS89B,IACrCxN,EAAS2E,MAAQ2I,EAAalB,QAAQ/d,KAAKmf,KAI7CF,EAAalB,QAAQyB,QACrBP,EAAalB,QAAQyB,OAAOn+B,OAAS69B,IAErCvN,EAAS8N,SAAWR,EAAalB,QAAQyB,OAAON,IAE9CD,EAAalB,QAAQxvB,SACnB0wB,EAAalB,QAAQxvB,OAAOlN,OAAS69B,IACvCvN,EAAS+D,QAAUuJ,EAAalB,QAAQxvB,OAAO2wB,IAE7CD,EAAalB,QAAQxvB,OAAOlN,OAAS89B,IACvCxN,EAAS6B,QAAUyL,EAAalB,QAAQxvB,OAAO4wB,KAG/CF,EAAalB,QAAQ5M,QACnB8N,EAAalB,QAAQ5M,MAAM9vB,OAAS69B,IAEpCD,EAAalB,QAAQ2B,SACrBT,EAAalB,QAAQ2B,QAAQR,GAE7BvN,EAASsM,iBAAYgB,EAAalB,QAAQ2B,QAAQR,gBAAYD,EAAalB,QAAQ5M,MAAM+N,QAEzFvN,EAASsM,OAASgB,EAAalB,QAAQ5M,MAAM+N,IAG7CD,EAAalB,QAAQ5M,MAAM9vB,OAAS89B,IAEpCF,EAAalB,QAAQ2B,SACrBT,EAAalB,QAAQ2B,QAAQP,GAE7BxN,EAASgO,iBAAYV,EAAalB,QAAQ2B,QAAQP,gBAAYF,EAAalB,QAAQ5M,MAAMgO,QAEzFxN,EAASgO,OAASV,EAAalB,QAAQ5M,MAAMgO,KChFtC,SAASS,GAAgBjO,GACjCA,EAAS+D,UAAS/D,EAAS+D,QAAU,GACrC/D,EAAS6B,UAAS7B,EAAS6B,QAAU,GCS5C,MAAMqM,GAAmB,gBAEzB,MAAMC,IAEN,MAAM5S,GAAiB,CACrB6S,kBAAmB,KACnBC,mBAAmB,EACnBC,uBAAuB,EACvBC,eAAe,EACfC,WAAW,EACX1N,cAAc,EACdsM,aAAa,EACbjI,WAAW,EACXqB,gBAAiB,EACjBK,gBAAiB,EACjB2E,WAAW,GC1BN,SAASiD,GAASC,EAAO1O,EAAU9jB,EAAU,UAC5CyyB,MAAEA,EAAQ,YAAezyB,EAC/BwyB,EAAME,MAAQ,CACZ,CACE15B,KAAM,aACN05B,MAAO,CACLvd,KAAM,CACJsd,MAAAA,EACAE,MAAO,EACPC,KAAM,KAIZ,CACE55B,KAAM,WACN05B,MAAO,CACLvd,KAAM,CACJsd,MAAAA,EACAE,MAAO,EACPC,KAAM,MAKdJ,EAAMx5B,KAAO8qB,EAASlB,OAASkB,EAASnB,GCxBnC,MAAMkQ,GAAS,CACpB,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,WCNK,SAASC,GAAc/P,EAAY,GAAI/iB,EAAU,UAChD+yB,KAAEA,EAAF/P,KAAQA,EAARgQ,aAAcA,GAAiBhzB,MAEjCizB,EAAe,CACjBF,KAAAA,EACA/P,KAAAA,GAGE/sB,EAAOnD,OAAOmD,KAAK8sB,GAAW5kB,IAAK1E,GAAQA,EAAI6G,kBAEjC,IAAhBrK,EAAKzC,QACLyC,EAAKq6B,SAAS,MACdr6B,EAAKq6B,SAAS,OACb0C,EACD,KACI/4B,EAAI8oB,EAAU9oB,EACdi5B,EAASj5B,EAAE2oB,OAAS3oB,EAAEjB,MAAQ,IAElCi6B,EAAaF,KAAK3C,OAAS8C,EAAO5C,SAASvN,EAAU9oB,EAAEqpB,OACnD4P,YACGA,eAAWnQ,EAAU9oB,EAAEqpB,eAE1BngB,EAAI4f,EAAU5f,EACdgwB,EAAShwB,EAAEyf,OAASzf,EAAEnK,MAAQ,WAElCi6B,EAAaF,KAAKjB,OAASqB,EAAO7C,SAASvN,EAAU5f,EAAEmgB,OACnD6P,YACGA,eAAWpQ,EAAU5f,EAAEmgB,WC1B3B,SAAkB9lB,EAAMwC,EAAU,UACjCgjB,KAAEA,EAAO,GAAT+P,KAAaA,EAAO,IAAO/yB,GAE3BkjB,MACJA,EAAQ,GADJkQ,MAEJA,EAAQ,GAFJC,OAGJA,EAAS,GAHLpQ,SAIJA,EAAW,GAJPmN,OAKJA,EAAS,GALL0B,OAMJA,EAAS,IACPiB,MACA9M,EAAS7wB,OAAOiN,kBAChBmmB,EAAQpzB,OAAOgN,kBACf+jB,EAAS/wB,OAAOiN,kBAChBomB,EAAQrzB,OAAOgN,kBACfwD,EAAS,OAER,IAAIlS,EAAI,EAAGA,EAAI8J,EAAKvD,EAAEzG,OAAQE,IAAK,KAClCuG,EAAIuD,EAAKvD,EAAEvG,GACXyP,EAAI3F,EAAK2F,EAAEzP,GACXuyB,EAAShsB,IACXgsB,EAAShsB,GAEPuuB,EAAQvuB,IACVuuB,EAAQvuB,GAENksB,EAAShjB,IACXgjB,EAAShjB,GAEPslB,EAAQtlB,IACVslB,EAAQtlB,GAEVyC,EAAO9M,eAAQmB,cAAKkJ,QAGlBmwB,oBAAoBpQ,4CAEZD,wBACHoQ,uBACDD,wBACChD,wBACA0B,wBACA7L,uBACDuC,wBACCrC,uBACDsC,YAEH,MAAMhvB,KAAO3G,OAAOmD,KAAK+sB,GAC5BsQ,gBAAgB75B,cAAOupB,EAAKvpB,yBAKpB65B,uBAAmB1tB,EAAOpS,2CAEpCoS,EAAOwP,KAAK,iBD5BHme,CAAS,CAAEt5B,EAAG8oB,EAAU9oB,EAAEuD,KAAM2F,EAAG4f,EAAU5f,EAAE3F,MAAQy1B,UEjCnD,SAAwBlQ,EAAW/iB,SAC1CgjB,KAAEA,EAAO,GAAT+P,KAAaA,EAAO,IAAO/yB,GAE3BkjB,MAAEA,EAAQ,GAAVkQ,MAAcA,EAAQ,GAAtBC,OAA0BA,EAAS,GAAnCpQ,SAAuCA,EAAW,IAAO8P,EAEzD5C,EAAS,GACTqD,EAAU,GACVC,EAAU,GACVC,EAAS,GACTpQ,EAAQ,GACRpR,EAAQ,GACRC,EAAO,GACP/e,EAAM,GACNO,EAAM,GAGNsC,EAAOnD,OAAOmD,KAAK8sB,OACpB,IAAIrvB,EAAI,EAAGA,EAAIuC,EAAKzC,OAAQE,IAAK,OAC9B+F,EAAMxD,EAAKvC,OACb2vB,EAAWN,EAAUtpB,GAErBT,EAAOqqB,EAAST,OAASS,EAAST,MAAMW,QAAQ,SAAU,IAC1DiN,EAAOnN,EAAST,OAASS,EAAST,MAAMW,QAAQ,eAAgB,MAEpE4M,EAAOr3B,KAAKuqB,EAAS8M,QAAU12B,GAC/B+5B,EAAQ16B,KAAKuqB,EAASrqB,MAAQA,GAAQS,GACtCi6B,EAAO56B,KAAKiqB,EAAUtpB,GAAK+D,KAAKhK,QAChCigC,EAAQ36B,KAAW,IAANpF,EAAU,cAAgB,aACvC4vB,EAAMxqB,KAAKuqB,EAASC,OAASkN,GAAQ,IACrCte,EAAMpZ,KAAKiqB,EAAUtpB,GAAK,IAC1B0Y,EAAKrZ,KAAKiqB,EAAUtpB,GAAKspB,EAAUtpB,GAAKjG,OAAS,IACjDJ,EAAI0F,KAAK66B,EAAO5Q,EAAUtpB,GAAK+D,OAC/B7J,EAAImF,KAAK86B,EAAO7Q,EAAUtpB,GAAK+D,WAI7B81B,oBAAoBpQ,4CAEZD,wBACHoQ,uBACDD,YAEH,MAAM35B,KAAO3G,OAAOmD,KAAK+sB,GAC5BsQ,gBAAgB75B,cAAOupB,EAAKvpB,SAG9B65B,wBAAwBrQ,4BACXuQ,EAAQpe,iCACR+a,EAAO/a,iCACPqe,EAAQre,iCACRse,EAAOte,iCACPkO,EAAMlO,0BAGnBke,4BAA4BnD,EAAO/a,KAAK,iBAAQ+a,EAAO/a,KAAK,sBAEvD,IAAI1hB,EAAI,EAAGA,EAAIqvB,EAAU9sB,EAAK,IAAIuH,KAAKhK,OAAQE,IAAK,KACnDmgC,EAAQ,OACP,IAAIp6B,KAAOxD,EACd49B,EAAM/6B,KAAKiqB,EAAUtpB,GAAK+D,KAAK9J,IAEjC4/B,aAAaO,EAAMze,KAAK,mBAG1Bke,GAAU,QACHA,EF9BEQ,CAAe/Q,EAAW/iB,GGlCrC,SAAS+zB,GAASjQ,EAAU9jB,SACpB+yB,KAAEA,EAAO,GAAT/P,KAAaA,EAAO,IAAOhjB,MAE7BizB,EAAe,CACjBjzB,QAAS,GACT+yB,KAAM,CACJ7P,MAAOY,EAASZ,MAChBD,SAAUa,EAASb,YAChB8P,GAEL/P,KAAM,IAAKc,EAASd,QAASA,WAGxB8P,GAAchP,EAASf,UAAWkQ,GCW3C,SAASvL,GAAKsM,UACLA,EAAOzQ,QAAQ,sBAAuB;;;;;;;AC7BwEhvB,UAAoC,SAASuG,QAAqB9G,EAAE,oBAAoBigC,KAAKA,KAAK,oBAAoBx/B,OAAOA,YAAO,IAAST,EAAEA,EAAE,GAAO4G,GAAG5G,EAAEkgC,YAAYlgC,EAAEmgC,YAAYx9B,EAAEiE,GAAG,SAASw5B,MAAMpgC,EAAEqgC,UAAU,IAAIC,UAAUzgC,EAAE,GAAGK,EAAE,EAAEG,EAAE,CAACkO,MAAM,SAASxO,EAAEwL,OAAO7L,GAAG6L,EAAEA,GAAG,IAAI8yB,gBAAe,KAAGrV,EAAEtpB,KAAK6L,EAAEg1B,sBAAsB7gC,EAAEA,EAAE,IAAO6L,EAAE8yB,cAAc3+B,EAAE6L,EAAEi1B,YAAYxX,EAAEzd,EAAEi1B,YAAYj1B,EAAEi1B,UAAUj1B,EAAEk1B,QAAQpgC,EAAEqgC,kBAAkB,KAAK1tB,EAAE,eAAe3S,EAAEqgC,kBAAkB,OAAM,MAAyKhhC,EAAEsT,EAApKjT,GAAGL,EAAEM,EAAE2gC,KAAK3gC,EAAE4gC,WAAW,KAAK5tB,EAAElM,EAAEjI,WAAWwB,EAAEwgC,WAAWxgC,EAAEwgC,SAASnhC,EAAEohC,gBAAgB,IAAIC,KAAK,CAAC,IAAI/tB,EAAE,QAAQ,CAACuG,KAAK,uBAAuBhO,EAAE,IAAIvL,EAAEghC,OAAOjhC,UAAkBwL,EAAE01B,UAAUh3B,EAAEsB,EAAEojB,GAAGzuB,IAAIL,EAAE0L,EAAEojB,IAAIpjB,EAA5P,UAAwQyH,EAAEkuB,SAAS31B,EAAE9D,KAAKuL,EAAEmuB,UAAU51B,EAAE61B,MAAMpuB,EAAEquB,aAAa91B,EAAE+1B,SAAStuB,EAAEuuB,UAAUh2B,EAAE/C,MAAM+C,EAAE9D,KAAKuhB,EAAEzd,EAAE9D,MAAM8D,EAAE61B,MAAMpY,EAAEzd,EAAE61B,OAAO71B,EAAE+1B,SAAStY,EAAEzd,EAAE+1B,UAAU/1B,EAAE/C,MAAMwgB,EAAEzd,EAAE/C,cAAc+C,EAAEk1B,YAAYztB,EAAEmtB,YAAY,CAAC9gC,MAAMU,EAAEyhC,OAAOj2B,EAAEk2B,SAASzuB,EAAE2b,SAAS/nB,EAAE,WAAyB,iBAAiB7G,EAAE6G,EAAE2E,EAAEm2B,SAAS,IAAIvsB,EAAE5J,GAAG,IAAIzC,EAAEyC,IAAG,IAAKxL,EAAE4hC,UAAU3Y,EAAEjpB,EAAE6hC,OAAO5Y,EAAEjpB,EAAE8hC,IAAIj7B,EAAE,IAAI3G,EAAEsL,IAAIvL,EAAE8hC,MAAM/hC,aAAa+hC,MAAM/hC,aAAajB,UAAU8H,EAAE,IAAIxG,EAAEmL,IAAW3E,EAAEm7B,OAAOhiC,IAAIiiC,QAAQ,SAASjiC,EAAEwL,OAAO3E,GAAE,EAAGqD,GAAE,EAAGpD,EAAE,IAAII,EAAE,OAAOH,EAAE,IAAIjH,EAAEiH,EAAEA,EAAEpH,GAAE,EAAGsT,EAAE,MAAM,cAAc,iBAAiBzH,uBAA0BA,EAAE02B,WAAW5hC,EAAE6hC,eAAevzB,QAAO,SAAS5O,UAAU,IAAIwL,EAAE02B,UAAU7tB,QAAQrU,MAAKP,SAASqH,EAAE0E,EAAE02B,YAAY,kBAAkB12B,EAAE42B,QAAQ,mBAAmB52B,EAAE42B,QAAQjhC,MAAM5B,QAAQiM,EAAE42B,WAAWv7B,EAAE2E,EAAE42B,0BAA0B52B,EAAE62B,gBAAgB,iBAAiB72B,EAAE62B,iBAAiB1iC,EAAE6L,EAAE62B,iCAAiC72B,EAAE82B,UAAUp7B,EAAEsE,EAAE82B,0BAA0B92B,EAAE+2B,YAAYx7B,EAAEyE,EAAE+2B,6BAA6B/2B,EAAE+zB,SAASr1B,EAAEsB,EAAE+zB,QAAWp+B,MAAM5B,QAAQiM,EAAEiH,SAAS,IAAI,IAAIjH,EAAEiH,QAAQhT,OAAO,MAAM,IAAI2B,MAAM,2BAA2B6R,EAAEzH,EAAEiH,iBAAiBjH,EAAEg3B,aAAa1iC,EAAE0L,EAAEg3B,WAAWz7B,IAAvnB,OAAioBnE,EAAE,IAAI6/B,OAAOlkB,EAAExX,GAAG,yBAAsB/G,IAAIA,EAAEuO,KAAKC,MAAMxO,IAAOmB,MAAM5B,QAAQS,GAAG,KAAKA,EAAEP,QAAQ0B,MAAM5B,QAAQS,EAAE,IAAI,OAAO0iC,EAAE,KAAK1iC,EAAEL,MAAM,iBAAiBK,EAAE,GAAG,OAAO0iC,EAAEzvB,GAAG9S,EAAEH,EAAE,IAAIA,EAAEL,QAAQ,GAAG,iBAAiBK,EAAE,MAAM,iBAAiBA,EAAEyJ,OAAOzJ,EAAEyJ,KAAK8E,KAAKC,MAAMxO,EAAEyJ,OAAOtI,MAAM5B,QAAQS,EAAEyJ,QAAQzJ,EAAE2iC,SAAS3iC,EAAE2iC,OAAO3iC,EAAEivB,MAAMjvB,EAAEivB,KAAK0T,QAAQ3iC,EAAE2iC,SAAS3iC,EAAE2iC,OAAOxhC,MAAM5B,QAAQS,EAAEyJ,KAAK,IAAIzJ,EAAE2iC,OAAOxiC,EAAEH,EAAEyJ,KAAK,KAAKtI,MAAM5B,QAAQS,EAAEyJ,KAAK,KAAK,iBAAiBzJ,EAAEyJ,KAAK,KAAKzJ,EAAEyJ,KAAK,CAACzJ,EAAEyJ,QAAQi5B,EAAE1iC,EAAE2iC,QAAQ,GAAG3iC,EAAEyJ,MAAM,GAAG9J,SAAS,IAAIyB,MAAM,mDAAmDjB,EAAEH,MAAM,iBAAiBA,EAAE,MAAM,OAAOwL,EAAE,OAAO,IAAI7L,KAAKK,EAAEwL,EAAEzG,KAAKpF,UAAU6L,WAAWk3B,EAAE1iC,EAAEwL,EAAE7L,OAAOsT,EAAE,oBAAoBjT,IAAIA,EAAEuO,KAAKC,MAAMxO,IAAI,iBAAiBwL,IAAIA,EAAE+C,KAAKC,MAAMhD,QAAQ3E,EAAE1F,MAAM5B,QAAQS,IAAI,EAAEA,EAAEP,OAAOsH,GAAG5F,MAAM5B,QAAQiM,EAAE,OAAO3E,GAAGqD,EAAE,KAAK,IAAIpK,EAAE,EAAEA,EAAEE,EAAEP,OAAOK,IAAI,EAAEA,IAAImT,GAAGnM,GAAGmM,GAAG7D,EAAEpP,EAAEF,GAAGA,KAAK0L,EAAE/L,SAASwT,GAAG/L,OAAO,IAAItE,EAAE,EAAEA,EAAE4I,EAAE/L,OAAOmD,IAAI,KAAKzC,EAAE0G,EAAE7G,EAAEP,OAAO+L,EAAE5I,GAAGnD,OAAOijC,GAAE,EAAGziC,EAAE4G,EAAE,IAAI9H,OAAOmD,KAAKsJ,EAAE5I,IAAInD,OAAO,IAAI+L,EAAE5I,GAAGnD,UAAUE,IAAIkH,IAAI67B,EAAE,WAAW/iC,EAAE,KAAK6L,EAAE5I,GAAGye,KAAK,IAAIsS,OAAO,IAAInoB,EAAE5I,GAAGnD,QAAQ,IAAI+L,EAAE5I,GAAG,GAAGnD,QAAQ,WAAWE,GAAGkH,EAAE,KAAK,IAAI9G,EAAE,GAAGqV,EAAE,EAAEA,EAAEjV,EAAEiV,IAAI,KAAK/U,EAAE0G,EAAE/G,EAAEoV,GAAGA,EAAErV,EAAEgF,KAAKyG,EAAE5I,GAAGvC,IAAIqiC,EAAE,KAAK3iC,EAAEshB,KAAK,IAAIsS,WAAW+O,EAAE,KAAK,IAAI35B,EAAE,EAAEA,EAAE5I,EAAE4I,IAAI,GAAGA,IAAI9I,IAAIgT,GAAGnM,OAAO5G,EAAE2G,GAAGE,EAAE/G,EAAE+I,GAAGA,EAAEkK,GAAG7D,EAAE5D,EAAE5I,GAAG1C,GAAG6I,GAAGnG,EAAE4I,EAAE/L,OAAO,KAAKE,GAAG,EAAEQ,IAAIF,KAAKgT,GAAG/L,WAAW+L,WAAW7D,EAAEpP,EAAEwL,MAAM,MAAMxL,EAAE,MAAM,MAAMA,EAAE8C,cAAc44B,KAAK,OAAOntB,KAAKE,UAAUzO,GAAGa,MAAM,EAAE,QAAQlB,EAAEK,EAAElB,WAAW0wB,QAAQ5sB,EAAE9C,SAAK,kBAAkB+G,GAAGA,GAAG,mBAAmBA,GAAGA,EAAE7G,EAAEwL,IAAIrK,MAAM5B,QAAQsH,IAAIA,EAAE2E,IAAI,SAASxL,EAAEwL,OAAO,IAAI7L,EAAE,EAAEA,EAAE6L,EAAE/L,OAAOE,IAAI,IAAI,EAAEK,EAAEqU,QAAQ7I,EAAE7L,IAAI,OAAM,SAAS,EAA9E,CAAkFA,EAAEW,EAAE6hC,kBAAkB,EAAExiC,EAAE0U,QAAQvN,IAAI,MAAMnH,EAAE+9B,OAAO,IAAI,MAAM/9B,EAAE+9B,OAAO/9B,EAAEF,OAAO,GAAYsH,EAAEpH,EAAEoH,EAAEpH,QAAQW,EAAEsiC,WAAW59B,OAAO69B,aAAa,IAAIviC,EAAEwiC,SAAS99B,OAAO69B,aAAa,IAAIviC,EAAEyiC,gBAAgB,SAASziC,EAAE6hC,eAAe,CAAC,KAAK,KAAK,IAAI7hC,EAAEyiC,iBAAiBziC,EAAEqgC,mBAAmB95B,KAAK5G,EAAEghC,OAAO3gC,EAAE0iC,kBAAkB,EAAE1iC,EAAE2iC,eAAe,SAAS3iC,EAAE4iC,gBAAgB,QAAQ5iC,EAAE6iC,iBAAiB,IAAI7iC,EAAE8iC,OAAO5U,EAAEluB,EAAE+iC,aAAa1jC,EAAEW,EAAEgjC,gBAAgBluB,EAAE9U,EAAEijC,aAAaljC,EAAEC,EAAEkjC,eAAez6B,EAAEzI,EAAEmjC,uBAAuBvjC,EAAED,EAAEyjC,OAAO,KAAK3jC,EAAEE,EAAEyjC,OAAO3jC,EAAE4jC,GAAGn1B,MAAM,SAAS5L,OAAOjD,EAAEiD,EAAE6+B,QAAQ,GAAGthC,EAAE,UAAU+U,KAAK0uB,MAAK,SAAS5jC,MAAQ,UAAUD,EAAEmV,MAAM2uB,KAAK,WAAWvH,eAAe,SAASv8B,EAAEmV,MAAM4uB,KAAK,QAAQv3B,gBAAetM,EAAE8jC,aAAc7uB,KAAK8uB,OAAO,IAAI9uB,KAAK8uB,MAAMvkC,OAAO,OAAM,MAAO,IAAI+L,EAAE,EAAEA,EAAE0J,KAAK8uB,MAAMvkC,OAAO+L,IAAIrL,EAAE4E,KAAK,CAACk/B,KAAK/uB,KAAK8uB,MAAMx4B,GAAG04B,UAAUhvB,KAAKivB,eAAepkC,EAAEqkC,OAAO,GAAGzkC,QAAOK,IAAIkV,cAAclV,OAAO,IAAIG,EAAEV,OAAO,KAAO+L,EAAE7L,EAAEsT,EAAEpM,EAAE1G,EAAE,MAAM8oB,EAAErmB,EAAEyhC,QAAQ,KAAKt9B,EAAEnE,EAAEyhC,OAAOx9B,EAAEo9B,KAAKp9B,EAAEq9B,cAAc,iBAAiBn9B,EAAE,IAAI,UAAUA,EAAEy0B,OAAO,OAAsBhwB,EAAE3E,EAAEo9B,KAAKtkC,EAAEkH,EAAEq9B,UAAUjxB,EAAElM,EAAEu9B,YAAYrb,EAAErmB,EAAE6F,QAAQ7F,EAAE6F,MAAM,CAACxD,KAAzE,cAAiFuG,EAAE7L,EAAEsT,OAAO,SAASlM,EAAEy0B,OAAO,YAAYkH,qBAAqB37B,EAAE06B,SAAS56B,EAAEs9B,eAAepkC,EAAEqkC,OAAOv9B,EAAEs9B,eAAep9B,EAAE06B,cAAc,GAAG,SAAS16B,EAAE,YAAY27B,QAAQ5iC,EAAE+G,EAAEs9B,eAAe5C,SAAS16B,EAAEs9B,eAAe5C,SAAS,SAASvhC,GAAGipB,EAAEnpB,IAAIA,EAAEE,EAAE6G,EAAEo9B,KAAKp9B,EAAEq9B,WAAWxB,KAAKpiC,EAAEkO,MAAM3H,EAAEo9B,KAAKp9B,EAAEs9B,qBAAqBlb,EAAErmB,EAAE2+B,WAAW3+B,EAAE2+B,oBAAoBmB,IAAIviC,EAAE+hB,OAAO,EAAE,GAAGliB,eAAe0iC,EAAE1iC,QAAQukC,QAAQ,KAAKrvB,KAAKsvB,WAAU,EAAGtvB,KAAKuvB,YAAW,EAAGvvB,KAAKwvB,SAAQ,EAAGxvB,KAAKyvB,OAAO,KAAKzvB,KAAK0vB,WAAW,EAAE1vB,KAAK2vB,aAAa,GAAG3vB,KAAK4vB,UAAU,EAAE5vB,KAAK6vB,OAAO,EAAE7vB,KAAK8vB,WAAW,KAAK9vB,KAAK+vB,cAAa,EAAG/vB,KAAKgwB,iBAAiB,CAACz7B,KAAK,GAAG07B,OAAO,GAAGlW,KAAK,IAAI,SAASjvB,OAAOwL,EAAE45B,EAAEplC,GAAGwL,EAAE65B,UAAU3nB,SAASlS,EAAE65B,WAAWrlC,EAAE0H,MAAM1H,EAAEqhC,QAAQ71B,EAAE65B,UAAU,WAAWd,QAAQ,IAAI5kC,EAAE6L,IAAI0J,KAAKqvB,QAAQe,SAASpwB,MAAMqwB,QAAQ/5B,GAAGrM,KAAK+V,KAAKlV,GAAGkV,KAAKswB,WAAW,SAASxlC,EAAEwL,MAAM0J,KAAK+vB,cAAchc,EAAE/T,KAAKqwB,QAAQE,kBAAkB,KAAK9lC,EAAEuV,KAAKqwB,QAAQE,iBAAiBzlC,YAAYL,IAAIK,EAAEL,QAAQslC,cAAa,EAAG/vB,KAAKwvB,SAAQ,MAAOzxB,EAAEiC,KAAK2vB,aAAa7kC,OAAO6kC,aAAa,OAAOh+B,EAAEqO,KAAKqvB,QAAQ/1B,MAAMyE,EAAEiC,KAAK0vB,YAAY1vB,KAAKsvB,eAAetvB,KAAKqvB,QAAQmB,WAAWxwB,KAAKqvB,QAAQoB,UAAU,KAAK5+B,EAAEF,EAAEooB,KAAK2W,YAAYpB,YAAYtvB,KAAK2vB,aAAa5xB,EAAEqB,UAAUvN,EAAEmO,KAAK0vB,YAAY1vB,KAAK0vB,WAAW79B,GAAGF,GAAGA,EAAE4C,OAAOyL,KAAK4vB,WAAWj+B,EAAE4C,KAAKhK,YAAYK,EAAEoV,KAAKsvB,WAAWtvB,KAAKqwB,QAAQM,SAAS3wB,KAAK4vB,WAAW5vB,KAAKqwB,QAAQM,WAAWjjC,EAAE3C,EAAEmgC,YAAY,CAAC0F,QAAQj/B,EAAE66B,SAASphC,EAAEylC,UAAUC,SAASlmC,SAAS,GAAGmpB,EAAE/T,KAAKqwB,QAAQlE,SAAS71B,EAAE,IAAI0J,KAAKqwB,QAAQlE,MAAMx6B,EAAEqO,KAAKqvB,SAASrvB,KAAKqvB,QAAQmB,UAAUxwB,KAAKqvB,QAAQoB,UAAU,YAAYzwB,KAAKwvB,SAAQ,GAAI79B,OAAE,EAAOqO,KAAKgwB,sBAAiB,SAAchwB,KAAKqwB,QAAQ79B,MAAMwN,KAAKqwB,QAAQlE,QAAQnsB,KAAKgwB,iBAAiBz7B,KAAKyL,KAAKgwB,iBAAiBz7B,KAAKsD,OAAOlG,EAAE4C,MAAMyL,KAAKgwB,iBAAiBC,OAAOjwB,KAAKgwB,iBAAiBC,OAAOp4B,OAAOlG,EAAEs+B,QAAQjwB,KAAKgwB,iBAAiBjW,KAAKpoB,EAAEooB,MAAM/Z,KAAKuvB,aAAa3kC,IAAImpB,EAAE/T,KAAKqwB,QAAQhE,WAAW16B,GAAGA,EAAEooB,KAAK0W,UAAUzwB,KAAKqwB,QAAQhE,SAASrsB,KAAKgwB,iBAAiBhwB,KAAKyvB,QAAQzvB,KAAKuvB,YAAW,GAAI3kC,GAAG+G,GAAGA,EAAEooB,KAAKyW,QAAQxwB,KAAK8vB,aAAan+B,OAAO69B,SAAQ,GAAIxvB,KAAK+wB,WAAW,SAASjmC,GAAGipB,EAAE/T,KAAKqwB,QAAQ98B,OAAOyM,KAAKqwB,QAAQ98B,MAAMzI,GAAG4C,GAAGsS,KAAKqwB,QAAQ98B,OAAOxI,EAAEmgC,YAAY,CAACsB,SAASphC,EAAEylC,UAAUt9B,MAAMzI,EAAEgmC,UAAS,cAAe5wB,EAAEpV,OAAOiT,GAAGjT,EAAEA,GAAG,IAAIqlC,YAAYrlC,EAAEqlC,UAAU/kC,EAAE4iC,iBAAiBR,EAAEvjC,KAAK+V,KAAKlV,GAAGkV,KAAK8vB,WAAWn+B,EAAE,gBAAgBq/B,aAAahxB,KAAKixB,gBAAgB,gBAAgBD,cAAchxB,KAAK8sB,OAAO,SAAShiC,QAAQ2kC,OAAO3kC,EAAEkV,KAAK8vB,cAAc9vB,KAAKgxB,WAAW,cAAchxB,KAAKsvB,UAAUtvB,KAAKixB,mBAAmB,IAAIlzB,EAAE,IAAImzB,eAAelxB,KAAKqwB,QAAQc,kBAAkBpzB,EAAEozB,gBAAgBnxB,KAAKqwB,QAAQc,iBAAiBx/B,IAAIoM,EAAEqzB,OAAOl3B,EAAE8F,KAAKixB,aAAajxB,MAAMjC,EAAEszB,QAAQn3B,EAAE8F,KAAKsxB,YAAYtxB,OAAOjC,EAAEwzB,KAAKvxB,KAAKqwB,QAAQmB,oBAAoB,OAAO,MAAMxxB,KAAKyvB,QAAQ99B,GAAGqO,KAAKqwB,QAAQoB,uBAAuB,KAAK3mC,EAAEkV,KAAKqwB,QAAQoB,2BAA2B,IAAIn7B,KAAKxL,EAAEiT,EAAE2zB,iBAAiBp7B,EAAExL,EAAEwL,OAAO0J,KAAKqwB,QAAQF,UAAU,KAAK1lC,EAAEuV,KAAK6vB,OAAO7vB,KAAKqwB,QAAQF,UAAU,EAAEpyB,EAAE2zB,iBAAiB,QAAQ,SAAS1xB,KAAK6vB,OAAO,IAAIplC,OAAOsT,EAAE4zB,KAAK3xB,KAAKqwB,QAAQmB,qBAAqB,MAAM1mC,QAAQwmC,YAAYxmC,EAAE8mC,SAASjgC,GAAG,IAAIoM,EAAE8zB,QAAQ7xB,KAAKsxB,gBAAgBtxB,KAAKixB,aAAa,eAAelzB,EAAE+zB,aAAa/zB,EAAE8zB,OAAO,KAAK,KAAK9zB,EAAE8zB,OAAO7xB,KAAKsxB,eAAetxB,KAAK6vB,QAAQ7vB,KAAKqwB,QAAQF,UAAUnwB,KAAKqwB,QAAQF,UAAUpyB,EAAEg0B,aAAaxnC,OAAOyV,KAAKsvB,WAAWtvB,KAAKqwB,QAAQF,WAAWnwB,KAAK6vB,QAAQ,SAAS/kC,OAAOwL,EAAExL,EAAEknC,kBAAkB,wBAAoB,OAAO17B,GAAS,EAASkS,SAASlS,EAAE8I,UAAU9I,EAAE27B,YAAY,KAAK,IAA3H,CAAgIl0B,GAAGiC,KAAKswB,WAAWvyB,EAAEg0B,iBAAiB/xB,KAAKsxB,YAAY,SAASxmC,OAAOwL,EAAEyH,EAAEm0B,YAAYpnC,OAAOimC,WAAW,IAAI7kC,MAAMoK,cAAcnL,EAAEL,OAAOiT,EAAEpM,GAAG7G,EAAEA,GAAG,IAAIqlC,YAAYrlC,EAAEqlC,UAAU/kC,EAAE2iC,gBAAgBP,EAAEvjC,KAAK+V,KAAKlV,OAAO+G,EAAE,oBAAoBg9B,gBAAgB/B,OAAO,SAAShiC,QAAQ2kC,OAAO3kC,EAAE6G,EAAE7G,EAAEa,OAAOb,EAAEqnC,aAAarnC,EAAEsnC,SAASvgC,IAAIkM,EAAE,IAAI8wB,YAAYuC,OAAOl3B,EAAE8F,KAAKixB,aAAajxB,MAAMjC,EAAEszB,QAAQn3B,EAAE8F,KAAKsxB,YAAYtxB,OAAOjC,EAAE,IAAIs0B,eAAeryB,KAAK8vB,cAAc9vB,KAAK8vB,WAAW,gBAAgBR,WAAWtvB,KAAKqwB,QAAQM,WAAW3wB,KAAK4vB,UAAU5vB,KAAKqwB,QAAQM,UAAU3wB,KAAKgxB,cAAchxB,KAAKgxB,WAAW,eAAelmC,EAAEkV,KAAKyvB,UAAUzvB,KAAKqwB,QAAQF,UAAU,KAAK75B,EAAErE,KAAK9H,IAAI6V,KAAK6vB,OAAO7vB,KAAKqwB,QAAQF,UAAUnwB,KAAKyvB,OAAOz2B,MAAMlO,EAAE6G,EAAE1H,KAAKa,EAAEkV,KAAK6vB,OAAOv5B,OAAO7L,EAAEsT,EAAEu0B,WAAWxnC,EAAEkV,KAAKqwB,QAAQkC,UAAU1gC,GAAGmO,KAAKixB,aAAa,CAACuB,OAAO,CAAC54B,OAAOnP,MAAMuV,KAAKixB,aAAa,SAASnmC,QAAQ+kC,QAAQ7vB,KAAKqwB,QAAQF,UAAUnwB,KAAKsvB,WAAWtvB,KAAKqwB,QAAQF,WAAWnwB,KAAK6vB,QAAQ7vB,KAAKyvB,OAAOz2B,KAAKgH,KAAKswB,WAAWxlC,EAAE0nC,OAAO54B,SAASoG,KAAKsxB,YAAY,gBAAgBP,WAAWhzB,EAAExK,iBAAiBM,EAAE/I,OAAOL,EAAE+iC,EAAEvjC,KAAK+V,KAAKlV,EAAEA,GAAG,IAAIkV,KAAK8sB,OAAO,SAAShiC,UAAUL,EAAEK,EAAEkV,KAAK8vB,cAAc9vB,KAAK8vB,WAAW,eAAe9vB,KAAKsvB,UAAU,KAAKxkC,EAAEwL,EAAE0J,KAAKqwB,QAAQF,iBAAiB75B,GAAGxL,EAAEL,EAAE2U,UAAU,EAAE9I,GAAG7L,EAAEA,EAAE2U,UAAU9I,KAAKxL,EAAEL,EAAEA,EAAE,IAAIuV,KAAKsvB,WAAW7kC,EAAEuV,KAAKswB,WAAWxlC,cAAcE,EAAEF,GAAG0iC,EAAEvjC,KAAK+V,KAAKlV,EAAEA,GAAG,QAAQwL,EAAE,GAAG7L,GAAE,EAAGsT,GAAE,OAAQ00B,MAAM,WAAWjF,EAAE1jC,UAAU2oC,MAAMhyB,MAAMT,KAAK1P,WAAW0P,KAAKyvB,OAAOgD,SAASzyB,KAAK0yB,OAAO,WAAWlF,EAAE1jC,UAAU4oC,OAAOjyB,MAAMT,KAAK1P,WAAW0P,KAAKyvB,OAAOiD,UAAU1yB,KAAK8sB,OAAO,SAAShiC,QAAQ2kC,OAAO3kC,EAAEkV,KAAKyvB,OAAO7C,GAAG,OAAO5sB,KAAK2yB,aAAa3yB,KAAKyvB,OAAO7C,GAAG,MAAM5sB,KAAK4yB,YAAY5yB,KAAKyvB,OAAO7C,GAAG,QAAQ5sB,KAAK6yB,eAAe7yB,KAAK8yB,iBAAiB,WAAW/0B,GAAG,IAAIzH,EAAE/L,SAASyV,KAAKsvB,WAAU,IAAKtvB,KAAK8vB,WAAW,gBAAgBgD,mBAAmBx8B,EAAE/L,OAAOyV,KAAKswB,WAAWh6B,EAAE1B,SAASnK,GAAE,GAAIuV,KAAK2yB,YAAYz4B,GAAE,SAASpP,OAAOwL,EAAEzG,KAAK,iBAAiB/E,EAAEA,EAAEA,EAAElB,SAASoW,KAAKqwB,QAAQkC,WAAW9nC,IAAIA,GAAE,EAAGuV,KAAK8yB,mBAAmB9yB,KAAKswB,WAAWh6B,EAAE1B,UAAU,MAAM9J,QAAQ+nC,aAAa/nC,MAAKkV,MAAMA,KAAK6yB,aAAa34B,GAAE,SAASpP,QAAQioC,iBAAiB/yB,KAAK+wB,WAAWjmC,KAAIkV,MAAMA,KAAK4yB,WAAW14B,GAAE,gBAAgB64B,iBAAiBh1B,GAAE,EAAGiC,KAAK2yB,YAAY,MAAK3yB,MAAMA,KAAK+yB,eAAe74B,GAAE,gBAAgBu1B,OAAOuD,eAAe,OAAOhzB,KAAK2yB,aAAa3yB,KAAKyvB,OAAOuD,eAAe,MAAMhzB,KAAK4yB,YAAY5yB,KAAKyvB,OAAOuD,eAAe,QAAQhzB,KAAK6yB,gBAAe7yB,eAAevV,EAAEmH,OAAOhH,EAAE8C,EAAEzC,EAAE8S,EAAE9L,KAAKmB,IAAI,EAAE,IAAIzB,GAAGoM,EAAElM,EAAE,gDAAgD27B,EAAE,iNAAiNl3B,EAAE0J,KAAKvV,EAAE,EAAEM,EAAE,EAAEF,GAAE,EAAGC,GAAE,EAAGoV,EAAE,GAAG/U,EAAE,CAACoJ,KAAK,GAAG07B,OAAO,GAAGlW,KAAK,OAAOhG,EAAEniB,EAAEY,MAAM,KAAKqB,EAAEjC,EAAEY,KAAKZ,EAAEY,KAAK,SAAS1H,MAAMK,EAAEL,EAAEkK,IAAIhK,QAAQ,IAAIA,IAAI,IAAIG,EAAEoJ,KAAKhK,OAAO,OAAOE,GAAGK,EAAEyJ,KAAKhK,OAAOqH,EAAE++B,SAASlmC,EAAEmH,EAAE++B,QAAQjjC,EAAEulC,SAAS9nC,EAAEoJ,KAAKpJ,EAAEoJ,KAAK,GAAGV,EAAE1I,EAAEmL,eAAetE,EAAElH,SAAS,WAAW8G,EAAEu7B,eAAe,KAAKriC,EAAEqhB,KAAK,IAAIsS,OAAO,IAAI3zB,EAAEP,QAAQ,IAAIO,EAAE,GAAGP,gBAAgBS,OAAOG,GAAGF,IAAIqE,EAAE,YAAY,wBAAwB,6DAA6DlE,EAAE6iC,iBAAiB,KAAKhjC,GAAE,GAAI2G,EAAEu7B,eAAe,IAAI,IAAIriC,EAAE,EAAEA,EAAEK,EAAEoJ,KAAKhK,OAAOO,IAAIkH,EAAE7G,EAAEoJ,KAAKzJ,KAAKK,EAAEoJ,KAAKyY,OAAOliB,IAAI,UAAUkK,KAAK,cAAe7J,KAAmFc,MAAM5B,QAAQc,EAAEoJ,KAAK,IAAI,KAAK,IAAI+B,EAAE,EAAEtB,KAAKsB,EAAEnL,EAAEoJ,KAAKhK,OAAO+L,IAAInL,EAAEoJ,KAAK+B,GAAGmD,QAAQ3O,GAAGK,EAAEoJ,KAAKyY,OAAO,EAAE,QAAQ7hB,EAAEoJ,KAAKkF,QAAQ3O,YAA5LA,EAAEA,GAAGipB,EAAEniB,EAAEshC,mBAAmBpoC,EAAE8G,EAAEshC,gBAAgBpoC,IAAIoV,EAAErQ,KAAK/E,IAA5F,GAAmO,eAAeK,IAAIyG,EAAEy4B,SAASz4B,EAAEw3B,gBAAgBx3B,EAAE25B,UAAU,OAAOpgC,WAAWL,EAAEA,EAAEwL,OAAO7L,EAAEsT,EAAEnM,EAAEy4B,OAAO,GAAG,OAAO5/B,EAAE,EAAEA,EAAEK,EAAEP,OAAOE,IAAI,KAAKkH,EAAElH,EAAEoH,EAAE/G,EAAEL,GAAGmH,EAAEy4B,SAAS14B,EAAElH,GAAGyV,EAAE3V,OAAO,iBAAiB2V,EAAEzV,IAAImH,EAAE25B,YAAY15B,EAAED,EAAE25B,UAAU15B,EAAEF,IAAIE,EAAEqI,EAAEvI,EAAEE,GAAG,mBAAmBF,GAAGoM,EAAEpM,GAAGoM,EAAEpM,IAAI,GAAGoM,EAAEpM,GAAG9B,KAAKgC,IAAIkM,EAAEpM,GAAGE,SAASD,EAAEy4B,SAAS5/B,EAAEyV,EAAE3V,OAAO+E,EAAE,gBAAgB,gBAAgB,6BAA6B4Q,EAAE3V,OAAO,sBAAsBE,EAAEM,EAAEuL,GAAG7L,EAAEyV,EAAE3V,QAAQ+E,EAAE,gBAAgB,eAAe,4BAA4B4Q,EAAE3V,OAAO,sBAAsBE,EAAEM,EAAEuL,IAAIyH,MAAMzH,EAAE,SAAGnL,EAAEoJ,KAAKhK,QAAQ0B,MAAM5B,QAAQc,EAAEoJ,KAAK,KAAKpJ,EAAEoJ,KAAKpJ,EAAEoJ,KAAKW,IAAIpK,GAAGwL,EAAEnL,EAAEoJ,KAAKhK,QAAQY,EAAEoJ,KAAKzJ,EAAEK,EAAEoJ,KAAK,GAAG3C,EAAEy4B,QAAQl/B,EAAE4uB,OAAO5uB,EAAE4uB,KAAK0T,OAAOvtB,GAAUnV,GAAGuL,EAAEnL,EAAtrB,YAAosB6J,WAAWpD,EAAEy4B,QAAQ,IAAInqB,EAAE3V,gBAAgB2P,EAAEpP,EAAEwL,UAAU7L,EAAEK,EAAE8G,EAAE05B,4BAAuB,IAAS15B,EAAEw3B,cAAc3+B,KAAKmH,EAAEw3B,cAAc3+B,GAAGmH,EAAE05B,sBAAsB7gC,KAAI,KAAMmH,EAAEw3B,cAAc3+B,IAAImH,EAAEw3B,eAAe,SAAS9yB,GAAG,SAASA,GAAG,UAAUA,GAAG,UAAUA,IAAI,SAASxL,MAAM+G,EAAEs5B,KAAKrgC,GAAG,KAAKwL,EAAE6lB,WAAWrxB,MAAM6G,EAAE2E,GAAGA,EAAEyH,EAAE,OAAM,SAAS,EAAzE,CAA6EzH,GAAG6lB,WAAW7lB,GAAGk3B,EAAErC,KAAK70B,GAAG,IAAIkwB,KAAKlwB,GAAG,KAAKA,EAAE,KAAKA,GAAGA,MAAM7L,WAAW6E,EAAExE,EAAEwL,EAAE7L,EAAEsT,OAAOpM,EAAE,CAAC2S,KAAKxZ,EAAEqoC,KAAK78B,EAAEs7B,QAAQnnC,YAAYsT,IAAIpM,EAAEqC,IAAI+J,GAAG5S,EAAE8kC,OAAOpgC,KAAK8B,QAAQ2H,MAAM,SAASxO,EAAEwL,EAAE7L,OAAOsT,EAAEnM,EAAEy7B,WAAW,OAAOz7B,EAAEw7B,UAAUx7B,EAAEw7B,QAAQ,SAAStiC,EAAEwL,GAAGxL,EAAEA,EAAEsU,UAAU,EAAE,aAAa3U,EAAE,IAAI8iC,OAAOlkB,EAAE/S,GAAG,UAAU+S,EAAE/S,GAAG,MAAMyH,GAAGjT,EAAEA,EAAEwvB,QAAQ7vB,EAAE,KAAK+zB,MAAM,MAAM7sB,EAAE7G,EAAE0zB,MAAM,MAAM3sB,EAAE,EAAEF,EAAEpH,QAAQoH,EAAE,GAAGpH,OAAOwT,EAAE,GAAGxT,UAAU,IAAIwT,EAAExT,QAAQsH,EAAE,MAAM,SAAS,IAAIjH,EAAE,EAAE8C,EAAE,EAAEA,EAAEqQ,EAAExT,OAAOmD,IAAI,OAAOqQ,EAAErQ,GAAG,IAAI9C,WAAWA,GAAGmT,EAAExT,OAAO,EAAE,OAAO,KAAvR,CAA6RO,EAAEiT,IAAI9S,GAAE,EAAG2G,EAAEo7B,UAAUjZ,EAAEniB,EAAEo7B,aAAap7B,EAAEo7B,UAAUp7B,EAAEo7B,UAAUliC,GAAGK,EAAE4uB,KAAKiT,UAAUp7B,EAAEo7B,eAAe,KAAKr7B,EAAE,SAAS7G,EAAEwL,EAAE7L,EAAEsT,EAAEpM,OAAOE,EAAEjH,EAAE8C,EAAEzC,EAAE0G,EAAEA,GAAG,CAAC,IAAI,KAAK,IAAI,IAAIvG,EAAEsiC,WAAWtiC,EAAEwiC,cAAc,IAAIJ,EAAE,EAAEA,EAAE77B,EAAEpH,OAAOijC,IAAI,KAAKziC,EAAE4G,EAAE67B,GAAG3iC,EAAE,EAAEqV,EAAE,EAAE/U,EAAE,EAAEuC,OAAE,MAAW,IAAImG,EAAE,IAAIylB,EAAE,CAAC8Z,SAASr1B,EAAEivB,UAAUjiC,EAAEqiC,QAAQ92B,EAAEq6B,QAAQ,KAAKr3B,MAAMxO,GAAGE,EAAE,EAAEA,EAAE6I,EAAEU,KAAKhK,OAAOS,IAAI,GAAGP,GAAGuH,EAAE6B,EAAEU,KAAKvJ,IAAIG,QAAQ,KAAK6J,EAAEnB,EAAEU,KAAKvJ,GAAGT,OAAO2V,GAAGlL,OAAE,IAAStH,EAAE,EAAEsH,IAAInK,GAAGoH,KAAKiB,IAAI8B,EAAEtH,GAAGA,EAAEsH,GAAGtH,EAAEsH,IAAInB,EAAEU,KAAKhK,SAAS2V,GAAGrM,EAAEU,KAAKhK,OAAOY,SAAI,IAASP,GAAGC,GAAGD,UAAK,IAASK,GAAGA,EAAEiV,IAAI,KAAKA,IAAItV,EAAEC,EAAEgH,EAAE9G,EAAEE,EAAEiV,SAAS,CAACmzB,cAAczhC,EAAEo7B,UAAUn7B,GAAGyhC,cAAczhC,GAApe,CAAwe/G,EAAE8G,EAAEw7B,QAAQx7B,EAAEu7B,eAAev7B,EAAEwhC,SAASxhC,EAAE2hC,mBAAmB5hC,EAAE0hC,WAAWzhC,EAAEo7B,UAAUr7B,EAAE2hC,eAAeroC,GAAE,EAAG2G,EAAEo7B,UAAU5hC,EAAE6iC,kBAAkB9iC,EAAE4uB,KAAKiT,UAAUp7B,EAAEo7B,cAAcn7B,EAAEq+B,EAAEt+B,UAAUA,EAAE++B,SAAS/+B,EAAEy4B,QAAQx4B,EAAE8+B,UAAU/lC,EAAEE,EAAE4C,EAAE,IAAI4rB,EAAEznB,GAAG1G,EAAEuC,EAAE4L,MAAM1O,EAAE0L,EAAE7L,GAAGO,IAAIH,EAAE,CAACkvB,KAAK,CAACyW,QAAO,IAAKrlC,GAAG,CAAC4uB,KAAK,CAACyW,QAAO,KAAMxwB,KAAKwwB,OAAO,kBAAkB3lC,GAAGmV,KAAKyyB,MAAM,WAAW5nC,GAAE,EAAG6C,EAAEulC,QAAQroC,EAAEmpB,EAAEniB,EAAEu6B,OAAO,GAAGvhC,EAAEwU,UAAU1R,EAAE8lC,iBAAiBxzB,KAAK0yB,OAAO,WAAWp8B,EAAE85B,SAASZ,SAAS3kC,GAAE,EAAGyL,EAAE85B,SAASE,WAAW1lC,GAAE,IAAK6oC,WAAWn9B,EAAEo8B,OAAO,IAAI1yB,KAAKywB,QAAQ,kBAAkB3lC,GAAGkV,KAAKizB,MAAM,WAAWnoC,GAAE,EAAG4C,EAAEulC,QAAQ9nC,EAAE4uB,KAAK0W,SAAQ,EAAG1c,EAAEniB,EAAEy6B,WAAWz6B,EAAEy6B,SAASlhC,GAAGP,EAAE,aAAaye,EAAEve,UAAUA,EAAEwvB,QAAQ,sBAAsB,iBAAiBhB,EAAExuB,OAAO4oC,EAAEC,GAAG7oC,EAAEA,GAAG,IAAIkiC,UAAU4G,EAAE9oC,EAAEsiC,QAAQyG,EAAE/oC,EAAEsoC,SAASU,EAAEhpC,EAAE0H,KAAKuhC,EAAEjpC,EAAE6lC,QAAQqD,EAAElpC,EAAEmpC,SAAS5a,EAAEqa,OAAE,IAAS5oC,EAAEuiC,UAAU,IAAIviC,EAAEuiC,kBAAa,IAASviC,EAAEwiC,aAAajU,EAAEvuB,EAAEwiC,aAAa,iBAAiBqG,IAAI,EAAEvoC,EAAE6hC,eAAe9tB,QAAQw0B,MAAMA,EAAE,KAAKE,IAAIF,EAAE,MAAM,IAAIznC,MAAM,4CAA4C2nC,EAAEA,EAAE,KAAK,iBAAiBA,IAAI,EAAEzoC,EAAE6hC,eAAe9tB,QAAQ00B,MAAMA,GAAE,GAAI,OAAOD,GAAG,OAAOA,GAAG,SAASA,IAAIA,EAAE,UAAUM,EAAE,EAAEhpC,GAAE,OAAQoO,MAAM,SAAS1O,EAAE0L,EAAE7L,MAAM,iBAAiBG,EAAE,MAAM,IAAIsB,MAAM,8BAA8B6R,EAAEnT,EAAEL,OAAOO,EAAE6oC,EAAEppC,OAAOoH,EAAEiiC,EAAErpC,OAAOsH,EAAEgiC,EAAEtpC,OAAOmD,EAAEqmB,EAAE+f,GAAG7oC,EAAE,GAAGuiC,EAAE,GAAGziC,EAAE,GAAGF,EAAEqpC,EAAE,MAAMtpC,EAAE,OAAOupC,OAAOH,IAAG,IAAKA,IAAI,IAAIppC,EAAEuU,QAAQu0B,GAAG,KAAK,IAAIxzB,EAAEtV,EAAE4zB,MAAMoV,GAAGzoC,EAAE,EAAEA,EAAE+U,EAAE3V,OAAOY,IAAI,IAAIJ,EAAEmV,EAAE/U,GAAG+oC,GAAGnpC,EAAER,OAAOY,IAAI+U,EAAE3V,OAAO,EAAE2pC,GAAGN,EAAErpC,YAAY,GAAGE,EAAE,OAAO0pC,QAAQN,GAAG9oC,EAAEqU,UAAU,EAAEvN,KAAKgiC,EAAE,IAAInmC,MAAMzC,EAAE,GAAGG,EAAEL,EAAEyzB,MAAMmV,IAAIS,IAAIlpC,EAAE,OAAOipC,SAAS/oC,EAAEL,EAAEyzB,MAAMmV,OAAOI,GAAGA,GAAG5oC,EAAE,OAAOF,EAAEA,EAAEU,MAAM,EAAEooC,GAAGI,GAAE,WAAYA,QAAQ,IAAItgC,EAAEjJ,EAAEuU,QAAQw0B,EAAEO,GAAGlpC,EAAEJ,EAAEuU,QAAQy0B,EAAEM,GAAGl/B,EAAE,IAAIu4B,OAAOlkB,EAAEgQ,GAAGhQ,EAAEqqB,GAAG,KAAK9hC,EAAEhH,EAAEuU,QAAQu0B,EAAEQ,KAAK,GAAGtpC,EAAEspC,KAAKR,KAAKG,GAAG,IAAI9oC,EAAER,QAAQK,EAAEwU,UAAU80B,EAAEA,EAAEriC,KAAKgiC,EAAE,KAAK,IAAI7oC,EAAE,OAAOmpC,IAAID,EAAElpC,EAAE2G,EAAE3G,EAAEJ,EAAEuU,QAAQy0B,EAAEM,GAAGrgC,EAAEjJ,EAAEuU,QAAQw0B,EAAEO,OAAO,KAAK,IAAIrgC,IAAIA,EAAE7I,IAAI,IAAIA,GAAG,MAAM6I,EAAEjC,GAAG,CAAC7G,EAAE8E,KAAKjF,EAAEwU,UAAU80B,EAAErgC,IAAIqgC,EAAErgC,EAAE/I,EAAE+I,EAAEjJ,EAAEuU,QAAQw0B,EAAEO,gBAAgBliC,EAAEhB,EAAE6C,EAAEjC,EAAE5G,MAAMgH,QAAG,IAASA,EAAEqiC,UAAU,CAACxgC,EAAE7B,EAAEqiC,UAAUziC,EAAEI,EAAEsiC,YAAYvpC,EAAE8E,KAAKjF,EAAEwU,UAAU80B,EAAErgC,IAAIqgC,EAAErgC,EAAE/I,EAAE+I,EAAEjJ,EAAEuU,QAAQw0B,EAAEO,iBAAiB,IAAIlpC,EAAE,SAASD,EAAE8E,KAAKjF,EAAEwU,UAAU80B,EAAElpC,IAAI+rB,EAAE/rB,EAAE2G,GAAGjE,IAAI0mC,IAAIlpC,GAAG,OAAOipC,OAAOJ,GAAG9oC,EAAEV,QAAQwpC,EAAE,OAAOI,GAAE,QAAS,IAAIviC,EAAEsiC,EAAEA,MAAM,KAAK,KAAKtiC,EAAEhH,EAAEuU,QAAQu0B,EAAE9hC,EAAE,IAAI,OAAOnH,GAAG+iC,EAAE39B,KAAK,CAACyU,KAAK,SAAS6uB,KAAK,gBAAgBvB,QAAQ,4BAA4B59B,IAAI/I,EAAEV,OAAO4S,MAAM+2B,IAAIhE,OAAOt+B,IAAImM,EAAE,EAAE,OAAOmyB,EAAEtlC,EAAEwU,UAAU80B,EAAEtiC,GAAG0oB,QAAQtlB,EAAE0+B,OAAOA,IAAIra,GAAGzuB,EAAEgH,EAAE,KAAKynB,MAAMqa,IAAIra,GAAG,IAAIznB,GAAGhH,EAAEgH,EAAE,KAAKynB,EAAE,EAAE,IAAIxlB,GAAGA,EAAEjC,EAAE,IAAIiC,EAAEjJ,EAAEuU,QAAQw0B,EAAE/hC,EAAE,KAAK,IAAI5G,GAAGA,EAAE4G,EAAE,IAAI5G,EAAEJ,EAAEuU,QAAQy0B,EAAEhiC,EAAE,QAAQsI,EAAEof,GAAG,IAAItuB,EAAE6I,EAAE5B,KAAK9H,IAAI0J,EAAE7I,OAAOJ,EAAEgH,EAAE,EAAEsI,KAAKy5B,EAAE,CAAC5oC,EAAE8E,KAAKjF,EAAEwU,UAAU80B,EAAEtiC,GAAG0oB,QAAQtlB,EAAE0+B,IAAI9oC,EAAEspC,EAAEtiC,EAAE,EAAEsI,EAAEpP,KAAK4oC,IAAI9hC,EAAEhH,EAAEuU,QAAQu0B,EAAEQ,IAAIrgC,EAAEjJ,EAAEuU,QAAQw0B,EAAEO,GAAGlpC,EAAEJ,EAAEuU,QAAQy0B,EAAEM,aAAa5kC,EAAEgqB,EAAEtuB,MAAMJ,EAAEwU,UAAUxN,EAAE,EAAEtC,EAAEsC,EAAE,EAAEtC,EAAEqC,KAAKiiC,EAAE,IAAI7oC,EAAE8E,KAAKjF,EAAEwU,UAAU80B,EAAEtiC,GAAG0oB,QAAQtlB,EAAE0+B,IAAI3c,EAAEnlB,EAAE,EAAEtC,EAAEqC,GAAGkC,EAAEjJ,EAAEuU,QAAQw0B,EAAEO,GAAGtiC,EAAEhH,EAAEuU,QAAQu0B,EAAEQ,GAAGxmC,IAAI0mC,IAAIlpC,GAAG,OAAOipC,OAAOJ,GAAG9oC,EAAEV,QAAQwpC,EAAE,OAAOI,GAAE,SAAU3G,EAAE39B,KAAK,CAACyU,KAAK,SAAS6uB,KAAK,gBAAgBvB,QAAQ,8CAA8C59B,IAAI/I,EAAEV,OAAO4S,MAAM+2B,IAAItiC,UAAUA,WAAWs+B,aAAa9kC,EAAEN,GAAGG,EAAE4E,KAAK/E,GAAGD,EAAEqpC,WAAW5a,EAAExuB,OAAOwL,EAAE,MAAM,IAAIxL,EAAE,KAAKL,EAAEG,EAAEwU,UAAUxN,EAAE,EAAE9G,GAAGL,GAAG,KAAKA,EAAEg0B,SAASnoB,EAAE7L,EAAEF,eAAe+L,WAAW45B,EAAEplC,UAAUL,SAAI,IAASK,IAAIA,EAAEF,EAAEwU,UAAU80B,IAAInpC,EAAE8E,KAAK/E,GAAGopC,EAAEn2B,EAAE3S,EAAEL,GAAG2C,GAAG0mC,KAAKD,aAAapd,EAAEjsB,GAAGopC,EAAEppC,EAAEM,EAAEL,GAAGA,EAAE,GAAGC,EAAEJ,EAAEuU,QAAQy0B,EAAEM,YAAYC,EAAErpC,SAAS,CAACyJ,KAAKtJ,EAAEglC,OAAOzC,EAAEzT,KAAK,CAACiT,UAAU2G,EAAEY,UAAUX,EAAEnD,QAAQvlC,EAAEspC,YAAY1pC,EAAE4lC,OAAO7lC,GAAGyL,GAAG,cAAc89B,IAAIN,EAAEK,KAAKlpC,EAAE,GAAGuiC,EAAE,YAAYx8B,EAAElG,EAAEwL,EAAE7L,OAAOsT,EAAE,CAACs2B,eAAU,EAAOC,iBAAY,GAAQ3iC,EAAE/G,EAAEuU,QAAQu0B,EAAEp9B,EAAE,MAAMA,EAAExL,GAAGA,EAAE6G,IAAIA,EAAElH,IAAI,IAAIA,GAAG,KAAKoH,EAAEjH,EAAEuU,QAAQw0B,EAAEhiC,OAAO,IAAIE,EAAE,OAAOkM,EAAEpM,EAAEE,IAAIF,EAAE/G,EAAEuU,QAAQu0B,EAAE/hC,EAAE,IAAIoM,EAAE/M,EAAEa,EAAEF,EAAElH,QAAQsT,EAAE,CAACs2B,UAAUvpC,EAAEwpC,YAAYh+B,UAAUyH,IAAIiC,KAAKizB,MAAM,WAAW/nC,GAAE,GAAI8U,KAAKwzB,aAAa,kBAAkBU,YAAYl/B,EAAElK,OAAOwL,EAAExL,EAAEyJ,KAAK9J,EAAEG,EAAE0L,EAAEk2B,UAAUzuB,GAAE,KAAMzH,EAAE/C,MAAM9I,EAAE6hC,UAAUh2B,EAAE/C,MAAM+C,EAAEy4B,WAAW,GAAGz4B,EAAEs6B,SAASt6B,EAAEs6B,QAAQr8B,KAAK,KAAK5C,EAAE,CAACshC,MAAM,WAAWl1B,GAAE,EAAGnM,EAAE0E,EAAEk2B,SAAS,CAACj4B,KAAK,GAAG07B,OAAO,GAAGlW,KAAK,CAAC0W,SAAQ,MAAOgC,MAAMzgC,EAAE0gC,OAAO1gC,MAAM+hB,EAAEtpB,EAAEwhC,UAAU,KAAK,IAAIp6B,EAAE,EAAEA,EAAEyE,EAAEs6B,QAAQr8B,KAAKhK,SAASE,EAAEwhC,SAAS,CAAC13B,KAAK+B,EAAEs6B,QAAQr8B,KAAK1C,GAAGo+B,OAAO35B,EAAEs6B,QAAQX,OAAOlW,KAAKzjB,EAAEs6B,QAAQ7W,MAAMpoB,IAAIoM,GAAGlM,YAAYyE,EAAEs6B,aAAa7c,EAAEtpB,EAAEyhC,aAAazhC,EAAEyhC,UAAU51B,EAAEs6B,QAAQj/B,EAAE2E,EAAEy4B,aAAaz4B,EAAEs6B,SAASt6B,EAAEw6B,WAAW/yB,GAAGnM,EAAE0E,EAAEk2B,SAASl2B,EAAEs6B,kBAAkBh/B,EAAE9G,EAAEwL,OAAO7L,EAAEG,EAAEE,GAAGipB,EAAEtpB,EAAE2hC,eAAe3hC,EAAE2hC,aAAa91B,GAAG7L,EAAEgqC,mBAAmB7pC,EAAEE,YAAYkH,UAAU,IAAI9F,MAAM,6BAA6BgkC,EAAEplC,MAAM,iBAAiBA,GAAG,OAAOA,EAAE,OAAOA,MAAMwL,EAAErK,MAAM5B,QAAQS,GAAG,GAAG,OAAO,IAAIL,KAAKK,EAAEwL,EAAE7L,GAAGylC,EAAEplC,EAAEL,WAAW6L,WAAW4D,EAAEpP,EAAEwL,UAAU,WAAWxL,EAAE2V,MAAMnK,EAAEhG,qBAAqByjB,EAAEjpB,SAAS,mBAAmBA,SAAS4C,IAAI3C,EAAEihC,UAAU,SAASlhC,OAAOwL,EAAExL,EAAEyJ,iBAAcnJ,EAAEylC,WAAWv6B,IAAIlL,EAAEylC,UAAUv6B,EAAEk2B,UAAa,iBAAiBl2B,EAAElM,MAAMW,EAAEmgC,YAAY,CAACsB,SAASphC,EAAEylC,UAAUD,QAAQxlC,EAAEkO,MAAMhD,EAAElM,MAAMkM,EAAEi2B,QAAQuE,UAAS,SAAU,GAAG/lC,EAAE8hC,MAAMv2B,EAAElM,iBAAiByiC,MAAMv2B,EAAElM,iBAAiBP,OAAO,KAAKY,EAAEW,EAAEkO,MAAMhD,EAAElM,MAAMkM,EAAEi2B,QAAQ9hC,GAAGM,EAAEmgC,YAAY,CAACsB,SAASphC,EAAEylC,UAAUD,QAAQnmC,EAAEqmC,UAAS,QAAS5wB,EAAEpW,UAAUD,OAAO6qC,OAAOlH,EAAE1jC,YAAY8D,YAAYsS,GAAG/U,EAAErB,UAAUD,OAAO6qC,OAAOlH,EAAE1jC,YAAY8D,YAAYzC,GAAG0I,EAAE/J,UAAUD,OAAO6qC,OAAO7gC,EAAE/J,YAAY8D,YAAYiG,GAAG7I,EAAElB,UAAUD,OAAO6qC,OAAOlH,EAAE1jC,YAAY8D,YAAY5C,EAAEI,EAAr8kBkL,MCN/H,SAASq+B,GAAmBC,OAC7BrW,EAAQqW,EAAKpW,MAAM,SAAS9kB,OAAQwS,IAAUA,EAAK2oB,MAAM,UAEzD9a,EA8BN,SAAmBwE,OACbxE,EAAO,CAAEqZ,SAAU,GAAI0B,YAAa,QACnC,IAAKrqC,EAAGyhB,KAASqS,EAAMwW,aACtB7oB,EAAK2oB,MAAM,eACb9a,EAAKib,WAAaC,GAAU/oB,QACvB,GAAIA,EAAK2oB,MAAM,eACpB9a,EAAKmb,iBAAmBD,GAAU/oB,QAC7B,GAAIA,EAAK2oB,MAAM,WACpB9a,EAAKob,WAAaF,GAAU/oB,QACvB,GAAIA,EAAK2oB,MAAM,SACpB9a,EAAKqb,OAASjZ,WAAW8Y,GAAU/oB,IACnC6N,EAAKsb,WAAaJ,GAAU/oB,EAAM,QAC7B,GAAIA,EAAK2oB,MAAM,sBACpB9a,EAAKqZ,SAASvjC,KAAKolC,GAAU/oB,SACxB,GAAIA,EAAK2oB,MAAM,WACpB9a,EAAKub,OAASL,GAAU/oB,QACnB,GAAIA,EAAK2oB,MAAM,SACpB9a,EAAKwb,KAAON,GAAU/oB,QACjB,GAAIA,EAAK2oB,MAAM,SACpB9a,EAAKgV,KAAOkG,GAAU/oB,QACjB,GAAIA,EAAK2oB,MAAM,SACpB9a,EAAKyb,KAAOP,GAAU/oB,QACjB,GAAIA,EAAK2oB,MAAM,SACpB9a,EAAKwM,KAAO0O,GAAU/oB,QACjB,GAAIA,EAAK2oB,MAAM,cACpB9a,EAAK+a,YAAYjlC,KAAKolC,GAAU/oB,SAC3B,GAAIA,EAAK2oB,MAAM,aACpB9a,EAAK0b,SAAWR,GAAU/oB,QACrB,GAAIA,EAAK2oB,MAAM,gBACpB9a,EAAK2b,YAAcT,GAAU/oB,QACxB,GAAIA,EAAK2oB,MAAM,aACpB9a,EAAK4b,SAAWV,GAAU/oB,QACrB,GAAIA,EAAK2oB,MAAM,cACpB9a,EAAK6b,UAAYX,GAAU/oB,QACtB,GAAIA,EAAK2oB,MAAM,aACpB9a,EAAK8b,SAAWZ,GAAU/oB,QACrB,GAAIA,EAAK2oB,MAAM,gBAAiB,CACrC9a,EAAK+b,UAAYrrC,EAAI,eAKlBsvB,EAxEIgc,CAAUxX,GACjByX,EAASzX,EACV5yB,MAAMouB,EAAK+b,UAAWvX,EAAMh0B,QAC5BmP,OAAQwS,IAAUA,EAAK+pB,WAAW,MAClC/gC,IAAKgX,GAASA,EAAKsS,MAAM,OAAOtpB,IAAI/I,SAEvC4tB,EAAKmc,iBAAmB,GACxBnc,EAAKoc,gBAAkB,OAEnBv8B,EAAS,CACXmgB,KAAMA,EACNxlB,KAAM,CACJgyB,KAAM,GACN6O,OAAQ,GACRgB,YAAa,YAGjBx8B,EAAOrF,KAAKgyB,KAAOyP,EAAO9gC,IAAKu4B,GAAWA,EAAO,IACjD7zB,EAAOrF,KAAK6hC,YAAcJ,EAAO9gC,IAAKu4B,GAAWA,EAAO,IACxD7zB,EAAOrF,KAAK6gC,OAASY,EAAO9gC,IAAKu4B,GAAWA,EAAO,IACnD7zB,EAAOmgB,KAAKmc,iBAAmBF,EAAO9gC,IAAKu4B,GAAWA,EAAO,IAC7D7zB,EAAOmgB,KAAKoc,gBAAkBH,EAAO9gC,IAAKu4B,GAAWA,EAAO,IAErD7zB,EAGT,SAASq7B,GAAUlK,EAAQsL,EAAO,UACzBtL,EAAOvM,MAAM,MAAM6X,GAAM/b,QAAQ,sBAAuB,wBC9B1D,MACL1sB,mBACO0oC,SAAW,GAGlBC,YAAYC,OACNr5B,EAAQ6C,KAAKy2B,iBAAiBD,EAAS9c,SAC7B1iB,IAAVmG,OACGm5B,SAASzmC,KAAK2mC,QAEdF,SAASn5B,GAASq5B,EAI3BE,YAAY3/B,EAAU,UACd4/B,IAAEA,GAAQ5/B,MACZu/B,EAAW,OACV,MAAME,KAAYx2B,KAAKs2B,SACrBK,IAAOA,EAAItP,SAASmP,EAAS9c,KAChC4c,EAASzmC,KAAK2mC,UAGXF,EAOTM,eAAeld,OACTvc,EAAQ6C,KAAKy2B,iBAAiB/c,WACpB1iB,IAAVmG,SACG6C,KAAKs2B,SAAStpB,OAAO7P,EAAO,GAQrCs5B,iBAAiB/c,MACVA,MACA,IAAIjvB,EAAI,EAAGA,EAAIuV,KAAKs2B,SAAS/rC,OAAQE,IAAK,IAC9BuV,KAAKs2B,SAAS7rC,GAChBivB,KAAOA,EAAI,OAAOjvB,GASnC48B,SAAS3N,UACC5nB,MAAMkO,KAAKy2B,iBAAiB/c,gCC1CjC,SAAmBmd,EAAO9/B,EAAU,QACrCy/B,EAAW,IAAI/c,GAAS1iB,UAK9B,SAAkBy/B,EAAUK,OACtBC,EX2BS,SAAiBD,EAAO9/B,EAAU,KAC/CA,EAAUlN,OAAOwsB,OAAO,GAAID,GAAgBrf,IACpCixB,QAAUjxB,EAAQsyB,UAC1BtyB,EAAQzE,MAAQk0B,KAAKC,UAEjBI,EAAc,GAEdjtB,EAAS,CACXysB,YAAWtvB,EAAQsvB,WAAY,GAC/B3H,KAAM,GACNqW,QAAS,IAGPgC,EAAY,CAAEC,SAAU,IACxB7O,EAAe4O,EACfE,EAAe,GAEfpc,EAAW,IAAImO,MAEE,iBAAV6N,QACH,IAAIvsC,UAAU,gCAGtB+7B,GAAUzsB,EAAQ,uBAAwB7C,OAEtCmgC,EAAOL,EAAMvc,QAAQ,aAAc,QAAQkE,MAAM,QAErD6H,GAAUzsB,EAAQ,gBAAiB7C,GAE/BmgC,EAAK,KAAIA,EAAK,GAAKA,EAAK,GAAG5c,QAAQ,cAAe,SAEjD,IAAI6c,KAAOD,EAAM,KAEhBj6B,EAAWk6B,EAAIh4B,QAAQ,KACvBi4B,EAAYn6B,EAAW,EAAIk6B,EAAI/3B,UAAU,EAAGnC,GAAYk6B,EACxDE,EAAYp6B,EAAW,EAAIk6B,EAAI/3B,UAAUnC,EAAW,GAAGwhB,OAAS,GAEhEpC,EAAmB+a,EAAU9c,QAAQ,SAAU,IAAI8M,iBAE9B,cAArB/K,EAAkC,KAChCc,EAAUka,EAAUl4B,QAAQ,UACf,IAAbge,IAAgBA,EAAUka,EAAUl4B,QAAQ,OAC5Cge,EAAU,EAAG,KAIXma,EAAQD,EAAUj4B,UAAU,EAAG+d,GAASqB,MAAM,YAClD0J,GAAwBC,EAActN,EAAUyc,EAAM,IAEtDzc,EAAS0c,UAAYD,EAAM,GACvBA,EAAM,IAAMA,EAAM,GAAGn4B,QAAQ,UAAY,EAC3Ckd,EAAmB,YAEnBib,EAAM,KACLA,EAAM,GAAGn4B,QAAQ,WAAam4B,EAAM,GAAGn4B,QAAQ,MAAQ,KAExDkd,EAAmB,SACnBxB,EAAS8B,QACN9B,EAAS0E,MAAQ1E,EAASmC,SAAWnC,EAAS8N,SAAW,QAKzC,WAArBtM,EAkBG,GAAyB,cAArBA,KASc,oBAArBA,MAYqB,UAArBA,EAA8B,KAC5Bmb,EAAcrP,EACbqP,EAAYR,WACfQ,EAAYR,SAAW,IAEzB7O,EAAe,CACbvO,QAAS,GACTqN,QAAS,GACT6C,KAAM,GACN/P,KAAM,IAERyd,EAAYR,SAASnnC,KAAKs4B,GAC1B8O,EAAapnC,KAAK2nC,GAClB3Q,EAAYh3B,KAAKs4B,GACjBA,EAAalO,MAAQod,MACS,aAArBhb,GACT8L,EAAanO,SAAWqd,EACpBA,EAAUhgC,cAAc8H,QAAQ,OAAS,IAC3CgpB,EAAaJ,MAAO,IAEQ,YAArB1L,EACLgb,EAAUhgC,cAAc8H,QAAQ,OAAS,IAC3CgpB,EAAaJ,MAAO,GAEQ,cAArB1L,EACT8L,EAAasP,UAAYJ,EACK,WAArBhb,EACTxB,EAASsM,OAASkQ,EACY,WAArBhb,EACTxB,EAASgO,OAASwO,EACY,WAArBhb,EACTxB,EAASmC,OAASb,WAAWkb,GACC,UAArBhb,EACTxB,EAAS0E,MAAQpD,WAAWkb,GACE,WAArBhb,EACTxB,EAASqC,OAASf,WAAWkb,GACC,UAArBhb,EACTxB,EAAS2E,MAAQrD,WAAWkb,GACE,YAArBhb,EACTxB,EAAS8N,SAAWxM,WAAWkb,GACD,YAArBhb,EACTxB,EAAS+D,QAAUzC,WAAWkb,GACA,YAArBhb,EACTxB,EAAS6B,QAAUP,WAAWkb,GACA,SAArBhb,EACTxB,EAAS6E,KAAOvD,WAAWkb,GACG,SAArBhb,EACTxB,EAAS4E,KAAOtD,WAAWkb,GACG,SAArBhb,EACTxB,EAAS+E,KAAOzD,WAAWkb,GACG,SAArBhb,EACTxB,EAAS8E,KAAOxD,WAAWkb,GACG,WAArBhb,EACTxB,EAAS8B,OAASR,WAAWkb,GAER,sBAArBhb,GACqB,UAArBA,EAEKxB,EAASiM,mBACZjM,EAASiM,iBAAmB3K,WAAWkb,IAEX,oBAArBhb,EACJxB,EAAS6c,QACZvP,EAAauP,MAAQL,EAAU/c,QAAQ,gBAAiB,KAE5B,YAArB+B,GAET8L,EAAawP,eAAiB,EACzB9c,EAASkM,iBACZlM,EAASkM,eAAiB5K,WAAWkb,KAET,oBAArBhb,IAOqB,YAArBA,EACT8L,EAAalB,QAAQ2B,QAAUyO,EAAU7Y,MAAMuK,IACjB,WAArB1M,EACT8L,EAAalB,QAAQC,OAASmQ,EAAU7Y,MAAMuK,IAChB,YAArB1M,EACT8L,EAAalB,QAAQ2Q,QAAUP,EAAU7Y,MAAMuK,IACjB,YAArB1M,EACT8L,EAAalB,QAAQ4Q,QAAUR,EAAU7Y,MAAMuK,IACjB,WAArB1M,EACT8L,EAAalB,QAAQyB,OAASpM,GAC5B+a,EAAU7Y,MAAMuK,KAEY,UAArB1M,EACT8L,EAAalB,QAAQ5M,MAAQgd,EAAU7Y,MAAMuK,IACf,WAArB1M,EACT8L,EAAalB,QAAQxvB,OAAS6kB,GAC5B+a,EAAU7Y,MAAMuK,KAEY,UAArB1M,EACT8L,EAAalB,QAAQhe,MAAQqT,GAC3B+a,EAAU7Y,MAAMuK,KAEY,SAArB1M,EACT8L,EAAalB,QAAQ/d,KAAOoT,GAC1B+a,EAAU7Y,MAAMuK,KAEY,QAArB1M,EACT8L,EAAalB,QAAQ98B,IAAMmyB,GACzB+a,EAAU7Y,MAAMuK,KAEY,QAArB1M,EACT8L,EAAalB,QAAQv8B,IAAM4xB,GACzB+a,EAAU7Y,MAAMuK,KAEY,aAArB1M,GACL8L,EAAalB,UACfkB,EAAalB,QAAQK,QAAU+P,EAAU7Y,MAAMuK,KAE7CZ,EAAaJ,OACfI,EAAa2P,MAAQT,EAAU7Y,MAAMuK,IAAkB,KAE3B,SAArB1M,GACTxB,EAASkd,KAAOV,EAAU5Y,OAC1B5D,EAASqB,UAAYC,WAAWkb,EAAU/c,QAAQ,OAAQ,KAC1DO,EAAS4M,WAAa5M,EAASkd,KAAKzd,QAAQ,QAAS,KACvB,kBAArB+B,EACTxB,EAASqB,UAAYC,WAAWkb,GACvBjb,GAAUC,GACnBxB,EAASoB,GAAsBI,IAAqBgb,EACtB,sBAArBhb,EACTxB,EAASmd,kBAAoBX,EACC,QAArBhb,IACT8L,EAAe8O,EAAapiC,WAI5BszB,GACAA,EAAa2B,MACb3B,EAAapO,MACbsC,EAAiBwY,MAAM99B,EAAQkyB,mBAC/B,KAEIuJ,EAAQ7Y,EADR/sB,EAAQyqC,EAAU5Y,UAElB2Y,EAAUnB,WAAW,MACvBtc,EAAQ5iB,EAAQoyB,sBACZ9M,EAAiBjd,UAAU,GAC3Bg4B,EAAUh4B,UAAU,GACxBozB,EAASrK,EAAapO,OAEtBJ,EAAQ5iB,EAAQmyB,kBAAoB7M,EAAmB+a,EACvD5E,EAASrK,EAAa2B,MAGpB/yB,EAAQqyB,cAAe,KACrB6O,EAAc9rC,OAAOgwB,WAAWvvB,GAC/BT,OAAO2F,MAAMmmC,KAAcrrC,EAAQqrC,GAEtCzF,EAAO7Y,IACJ1tB,MAAM5B,QAAQmoC,EAAO7Y,MACxB6Y,EAAO7Y,GAAS,CAAC6Y,EAAO7Y,KAE1B6Y,EAAO7Y,GAAO9pB,KAAKjD,IAEnB4lC,EAAO7Y,GAAS/sB,QA5KdmK,EAAQixB,SACNqP,EAAUxC,MAAM,cAElB/V,GAASjE,EAAUwc,GAErBlP,EAAavO,QAAQ/pB,KAAKgrB,GAC1BA,EAAW,IAAImO,SAfbjyB,EAAQixB,SACVc,GAAgBjO,GAChBuD,GAAevD,EAAUwc,EAAWz9B,GACpCuuB,EAAavO,QAAQ/pB,KAAKgrB,GAC1BA,EAAW,IAAImO,SAtBbjyB,EAAQixB,SACVc,GAAgBjO,GAEZwc,EAAUxC,MAAM,aAEbha,EAAS8B,SACZ9B,EAAS8B,QACN9B,EAAS0E,MAAQ1E,EAASmC,SAAWnC,EAAS8N,SAAW,IAE9DlM,GAAgB5B,EAAUwc,IAE1BjZ,GAAevD,EAAUwc,EAAWz9B,GAEtCuuB,EAAavO,QAAQ/pB,KAAKgrB,GAC1BA,EAAW,IAAImO,WA8LrB3C,GAAUzsB,EAAQ,mBAAoB7C,GAEtC6vB,GAAeC,EAAajtB,EAAQ7C,GAEpCsvB,GAAUzsB,EAAQ,aAAc7C,GAOhC6C,EAAOm7B,QAAUgC,EAAUC,SAC3Bp9B,EAAOs+B,QAAUrR,EAEVjtB,EWrTSu+B,CAAQtB,EAAO,CAC7B5N,kBAAmB,WAGhB,IAAIjC,KAAS8P,EAAUoB,QAAS,KAC/BE,EAAkBpR,EAAMpN,QAAQ,MAG/Bwe,EAAgBte,cAcd,IAAItpB,KAAO4nC,EAAgBte,UAAW,OACnCM,EAAWge,EAAgBte,UAAUtpB,GACvC4pB,EAAST,QACbS,EAAST,MAAQS,EAASrqB,MAAQqqB,EAAS8M,QAAU12B,EACjD4pB,EAASC,QAAUD,EAAST,MAAM0N,SAASjN,EAASC,SACtDD,EAAST,mBAAcS,EAASC,iBAnBN,OACxBP,EAAY,GAClBse,EAAgBte,UAAYA,EAC5BA,EAAU9oB,EAAI,CACZ2oB,MAAOye,EAAgBjR,OACvBD,OAAQ,IACR3yB,KAAM6jC,EAAgB7jC,KAAKvD,GAAKonC,EAAgB7jC,KAAKme,GAEvDoH,EAAU5f,EAAI,CACZyf,MAAOye,EAAgBvP,OACvB3B,OAAQ,IACR3yB,KAAM6jC,EAAgB7jC,KAAK2F,GAAKk+B,EAAgB7jC,KAAK4gB,GAazDqhB,EAAS3c,aAAaue,EAAgBte,UAAW,CAC/CE,SAAUgN,EAAMhN,SAChBC,MAAO+M,EAAM/M,MACbF,KAAMiN,EAAMjN,QAxChBse,CAAS7B,EAAUK,GACZL,qBCNF,SAAyB5B,OAC1B4B,EAAW,IAAI/c,GACfoB,ELXC,SAA0B+Z,OAC3BrW,EAAQqW,EAAKpW,MAAM,WACnB5kB,EAAS,CAAEmgB,KAAM,GAAIxlB,KAAM,CAAEgyB,KAAM,GAAI6O,OAAQ,GAAIgB,YAAa,KAChEkC,EAAU,GACVC,GAAgB,MACf,IAAIrsB,KAAQqS,EAAO,IAClBga,EACErsB,EAAK+pB,WAAW,UAClBsC,GAAgB,GAEX3+B,EAAOmgB,KAAK,kBAAiBngB,EAAOmgB,KAAK,gBAAkB,IAChEngB,EAAOmgB,KAAK,2BAAsB7N,EAAKoO,QAAQ,MAAO,kBAEnD,GAAIpO,EAAK2oB,MAAM,iBACpByD,EAAU7Z,GAAKvS,QACV,GAAIA,EAAK2oB,MAAM,SAAU,KAC1B53B,EAAWiP,EAAK/M,QAAQ,KACxBq5B,EAActsB,EAAK9M,UAAU,EAAGnC,GAChCrQ,EAAQ6xB,GAAKvS,EAAK9M,UAAUnC,EAAW,IAC3CrD,EAAOmgB,MAAMue,YAAaA,OAAa,IAAME,GAAe5rC,OACvD,GAAIsf,EAAK2oB,MAAM,gBAAiB,KACjCpH,EAASvhB,EAAKoO,QAAQ,MAAO,IAAIkE,MAAM,MAC3C5kB,EAAOrF,KAAKgyB,KAAK12B,KAAK1D,OAAmB,GAAZshC,EAAO,KACpC7zB,EAAOrF,KAAK6gC,OAAOvlC,KAAK1D,OAAOshC,EAAO,KACtC7zB,EAAOrF,KAAK6hC,YAAYvmC,KAAK1D,OAAOshC,EAAO,KAIzCvhB,EAAK+pB,WAAW,mBAClBsC,GAAgB,UAGb3+B,EKrBQ6+B,CAAiB7D,UAEhC4B,EAAS3c,aACP,CACE7oB,EAAG,CACDuD,KAAMsmB,EAAStmB,KAAK6hC,YACpBzc,MAAO,oBAETzf,EAAG,CACD3F,KAAMsmB,EAAStmB,KAAK6gC,OACpBzb,MAAO,gBAGX,CACEK,SAAU,MACVC,MAAOY,EAASd,KAAK,aACrBA,KAAMc,EAASd,OAGnByc,EAAS3c,aACP,CACE7oB,EAAG,CACDuD,KAAMsmB,EAAStmB,KAAKgyB,KACpB5M,MAAO,YAETzf,EAAG,CACD3F,KAAMsmB,EAAStmB,KAAK6gC,OACpBzb,MAAO,gBAGX,CACEK,SAAU,MACVC,MAAOY,EAASd,KAAK,aACrBA,KAAMc,EAASd,OAGZyc,wBCtCF,SAA4B5B,OAC7BoB,EAAS0C,GAAKp/B,MAAMs7B,EAAM,CAC5BzH,gBAAgB,EAChB9C,QAAQ,EACRjB,eAAe,IACd70B,KAECiiC,EAAW,IAAI/c,UACnB+c,EAAS3c,aACP,CACE7oB,EAAG,CACDuD,KAAMyhC,EAAO9gC,IAAKrK,GAAMA,EAAE,wBAC1B8uB,MAAO,4BAETzf,EAAG,CACD3F,KAAMyhC,EAAO9gC,IAAKrK,GAAMA,EAAE,wBAC1B8uB,MAAO,eAETrjB,EAAG,CACD/B,KAAMyhC,EAAO9gC,IAAKrK,GAAMA,EAAE,uBAC1B8uB,MAAO,4BAGX,CAAEK,SAAU,QAGdwc,EAAS3c,aACP,CACE7oB,EAAG,CAAEuD,KAAMyhC,EAAO9gC,IAAKrK,GAAMA,EAAE8tC,MAAOhf,MAAO,YAC7Czf,EAAG,CACD3F,KAAMyhC,EAAO9gC,IAAKrK,GAAMA,EAAE,wBAC1B8uB,MAAO,gBAGX,CAAEK,SAAU,QAEPwc,uBCzCF,SAA2B5B,OAC5B4B,EAAW,IAAI/c,GACfuc,EAASrB,GAAmBC,UAEhC4B,EAAS3c,aACP,CACE7oB,EAAG,CACDuD,KAAMyhC,EAAOzhC,KAAK6hC,YAClBzc,MAAO,4BAETzf,EAAG,CACD3F,KAAMyhC,EAAOzhC,KAAK6gC,OAClBzb,MAAO,gBAGX,CAAEK,SAAU,MAAOC,MAAO+b,EAAOjc,KAAKob,WAAYpb,KAAMic,EAAOjc,OAGjEyc,EAAS3c,aACP,CACE7oB,EAAG,CACDuD,KAAMyhC,EAAOzhC,KAAKgyB,KAClB5M,MAAO,YAETzf,EAAG,CACD3F,KAAMyhC,EAAOzhC,KAAK6gC,OAClBzb,MAAO,gBAGX,CACEK,SAAU,MACVC,MAAO+b,EAAOjc,KAAKob,WACnBpb,KAAMic,EAAOjc,OAIVyc,gBC7BF,SAAoBF,EAAUv/B,EAAU,UACvC6hC,OAAEA,EAAShP,GAAXjP,SAAmBA,EAAnBI,cAA6BA,GAAkBhkB,MACjD8kB,EAAS,GAEToO,EAAS,GACTC,EAAS,OAER,IAAIz/B,EAAI,EAAGA,EAAI6rC,EAAS/rC,OAAQE,IAAK,OAClC+rC,EAAWF,EAAS7rC,OACtB8+B,EAAQ,GACR1M,EAAc2Z,EAAS1b,kBAAkB,CAC3CH,SAAAA,EACAI,cAAAA,IAEG8B,IACAoN,IAAQA,EAASuM,EAASjb,UAAUZ,IACpCuP,IAAQA,EAASsM,EAAShb,UAAUb,IACzC2O,GAASC,EAAOiN,EAAU,CAAEhN,MAAOoP,EAAOnuC,KAC1C8+B,EAAMh1B,KAAOsoB,EACbhB,EAAOhsB,KAAK05B,UAEP,CACLsP,KAAM,CACJ7nC,EAAG,CACD2oB,MAAOsQ,EACP1C,KAAM,GACNuR,kBAAmB,GACnBC,iBAAkB,GAClBC,SAAS,EACTC,SAAS,GAEX/+B,EAAG,CACDyf,MAAOuQ,EACP3C,KAAM,GACNuR,kBAAmB,GACnBC,iBAAkB,GAClBC,SAAS,EACTC,SAAS,IAGbpd,OAAAA,kCCnDG,SAAqCniB,EAAS,GAAIw/B,OACnD3+B,WAAEA,EAAa,IAAOb,EACtBy/B,EAAc,UAClB5+B,EAAaA,EAAWb,OAAQc,IAAeA,EAAU4+B,QACzDD,EAAc5+B,EAAWrF,IAAKsF,IACX,CACf8J,KAAM,OACNrH,SAAU,CACR,CAAEjM,EAAGwJ,EAAU5B,KAAMsB,EAAGg/B,EAASh/B,EAAE/P,KACnC,CAAE6G,EAAGwJ,EAAU1B,GAAIoB,EAAGg/B,EAASh/B,EAAExP,MAEnC2uC,YAAa,EACbC,UAAW,8BAIKtiC,IAAhB0C,EAAOd,MACTugC,EAAYtpC,KAAK,CACfyU,KAAM,OACNrH,SAAU,CACR,CAAEjM,EAAG7E,OAAOotC,iBAAkBr/B,EAAGg/B,EAASh/B,EAAE/P,KAC5C,CAAE6G,EAAG0I,EAAOd,KAAMsB,EAAGg/B,EAASh/B,EAAExP,MAElC2uC,YAAa,EACbC,UAAW,6BAGGtiC,IAAd0C,EAAOZ,IACTqgC,EAAYtpC,KAAK,CACfyU,KAAM,OACNrH,SAAU,CACR,CAAEjM,EAAG0I,EAAOZ,GAAIoB,EAAGg/B,EAASh/B,EAAE/P,KAC9B,CAAE6G,EAAG7E,OAAOqtC,iBAAkBt/B,EAAGg/B,EAASh/B,EAAExP,MAE9C2uC,YAAa,EACbC,UAAW,wBAGRH,aVpCF,SAAiB3C,EAAUz/B,EAAU,QACtC0iC,EAAS,OACR,IAAI5e,KAAY2b,EAAS5c,QAC5B6f,EAAO5pC,KAAKi7B,GAASjQ,EAAU9jB,WAE1B0iC,EAAOttB,KAAK"}