{"version":3,"file":"tga-spectrum.min.js","sources":["../node_modules/common-spectrum/node_modules/is-any-array/src/index.js","../node_modules/is-any-array/src/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-normed/node_modules/is-any-array/src/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-filter-x/src/index.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/views/base.js","../node_modules/ml-matrix/src/views/transpose.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/ml-pad-array/src/index.js","../node_modules/ml-savitzky-golay/src/index.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/ml-spectra-processing/src/x/xAdd.js","../node_modules/ml-spectra-processing/src/x/xMultiply.js","../node_modules/ml-spectra-processing/src/x/xDivide.js","../node_modules/object-keys/isArguments.js","../node_modules/object-keys/implementation.js","../node_modules/object-keys/index.js","../node_modules/utils-copy/lib/typedarrays.js","../node_modules/utils-copy-error/lib/copy.js","../node_modules/d3-array/build/d3-array.js","../node_modules/ml-spectra-processing/src/x/xSubtract.js","../node_modules/ml-stat/array.js","../node_modules/common-spectrum/src/Analysis.js","../node_modules/common-spectrum/src/util/getNormalizedData.js","../node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/jcampconverter/src/2d/add2D.js","../node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/ml-fft/src/fftlib.js","../node_modules/ml-stat/matrix.js","../node_modules/ml-matrix-convolution/node_modules/ml-fft/src/fftlib.js","../node_modules/nmr-processing/src/constants/gyromagneticRatio.js","../node_modules/jcampconverter/src/profiling.js","../node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/jcampconverter/src/postProcessing.js","../node_modules/jcampconverter/src/postProcessingNMR.js","../node_modules/jcampconverter/src/prepareNtuplesDatatable.js","../node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/jcampconverter/src/convert.js","../node_modules/common-spectrum/src/jsgraph/addStyle.js","../node_modules/common-spectrum/src/jsgraph/colors.js","../node_modules/convert-to-jcamp/src/fromVariables.js","../node_modules/convert-to-jcamp/src/fromJSON.js","../node_modules/convert-to-jcamp/src/creatorNtuples.js","../node_modules/common-spectrum/src/to/toJcamp.js","../src/from/parsePerkinElmer.js","../node_modules/papaparse/papaparse.min.js","../node_modules/common-spectrum/src/AnalysesManager.js","../node_modules/common-spectrum/src/from/fromJcamp.js","../src/from/fromPerkinElmer.js","../src/from/fromPerkinElmerCSV.js","../node_modules/common-spectrum/src/jsgraph/getJSGraph.js","../node_modules/common-spectrum/src/jsgraph/getNormalizationAnnotations.js"],"sourcesContent":["const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @param {number} [options.maxValue=1] new max value for algo max\n * @param {number} [options.sumValue=1] new max value for algo absolute and sum\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","export function inspectMatrix() {\n  const indent = ' '.repeat(2);\n  const indentData = ' '.repeat(4);\n  return `${this.constructor.name} {\n${indent}[\n${indentData}${inspectData(this, indentData)}\n${indent}]\n${indent}rows: ${this.rows}\n${indent}columns: ${this.columns}\n}`;\n}\n\nconst maxRows = 15;\nconst maxColumns = 10;\nconst maxNumSize = 8;\n\nfunction inspectData(matrix, indent) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j)));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indent}`);\n}\n\nfunction formatNumber(num) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.substring(eIndex);\n  return exponential.substring(0, maxNumSize - e.length) + e;\n}\n","import rescale from 'ml-array-rescale';\n\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport { inspectMatrix } from './inspect';\nimport { installMathOperations } from './mathOperations';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","'use strict';\n\nvar defaultOptions = {\n  size: 1,\n  value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n  var len = data.length;\n  if (typeof options.size === 'number') {\n    options.size = [options.size, options.size];\n  }\n\n  var cond = len + options.size[0] + options.size[1];\n\n  var output;\n  if (options.output) {\n    if (options.output.length !== cond) {\n      throw new RangeError('Wrong output size');\n    }\n    output = options.output;\n  } else {\n    output = new Array(cond);\n  }\n\n  var i;\n  if (options.value === 'circular') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) {\n        output[i] = data[(len - (options.size[0] % len) + i) % len];\n      } else if (i < options.size[0] + len) {\n        output[i] = data[i - options.size[0]];\n      } else {\n        output[i] = data[(i - options.size[0]) % len];\n      }\n    }\n  } else if (options.value === 'replicate') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[0];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[len - 1];\n    }\n  } else if (options.value === 'symmetric') {\n    if (options.size[0] > len || options.size[1] > len) {\n      throw new RangeError(\n        'expanded value should not be bigger than the data length'\n      );\n    }\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[options.size[0] - 1 - i];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[2 * len + options.size[0] - i - 1];\n    }\n  } else {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = options.value;\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = options.value;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n  // var row = data.length;\n  // var col = data[0].length;\n  if (options.size[0] === undefined) {\n    options.size = [options.size, options.size, options.size, options.size];\n  }\n  throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray(data, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (Array.isArray(data)) {\n    if (Array.isArray(data[0])) return matrixCase(data, options);\n    else return arrayCase(data, options);\n  } else {\n    throw new TypeError('data should be an array');\n  }\n}\n\nmodule.exports = padArray;\n","import { Matrix, MatrixTransposeView, inverse } from 'ml-matrix';\nimport padArray from 'ml-pad-array';\n\n/**\n * Factorial of a number\n * @ignore\n * @param n\n * @return {number}\n */\nfunction factorial(n) {\n  let r = 1;\n  while (n > 0) r *= n--;\n  return r;\n}\n\nconst defaultOptions = {\n  windowSize: 5,\n  derivative: 1,\n  polynomial: 2,\n  pad: 'none',\n  padValue: 'replicate',\n};\n\n/**\n * Savitzky-Golay filter\n * @param {Array <number>} data\n * @param {number} h\n * @param {Object} options\n * @returns {Array}\n */\nexport default function savitzkyGolay(data, h, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (\n    options.windowSize % 2 === 0 ||\n    options.windowSize < 5 ||\n    !Number.isInteger(options.windowSize)\n  ) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (options.derivative < 0 || !Number.isInteger(options.derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (options.polynomial < 1 || !Number.isInteger(options.polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n\n  let C, norm;\n  let step = Math.floor(options.windowSize / 2);\n\n  if (options.pad === 'pre') {\n    data = padArray(data, { size: step, value: options.padValue });\n  }\n\n  let ans = new Array(data.length - 2 * step);\n\n  if (\n    options.windowSize === 5 &&\n    options.polynomial === 2 &&\n    (options.derivative === 1 || options.derivative === 2)\n  ) {\n    if (options.derivative === 1) {\n      C = [-2, -1, 0, 1, 2];\n      norm = 10;\n    } else {\n      C = [2, -1, -2, -1, 2];\n      norm = 7;\n    }\n  } else {\n    let J = Matrix.ones(options.windowSize, options.polynomial + 1);\n    let inic = -(options.windowSize - 1) / 2;\n    for (let i = 0; i < J.rows; i++) {\n      for (let j = 0; j < J.columns; j++) {\n        if (inic + 1 !== 0 || j !== 0) J.set(i, j, Math.pow(inic + i, j));\n      }\n    }\n    let Jtranspose = new MatrixTransposeView(J);\n    let Jinv = inverse(Jtranspose.mmul(J));\n    C = Jinv.mmul(Jtranspose);\n    C = C.getRow(options.derivative);\n    norm = 1 / factorial(options.derivative);\n  }\n  let det = norm * Math.pow(h, options.derivative);\n  for (let k = step; k < data.length - step; k++) {\n    let d = 0;\n    for (let l = 0; l < C.length; l++) d += (C[l] * data[l + k - step]) / det;\n    ans[k - step] = d;\n  }\n\n  if (options.pad === 'post') {\n    ans = padArray(ans, { size: step, value: options.padValue });\n  }\n\n  return ans;\n}\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","/**\n\n/**\n * This function xAdd the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xAdd(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n\n/**\n * This function xMultiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Float64Array}\n */\nexport function xMultiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Float64Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array<Number>} array1 - the array that will be rotated\n * @param {Array<Number>|Number} array2\n * @return {Array}\n */\nexport function xDivide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\n// MODULES //\n\nvar objectKeys = require( 'object-keys' );\n\n\n// TYPED ARRAY FUNCTIONS //\n\n/**\n* Create functions for copying typed arrays.\n*/\nvar typedArrays = {\n\t'Int8Array': null,\n\t'Uint8Array': null,\n\t'Uint8ClampedArray': null,\n\t'Int16Array': null,\n\t'Uint16Array': null,\n\t'Int32Array': null,\n\t'Uint32Array': null,\n\t'Float32Array': null,\n\t'Float64Array': null\n};\n\n(function createTypedArrayFcns() {\n\t/* jshint evil:true */\n\tvar keys = objectKeys( typedArrays );\n\tvar len = keys.length;\n\tvar key;\n\tvar i;\n\tfor ( i = 0; i < len; i++ ) {\n\t\tkey = keys[ i ];\n\t\ttypedArrays[ key ] = new Function( 'arr', 'return new '+key+'( arr );' );\n\t}\n})();\n\n\n// EXPORTS //\n\nmodule.exports = typedArrays;\n","'use strict';\n\n// MODULES //\n\nvar deepCopy = require( 'utils-copy' );\nvar getKeys = require( 'object-keys' ).shim();\n\n\n// COPY ERROR //\n\n/**\n* FUNCTION: copy( error )\n*\tCopies an error.\n*\n* @param {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error - error to copy\n* @returns {Error|TypeError|SyntaxError|URIError|ReferenceError|RangeError|RangeError|EvalError} error copy\n*/\nfunction copy( error ) {\n\t/* jshint newcap:false */\n\tvar keys;\n\tvar desc;\n\tvar key;\n\tvar err;\n\tvar i;\n\tif ( !( error instanceof Error ) ) {\n\t\tthrow new TypeError( 'invalid input argument. Must provide an error object. Value: `' + error + '`.' );\n\t}\n\t// Create a new error...\n\terr = new error.constructor( error.message );\n\n\t// If a `stack` property is present, copy it over...\n\tif ( error.stack ) {\n\t\terr.stack = error.stack;\n\t}\n\t// Node.js specific (system errors)...\n\tif ( error.code ) {\n\t\terr.code = error.code;\n\t}\n\tif ( error.errno ) {\n\t\terr.errno = error.errno;\n\t}\n\tif ( error.syscall ) {\n\t\terr.syscall = error.syscall;\n\t}\n\t// Any enumerable properties...\n\tkeys = getKeys( error );\n\tfor ( i = 0; i < keys.length; i++ ) {\n\t\tkey = keys[ i ];\n\t\tdesc = Object.getOwnPropertyDescriptor( error, key );\n\t\tif ( desc.hasOwnProperty( 'value' ) ) {\n\t\t\tdesc.value = deepCopy( error[ key ] );\n\t\t}\n\t\tObject.defineProperty( err, key, desc );\n\t}\n\treturn err;\n} // end FUNCTION copy()\n\n\n// EXPORTS //\n\nmodule.exports = copy;\n","(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (factory((global.d3_array = {})));\n}(this, function (exports) { 'use strict';\n\n  function ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n\n  function bisector(compare) {\n    if (compare.length === 1) compare = ascendingComparator(compare);\n    return {\n      left: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1;\n          else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (lo == null) lo = 0;\n        if (hi == null) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid;\n          else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n\n  function ascendingComparator(f) {\n    return function(d, x) {\n      return ascending(f(d), x);\n    };\n  }\n\n  var ascendingBisect = bisector(ascending);\n  var bisectRight = ascendingBisect.right;\n  var bisectLeft = ascendingBisect.left;\n\n  function descending(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  }\n\n  function number$1(x) {\n    return x === null ? NaN : +x;\n  }\n\n  function variance(array, f) {\n    var n = array.length,\n        m = 0,\n        a,\n        d,\n        s = 0,\n        i = -1,\n        j = 0;\n\n    if (f == null) {\n      while (++i < n) {\n        if (!isNaN(a = number$1(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    else {\n      while (++i < n) {\n        if (!isNaN(a = number$1(f(array[i], i, array)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n\n    if (j > 1) return s / (j - 1);\n  }\n\n  function deviation(array, f) {\n    var v = variance(array, f);\n    return v ? Math.sqrt(v) : v;\n  }\n\n  function extent(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b,\n        c;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = c = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n\n    return [a, c];\n  }\n\n  function constant(x) {\n    return function() {\n      return x;\n    };\n  }\n\n  function identity(x) {\n    return x;\n  }\n\n  function range(start, stop, step) {\n    start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n    var i = -1,\n        n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n        range = new Array(n);\n\n    while (++i < n) {\n      range[i] = start + i * step;\n    }\n\n    return range;\n  }\n\n  var e10 = Math.sqrt(50);\n  var e5 = Math.sqrt(10);\n  var e2 = Math.sqrt(2);\n  function ticks(start, stop, count) {\n    var step = tickStep(start, stop, count);\n    return range(\n      Math.ceil(start / step) * step,\n      Math.floor(stop / step) * step + step / 2, // inclusive\n      step\n    );\n  }\n\n  function tickStep(start, stop, count) {\n    var step0 = Math.abs(stop - start) / Math.max(0, count),\n        step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n        error = step0 / step1;\n    if (error >= e10) step1 *= 10;\n    else if (error >= e5) step1 *= 5;\n    else if (error >= e2) step1 *= 2;\n    return stop < start ? -step1 : step1;\n  }\n\n  function sturges(values) {\n    return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n  }\n\n  function number(x) {\n    return +x;\n  }\n\n  function histogram() {\n    var value = identity,\n        domain = extent,\n        threshold = sturges;\n\n    function histogram(data) {\n      var i,\n          n = data.length,\n          x,\n          values = new Array(n);\n\n      // Coerce values to numbers.\n      for (i = 0; i < n; ++i) {\n        values[i] = +value(data[i], i, data);\n      }\n\n      var xz = domain(values),\n          x0 = +xz[0],\n          x1 = +xz[1],\n          tz = threshold(values, x0, x1);\n\n      // Convert number of thresholds into uniform thresholds.\n      if (!Array.isArray(tz)) tz = ticks(x0, x1, +tz);\n\n      // Coerce thresholds to numbers, ignoring any outside the domain.\n      var m = tz.length;\n      for (i = 0; i < m; ++i) tz[i] = +tz[i];\n      while (tz[0] <= x0) tz.shift(), --m;\n      while (tz[m - 1] >= x1) tz.pop(), --m;\n\n      var bins = new Array(m + 1),\n          bin;\n\n      // Initialize bins.\n      for (i = 0; i <= m; ++i) {\n        bin = bins[i] = [];\n        bin.x0 = i > 0 ? tz[i - 1] : x0;\n        bin.x1 = i < m ? tz[i] : x1;\n      }\n\n      // Assign data to bins by value, ignoring any outside the domain.\n      for (i = 0; i < n; ++i) {\n        x = values[i];\n        if (x0 <= x && x <= x1) {\n          bins[bisectRight(tz, x, 0, m)].push(data[i]);\n        }\n      }\n\n      return bins;\n    }\n\n    histogram.value = function(_) {\n      return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), histogram) : value;\n    };\n\n    histogram.domain = function(_) {\n      return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), histogram) : domain;\n    };\n\n    histogram.thresholds = function(_) {\n      if (!arguments.length) return threshold;\n      threshold = typeof _ === \"function\" ? _\n          : Array.isArray(_) ? constant(Array.prototype.map.call(_, number))\n          : constant(+_);\n      return histogram;\n    };\n\n    return histogram;\n  }\n\n  function quantile(array, p, f) {\n    if (f == null) f = number$1;\n    if (!(n = array.length)) return;\n    if ((p = +p) <= 0 || n < 2) return +f(array[0], 0, array);\n    if (p >= 1) return +f(array[n - 1], n - 1, array);\n    var n,\n        h = (n - 1) * p,\n        i = Math.floor(h),\n        a = +f(array[i], i, array),\n        b = +f(array[i + 1], i + 1, array);\n    return a + (b - a) * (h - i);\n  }\n\n  function freedmanDiaconis(values, min, max) {\n    values.sort(ascending);\n    return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function scott(values, min, max) {\n    return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n  }\n\n  function max(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b > a) a = b;\n    }\n\n    return a;\n  }\n\n  function mean(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1,\n        j = n;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) s += a; else --j;\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) s += a; else --j;\n    }\n\n    if (j) return s / j;\n  }\n\n  function median(array, f) {\n    var numbers = [],\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (!isNaN(a = number$1(array[i]))) numbers.push(a);\n    }\n\n    else {\n      while (++i < n) if (!isNaN(a = number$1(f(array[i], i, array)))) numbers.push(a);\n    }\n\n    return quantile(numbers.sort(ascending), 0.5);\n  }\n\n  function merge(arrays) {\n    var n = arrays.length,\n        m,\n        i = -1,\n        j = 0,\n        merged,\n        array;\n\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n\n    return merged;\n  }\n\n  function min(array, f) {\n    var i = -1,\n        n = array.length,\n        a,\n        b;\n\n    if (f == null) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    }\n\n    else {\n      while (++i < n) if ((b = f(array[i], i, array)) != null && b >= b) { a = b; break; }\n      while (++i < n) if ((b = f(array[i], i, array)) != null && a > b) a = b;\n    }\n\n    return a;\n  }\n\n  function pairs(array) {\n    var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [p, p = array[++i]];\n    return pairs;\n  }\n\n  function permute(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  }\n\n  function scan(array, compare) {\n    if (!(n = array.length)) return;\n    var i = 0,\n        n,\n        j = 0,\n        xi,\n        xj = array[j];\n\n    if (!compare) compare = ascending;\n\n    while (++i < n) if (compare(xi = array[i], xj) < 0 || compare(xj, xj) !== 0) xj = xi, j = i;\n\n    if (compare(xj, xj) === 0) return j;\n  }\n\n  function shuffle(array, i0, i1) {\n    var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n        t,\n        i;\n\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0];\n      array[m + i0] = array[i + i0];\n      array[i + i0] = t;\n    }\n\n    return array;\n  }\n\n  function sum(array, f) {\n    var s = 0,\n        n = array.length,\n        a,\n        i = -1;\n\n    if (f == null) {\n      while (++i < n) if (a = +array[i]) s += a; // Note: zero and null are equivalent.\n    }\n\n    else {\n      while (++i < n) if (a = +f(array[i], i, array)) s += a;\n    }\n\n    return s;\n  }\n\n  function transpose(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  }\n\n  function length(d) {\n    return d.length;\n  }\n\n  function zip() {\n    return transpose(arguments);\n  }\n\n  var version = \"0.7.1\";\n\n  exports.version = version;\n  exports.bisect = bisectRight;\n  exports.bisectRight = bisectRight;\n  exports.bisectLeft = bisectLeft;\n  exports.ascending = ascending;\n  exports.bisector = bisector;\n  exports.descending = descending;\n  exports.deviation = deviation;\n  exports.extent = extent;\n  exports.histogram = histogram;\n  exports.thresholdFreedmanDiaconis = freedmanDiaconis;\n  exports.thresholdScott = scott;\n  exports.thresholdSturges = sturges;\n  exports.max = max;\n  exports.mean = mean;\n  exports.median = median;\n  exports.merge = merge;\n  exports.min = min;\n  exports.pairs = pairs;\n  exports.permute = permute;\n  exports.quantile = quantile;\n  exports.range = range;\n  exports.scan = scan;\n  exports.shuffle = shuffle;\n  exports.sum = sum;\n  exports.ticks = ticks;\n  exports.tickStep = tickStep;\n  exports.transpose = transpose;\n  exports.variance = variance;\n  exports.zip = zip;\n\n}));","/**\n * This function xSubtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function xSubtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","import isAnyArray from 'is-any-array';\n\nimport { getNormalizedData } from './util/getNormalizedData';\n/**\n * Class allowing to store and manipulate an analysis.\n * An analysis may contain one or more spectra that are identified\n * by a 'flavor'\n * @class Analysis\n * @param {object} [options={}]\n * @param {string} [options.id=randomString] unique identifier\n * @param {string} [options.label=options.id] human redeable label\n */\nexport class Analysis {\n  constructor(options = {}) {\n    this.id = options.id || Math.random().toString(36).substring(2, 10);\n    this.label = options.label || this.id;\n    this.spectra = [];\n  }\n\n  /**\n   * Set a spectrum for a specific flavor\n   * @param {object} [variables]\n   * @param {object} [variables.x]\n   * @param {array} [variables.x.data]\n   * @param {array} [variables.x.units='x']\n   * @param {array} [variables.x.label='x']\n   * @param {object} [variables.y]\n   * @param {array} [variables.y.data]\n   * @param {array} [variables.y.units='y']\n   * @param {array} [variables.y.label='y']\n   * @param {object} [options={}]\n   * @param {string} [options.dataType='']\n   * @param {string} [options.title='']\n   * @param {object} [options.flavor={}]\n   *\n   */\n  pushSpectrum(variables, options = {}) {\n    this.spectra.push(standardizeData(variables, options));\n  }\n\n  /**\n   * Retrieve a Spectrum based on a flavor\n   * @param {object} [selector={}]\n   * @param {string} [selector.index]\n   * @param {string} [selector.flavor]\n   * @returns {Spectrum}\n   */\n  getSpectrum(selector = {}) {\n    let spectra = this.getSpectra(selector);\n    return spectra ? spectra[0] : undefined;\n  }\n\n  /**\n   * Retrieve a Spectrum based on a flavor\n   * @param {object} [selector={}]\n   * @param {string} [selector.index]\n   * @param {string} [selector.flavor]\n   * @returns {Spectrum}\n   */\n  getSpectra(selector = {}) {\n    const { index, flavor } = selector;\n    if (index !== undefined) {\n      return this.spectra[index] ? [this.spectra[index]] : undefined;\n    }\n    if (flavor === undefined || flavor === '') return this.spectra;\n    return this.spectra.filter((spectrum) => spectrum.flavor === flavor);\n  }\n\n  /**\n   * Return the data object for a specific flavor with possibly some\n   * normalization options\n   * @param {object} [options={}]\n   * @param {object} [options.selector]\n   * @param {string} [options.selector.index]\n   * @param {string} [options.selector.flavor]\n   * @param {object} [options.normalization]\n   *\n   */\n  getNormalizedData(options = {}) {\n    const { normalization, selector } = options;\n    const spectrum = this.getSpectrum(selector);\n    if (!spectrum) return undefined;\n    return getNormalizedData(spectrum, normalization);\n  }\n\n  getXLabel(selector) {\n    return this.getSpectrum(selector).variables.x.label;\n  }\n\n  getYLabel(selector) {\n    return this.getSpectrum(selector).variables.y.label;\n  }\n}\n\n/**\n * Internal function that ensure the order of x / y array\n * @param {DataXY} [variables]\n * @param {object} [options={}]\n * @return {Spectrum}\n */\nfunction standardizeData(variables, options = {}) {\n  let { meta = {}, dataType = '', title = '' } = options;\n\n  let xVariable = variables.x;\n  let yVariable = variables.y;\n  if (!xVariable || !yVariable) {\n    throw Error('A spectrum must contain at least x and y variables');\n  }\n  if (!isAnyArray(xVariable.data) || !isAnyArray(yVariable.data)) {\n    throw Error('x and y variables must contain an array data');\n  }\n\n  let x = xVariable.data;\n  let reverse = x && x.length > 1 && x[0] > x[x.length - 1];\n\n  for (let key in variables) {\n    let variable = variables[key];\n    if (reverse) variable.data = variable.data.reverse();\n    variable.label = variable.label || key;\n    variable.units =\n      variable.units || variable.label.replace(/^.*[([](.*)[)\\]].*$/, '$1');\n  }\n\n  return {\n    variables,\n    title,\n    dataType,\n    meta,\n    flavor: `${yVariable.units} vs ${xVariable.units}`,\n  };\n}\n","import max from 'ml-array-max';\nimport normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport filterX from 'ml-array-xy-filter-x';\nimport savitzkyGolay from 'ml-savitzky-golay';\nimport { xDivide, xSubtract, xMultiply, xAdd } from 'ml-spectra-processing';\nimport Stat from 'ml-stat/array';\n/**\n *\n * @private\n * @param {object} spectrum\n * @param {object} [options={}]\n * @param {number} [options.from=spectrum.x[0]]\n * @param {number} [options.to=spectrum.x[spectrum.x.length-1]]\n * @param {number} [options.numberOfPoints]\n * @param {Array} [options.filters=[]] Array of object containing 'name' (centerMean, divideSD, normalize, rescale) and 'options'\n * @param {Array} [options.exclusions=[]]\n * @returns {DataXY}\n */\nexport function getNormalizedData(spectrum, options = {}) {\n  let data = {\n    x: spectrum.variables.x.data,\n    y: spectrum.variables.y.data,\n  };\n\n  let {\n    from = data.x[0],\n    to = data.x[data.x.length - 1],\n    numberOfPoints,\n    filters = [],\n    exclusions = [],\n    processing = '',\n  } = options;\n\n  let { x, y } = filterX(data, { from, to });\n\n  switch (processing) {\n    case 'firstDerivative':\n      if (options.processing) {\n        y = savitzkyGolay(y, 1, {\n          derivative: 1,\n          polynomial: 2,\n          windowSize: 5,\n        });\n        x = x.slice(2, x.length - 2);\n      }\n      break;\n    case 'secondDerivative':\n      if (options.processing) {\n        y = savitzkyGolay(y, 1, {\n          derivative: 2,\n          polynomial: 2,\n          windowSize: 5,\n        });\n        x = x.slice(2, x.length - 2);\n      }\n      break;\n    default:\n  }\n\n  for (let filter of filters) {\n    let filterOptions = filter.options || {};\n    switch (filter.name.toLowerCase()) {\n      case 'centermean': {\n        let mean = Stat.mean(y);\n        y = xSubtract(y, mean);\n        break;\n      }\n      case 'dividebysd': {\n        let std = Stat.standardDeviation(y);\n        y = xDivide(y, std);\n        break;\n      }\n      case 'normalize': {\n        y = normed(y, {\n          sumValue: filterOptions.value ? Number(filterOptions.value) : 1,\n          algorithm: 'absolute',\n        });\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y, {\n          min: filterOptions.min ? Number(filterOptions.min) : 0,\n          max: filterOptions.max ? Number(filterOptions.max) : 1,\n        });\n        break;\n      }\n      case 'dividebymax': {\n        let maxValue = max(y);\n        y = xDivide(y, maxValue);\n        break;\n      }\n      case 'multiply': {\n        y = xMultiply(y, filterOptions.value ? Number(filterOptions.value) : 1);\n        break;\n      }\n      case 'add': {\n        y = xAdd(y, filterOptions.value ? Number(filterOptions.value) : 0);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n\n  if (!numberOfPoints) {\n    return filterX({ x, y }, { from, to, exclusions });\n  }\n\n  return equallySpaced({ x, y }, { from, to, numberOfPoints, exclusions });\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.x.push(currentX);\n                currentData.y.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","const removeCommentRegExp = /\\$\\$.*/;\nconst peakTableSplitRegExp = /[,\\t ]+/;\n\nexport default function parsePeakTable(spectrum, value, result) {\n  spectrum.isPeaktable = true;\n\n  if (!spectrum.variables || Object.keys(spectrum.variables) === 2) {\n    parseXY(spectrum, value, result);\n  } else {\n    parseXYZ(spectrum, value, result);\n  }\n\n  // we will add the data in the variables\n  if (spectrum.variables) {\n    for (let key in spectrum.variables) {\n      spectrum.variables[key].data = spectrum.data[key];\n    }\n  }\n}\n\nfunction parseXY(spectrum, value, result) {\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.x.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.y.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n\nfunction parseXYZ(spectrum, value, result) {\n  let currentData = {};\n  let variables = Object.keys(spectrum.variables);\n  let numberOfVariables = variables.length;\n  variables.forEach((variable) => (currentData[variable] = []));\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    let values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % numberOfVariables === 0) {\n      for (let j = 0; j < values.length; j++) {\n        // todo should try to find a xFactor (y, ...)\n        currentData[variables[j % numberOfVariables]].push(\n          parseFloat(values[j]),\n        );\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = { x: [], y: [] };\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.x.push(parseFloat(values[0]));\n    currentData.y.push(parseFloat(values[1]));\n  }\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data.y[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.x.length;\n\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = spectra[i].data.y;\n    for (let j = 0; j < xSize; j++) {\n      let value = z[i][j];\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data.x[0];\n  const lastX = spectra[0].data.x[spectra[0].data.x.length - 1]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","/**\n * Fast Fourier Transform module\n * 1D-FFT/IFFT, 2D-FFT/IFFT (radix-2)\n */\nvar FFT = (function(){\n  var FFT;  \n  \n  if(typeof exports !== 'undefined') {\n    FFT = exports;   // for CommonJS\n  } else {\n    FFT = {};\n  }\n  \n  var version = {\n    release: '0.3.0',\n    date: '2013-03'\n  };\n  FFT.toString = function() {\n    return \"version \" + version.release + \", released \" + version.date;\n  };\n\n  // core operations\n  var _n = 0,          // order\n      _bitrev = null,  // bit reversal table\n      _cstb = null;    // sin/cos table\n\n  var core = {\n    init : function(n) {\n      if(n !== 0 && (n & (n - 1)) === 0) {\n        _n = n;\n        core._initArray();\n        core._makeBitReversalTable();\n        core._makeCosSinTable();\n      } else {\n        throw new Error(\"init: radix-2 required\");\n      }\n    },\n    // 1D-FFT\n    fft1d : function(re, im) {\n      core.fft(re, im, 1);\n    },\n    // 1D-IFFT\n    ifft1d : function(re, im) {\n      var n = 1/_n;\n      core.fft(re, im, -1);\n      for(var i=0; i<_n; i++) {\n        re[i] *= n;\n        im[i] *= n;\n      }\n    },\n     // 1D-IFFT\n    bt1d : function(re, im) {\n      core.fft(re, im, -1);\n    },\n    // 2D-FFT Not very useful if the number of rows have to be equal to cols\n    fft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.fft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.fft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // 2D-IFFT\n    ifft2d : function(re, im) {\n      var tre = [],\n          tim = [],\n          i = 0;\n      // x-axis\n      for(var y=0; y<_n; y++) {\n        i = y*_n;\n        for(var x1=0; x1<_n; x1++) {\n          tre[x1] = re[x1 + i];\n          tim[x1] = im[x1 + i];\n        }\n        core.ifft1d(tre, tim);\n        for(var x2=0; x2<_n; x2++) {\n          re[x2 + i] = tre[x2];\n          im[x2 + i] = tim[x2];\n        }\n      }\n      // y-axis\n      for(var x=0; x<_n; x++) {\n        for(var y1=0; y1<_n; y1++) {\n          i = x + y1*_n;\n          tre[y1] = re[i];\n          tim[y1] = im[i];\n        }\n        core.ifft1d(tre, tim);\n        for(var y2=0; y2<_n; y2++) {\n          i = x + y2*_n;\n          re[i] = tre[y2];\n          im[i] = tim[y2];\n        }\n      }\n    },\n    // core operation of FFT\n    fft : function(re, im, inv) {\n      var d, h, ik, m, tmp, wr, wi, xr, xi,\n          n4 = _n >> 2;\n      // bit reversal\n      for(var l=0; l<_n; l++) {\n        m = _bitrev[l];\n        if(l < m) {\n          tmp = re[l];\n          re[l] = re[m];\n          re[m] = tmp;\n          tmp = im[l];\n          im[l] = im[m];\n          im[m] = tmp;\n        }\n      }\n      // butterfly operation\n      for(var k=1; k<_n; k<<=1) {\n        h = 0;\n        d = _n/(k << 1);\n        for(var j=0; j<k; j++) {\n          wr = _cstb[h + n4];\n          wi = inv*_cstb[h];\n          for(var i=j; i<_n; i+=(k<<1)) {\n            ik = i + k;\n            xr = wr*re[ik] + wi*im[ik];\n            xi = wr*im[ik] - wi*re[ik];\n            re[ik] = re[i] - xr;\n            re[i] += xr;\n            im[ik] = im[i] - xi;\n            im[i] += xi;\n          }\n          h += d;\n        }\n      }\n    },\n    // initialize the array (supports TypedArray)\n    _initArray : function() {\n      if(typeof Uint32Array !== 'undefined') {\n        _bitrev = new Uint32Array(_n);\n      } else {\n        _bitrev = [];\n      }\n      if(typeof Float64Array !== 'undefined') {\n        _cstb = new Float64Array(_n*1.25);\n      } else {\n        _cstb = [];\n      }\n    },\n    // zero padding\n    _paddingZero : function() {\n      // TODO\n    },\n    // makes bit reversal table\n    _makeBitReversalTable : function() {\n      var i = 0,\n          j = 0,\n          k = 0;\n      _bitrev[0] = 0;\n      while(++i < _n) {\n        k = _n >> 1;\n        while(k <= j) {\n          j -= k;\n          k >>= 1;\n        }\n        j += k;\n        _bitrev[i] = j;\n      }\n    },\n    // makes trigonometiric function table\n    _makeCosSinTable : function() {\n      var n2 = _n >> 1,\n          n4 = _n >> 2,\n          n8 = _n >> 3,\n          n2p4 = n2 + n4,\n          t = Math.sin(Math.PI/_n),\n          dc = 2*t*t,\n          ds = Math.sqrt(dc*(2 - dc)),\n          c = _cstb[n4] = 1,\n          s = _cstb[0] = 0;\n      t = 2*dc;\n      for(var i=1; i<n8; i++) {\n        c -= dc;\n        dc += t*c;\n        s += ds;\n        ds -= t*s;\n        _cstb[i] = s;\n        _cstb[n4 - i] = c;\n      }\n      if(n8 !== 0) {\n        _cstb[n8] = Math.sqrt(0.5);\n      }\n      for(var j=0; j<n4; j++) {\n        _cstb[n2 - j]  = _cstb[j];\n      }\n      for(var k=0; k<n2p4; k++) {\n        _cstb[k + n2] = -_cstb[k];\n      }\n    }\n  };\n  // aliases (public APIs)\n  var apis = ['init', 'fft1d', 'ifft1d', 'fft2d', 'ifft2d'];\n  for(var i=0; i<apis.length; i++) {\n    FFT[apis[i]] = core[apis[i]];\n  }\n  FFT.bt = core.bt1d;\n  FFT.fft = core.fft1d;\n  FFT.ifft = core.ifft1d;\n  \n  return FFT;\n}).call(this);\n","// source: https://en.wikipedia.org/wiki/Gyromagnetic_ratio\n\nexport const gyromagneticRatio = {\n  '1H': 267.52218744e6,\n  '2H': 41.065e6,\n  '3H': 285.3508e6,\n  '3He': -203.789e6,\n  '7Li': 103.962e6,\n  '13C': 67.28284e6,\n  '14N': 19.331e6,\n  '15N': -27.116e6,\n  '17O': -36.264e6,\n  '19F': 251.662e6,\n  '23Na': 70.761e6,\n  '27Al': 69.763e6,\n  '29Si': -53.19e6,\n  '31P': 108.291e6,\n  '57Fe': 8.681e6,\n  '63Cu': 71.118e6,\n  '67Zn': 16.767e6,\n  '129Xe': -73.997e6,\n};\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport postProcessingNMR from './postProcessingNMR';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  // converting Hz to ppm\n  postProcessingNMR(entriesFlat);\n\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","import { gyromagneticRatio } from 'nmr-processing';\n\nexport default function postProcessingNMR(entriesFlat) {\n  // specific NMR functions\n  let observeFrequency = 0;\n  let shiftOffsetVal = 0;\n\n  for (let entry of entriesFlat) {\n    for (let spectrum of entry.spectra) {\n      if (entry.ntuples && entry.ntuples.symbol) {\n        if (!observeFrequency && spectrum.observeFrequency) {\n          observeFrequency = spectrum.observeFrequency;\n        }\n        if (!shiftOffsetVal && spectrum.shiftOffsetVal) {\n          shiftOffsetVal = spectrum.shiftOffsetVal;\n        }\n      } else {\n        observeFrequency = spectrum.observeFrequency;\n        shiftOffsetVal = spectrum.shiftOffsetVal;\n      }\n\n      if (observeFrequency) {\n        if (spectrum.xUnits && spectrum.xUnits.toUpperCase().includes('HZ')) {\n          spectrum.xUnits = 'PPM';\n          spectrum.xFactor = spectrum.xFactor / observeFrequency;\n          spectrum.firstX = spectrum.firstX / observeFrequency;\n          spectrum.lastX = spectrum.lastX / observeFrequency;\n          spectrum.deltaX = spectrum.deltaX / observeFrequency;\n          for (let i = 0; i < spectrum.data.x.length; i++) {\n            spectrum.data.x[i] /= observeFrequency;\n          }\n        }\n      }\n      if (shiftOffsetVal) {\n        let shift = spectrum.firstX - shiftOffsetVal;\n        spectrum.firstX = spectrum.firstX - shift;\n        spectrum.lastX = spectrum.lastX - shift;\n        for (let i = 0; i < spectrum.data.x.length; i++) {\n          spectrum.data.x[i] -= shift;\n        }\n      }\n\n      if (\n        observeFrequency &&\n        entry.ntuples &&\n        entry.ntuples.symbol &&\n        entry.ntuples.nucleus\n      ) {\n        let unit = '';\n        let pageSymbolIndex = entry.ntuples.symbol.indexOf(spectrum.pageSymbol);\n        if (entry.ntuples.units && entry.ntuples.units[pageSymbolIndex]) {\n          unit = entry.ntuples.units[pageSymbolIndex];\n        }\n        if (unit !== 'PPM') {\n          if (pageSymbolIndex !== 0) {\n            throw Error('Not sure about this ntuples format');\n          }\n\n          let ratio0 = gyromagneticRatio[entry.ntuples.nucleus[0]];\n          let ratio1 = gyromagneticRatio[entry.ntuples.nucleus[1]];\n          if (!ratio0 || !ratio1) {\n            throw Error('Problem with determination of gyromagnetic ratio');\n          }\n          let ratio = (ratio0 / ratio1) * observeFrequency;\n          spectrum.pageValue /= ratio;\n        }\n      }\n    }\n  }\n}\n","export default function prepareNtuplesDatatable(currentEntry, spectrum, kind) {\n  let xIndex = -1;\n  let yIndex = -1;\n  let firstVariable = '';\n  let secondVariable = '';\n  if (kind.indexOf('++') > 0) {\n    firstVariable = kind.replace(/.*\\(([a-zA-Z0-9]+)\\+\\+.*/, '$1');\n    secondVariable = kind.replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n  } else {\n    kind = kind.replace(/[^a-zA-Z]/g, '');\n    firstVariable = kind.charAt(0);\n    secondVariable = kind.charAt(1);\n    spectrum.variables = {};\n    for (let symbol of kind) {\n      let lowerCaseSymbol = symbol.toLowerCase();\n      let index = currentEntry.ntuples.symbol.indexOf(symbol);\n      if (index === -1) throw Error(`Symbol undefined: ${symbol}`);\n      spectrum.variables[lowerCaseSymbol] = {};\n      for (let key in currentEntry.ntuples) {\n        if (currentEntry.ntuples[key][index]) {\n          spectrum.variables[lowerCaseSymbol][key.replace(/^var/, '')] =\n            currentEntry.ntuples[key][index];\n        }\n      }\n    }\n  }\n  xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n  yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n\n  if (xIndex === -1) xIndex = 0;\n  if (yIndex === -1) yIndex = 0;\n\n  if (currentEntry.ntuples.first) {\n    if (currentEntry.ntuples.first.length > xIndex) {\n      spectrum.firstX = currentEntry.ntuples.first[xIndex];\n    }\n    if (currentEntry.ntuples.first.length > yIndex) {\n      spectrum.firstY = currentEntry.ntuples.first[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.last) {\n    if (currentEntry.ntuples.last.length > xIndex) {\n      spectrum.lastX = currentEntry.ntuples.last[xIndex];\n    }\n    if (currentEntry.ntuples.last.length > yIndex) {\n      spectrum.lastY = currentEntry.ntuples.last[yIndex];\n    }\n  }\n  if (\n    currentEntry.ntuples.vardim &&\n    currentEntry.ntuples.vardim.length > xIndex\n  ) {\n    spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n  }\n  if (currentEntry.ntuples.factor) {\n    if (currentEntry.ntuples.factor.length > xIndex) {\n      spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n    }\n    if (currentEntry.ntuples.factor.length > yIndex) {\n      spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n    }\n  }\n  if (currentEntry.ntuples.units) {\n    if (currentEntry.ntuples.units.length > xIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[xIndex]\n      ) {\n        spectrum.xUnits = `${currentEntry.ntuples.varname[xIndex]} [${currentEntry.ntuples.units[xIndex]}]`;\n      } else {\n        spectrum.xUnits = currentEntry.ntuples.units[xIndex];\n      }\n    }\n    if (currentEntry.ntuples.units.length > yIndex) {\n      if (\n        currentEntry.ntuples.varname &&\n        currentEntry.ntuples.varname[yIndex]\n      ) {\n        spectrum.yUnits = `${currentEntry.ntuples.varname[yIndex]} [${currentEntry.ntuples.units[yIndex]}]`;\n      } else {\n        spectrum.yUnits = currentEntry.ntuples.units[yIndex];\n      }\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareNtuplesDatatable from './prepareNtuplesDatatable';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[ \\t]*,[ \\t]*/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  canonicMetadataLabels: false,\n  dynamicTyping: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\n/**\n *\n * @param {text} jcamp\n * @param {object} [options]\n * @param {number} [options.keepRecordsRegExp=/^$/] By default we don't keep meta information\n * @param {number} [options.canonicDataLabels=true] Canonize the Labels (uppercase without symbol)\n * @param {number} [options.canonicMetadataLabels=false] Canonize the metadata Labels (uppercase without symbol)\n * @param {number} [options.dynamicTyping=false] Convert numbers to Number\n * @param {number} [options.withoutXY=false] Remove the XY data\n * @param {number} [options.chromatogram=false] Special post-processing for GC / HPLC / MS\n * @param {number} [options.keepSpectra=false] Force to keep the spectra in case of 2D\n * @param {number} [options.noContour=false] Don't calculate countour in case of 2D\n * @param {number} [options.nbContourLevels=7] Number of positive / negative contour levels to calculate\n * @param {number} [options.noiseMultiplier=5] Define for 2D the level as 5 times the median as default\n * @param {number} [options.profiling=false] Add profiling information\n */\n\nexport default function convert(jcamp, options = {}) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        prepareNtuplesDatatable(currentEntry, spectrum, infos[0]);\n\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n        meta: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.toLowerCase().indexOf('nd') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnits = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnits = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.ntuples) {\n        currentEntry.ntuples.nucleus = dataValue.split(ntuplesSeparator);\n      }\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      currentEntry.meta &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let value = dataValue.trim();\n      let target, label;\n      if (dataLabel.startsWith('$')) {\n        label = options.canonicMetadataLabels\n          ? canonicDataLabel.substring(1)\n          : dataLabel.substring(1);\n        target = currentEntry.meta;\n      } else {\n        label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        target = currentEntry.info;\n      }\n\n      if (options.dynamicTyping) {\n        let parsedValue = Number.parseFloat(value);\n        if (!Number.isNaN(parsedValue)) value = parsedValue;\n      }\n      if (target[label]) {\n        if (!Array.isArray(target[label])) {\n          target[label] = [target[label]];\n        }\n        target[label].push(value);\n      } else {\n        target[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","export function addStyle(serie, spectrum, options = {}) {\n  const { color = 'darkgrey' } = options;\n  serie.style = [\n    {\n      name: 'unselected',\n      style: {\n        line: {\n          color,\n          width: 1,\n          dash: 1,\n        },\n      },\n    },\n    {\n      name: 'selected',\n      style: {\n        line: {\n          color,\n          width: 3,\n          dash: 1,\n        },\n      },\n    },\n  ];\n  serie.name = spectrum.label || spectrum.id;\n}\n","export const COLORS = [\n  '#FFB300',\n  '#803E75',\n  '#FF6800',\n  '#A6BDD7',\n  '#C10020',\n  '#CEA262',\n  '#817066',\n  '#007D34',\n  '#F6768E',\n  '#00538A',\n  '#FF7A5C',\n  '#53377A',\n  '#FF8E00',\n  '#B32851',\n  '#F4C800',\n  '#7F180D',\n  '#93AA00',\n  '#593315',\n  '#F13A13',\n  '#232C16',\n];\n","import creatorNtuples from './creatorNtuples';\nimport { fromJSON } from './fromJSON';\n\n/**\n * Create a jcamp from variables\n * @param {Array<Variable} [variables={}] - object of variables\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {object} [options.meta = {}] - comments to add to the file\n * @param {object} [options.forceNtuples = false] - force the ntuples format even if there is only x and y variables\n */\nexport function fromVariables(variables = {}, options = {}) {\n  const { info, meta, forceNtuples } = options;\n\n  let jcampOptions = {\n    info,\n    meta,\n  };\n\n  let keys = Object.keys(variables).map((key) => key.toLowerCase());\n  if (\n    keys.length === 2 &&\n    keys.includes('x') &&\n    keys.includes('y') &&\n    !forceNtuples\n  ) {\n    let x = variables.x;\n    let xLabel = x.label || x.name || 'x';\n\n    jcampOptions.info.xUnits = xLabel.includes(variables.x.units)\n      ? xLabel\n      : `${xLabel} [${variables.x.units}]`;\n\n    let y = variables.y;\n    let yLabel = y.label || y.name || 'y';\n\n    jcampOptions.info.yUnits = yLabel.includes(variables.y.units)\n      ? yLabel\n      : `${yLabel} [${variables.y.units}]`;\n    return fromJSON({ x: variables.x.data, y: variables.y.data }, jcampOptions);\n  } else {\n    return creatorNtuples(variables, options);\n  }\n}\n","/**\n * Create a jcamp\n * @param {object} data - object of array\n * @param {object} [options={}] - metadata object\n * @param {string} [options.info={}] - metadata of the file\n * @param {string} [options.info.title = ''] - title of the file\n * @param {string} [options.info.owner = ''] - owner of the file\n * @param {string} [options.info.origin = ''] - origin of the file\n * @param {string} [options.info.dataType = ''] - type of data\n * @param {string} [options.info.xUnits = ''] - units for the x axis for variables===undefined\n * @param {string} [options.info.yUnits = ''] - units for the y axis for variables===undefined\n * @param {object} [options.meta = {}] - comments to add to the file\n\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, options = {}) {\n  const { meta = {}, info = {} } = options;\n\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    dataType = '',\n    xUnits = '',\n    yUnits = '',\n  } = info;\n  let firstX = Number.POSITIVE_INFINITY;\n  let lastX = Number.NEGATIVE_INFINITY;\n  let firstY = Number.POSITIVE_INFINITY;\n  let lastY = Number.NEGATIVE_INFINITY;\n  let points = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnits}\n##YUNITS=${yUnits}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key of Object.keys(meta)) {\n    header += `##$${key}=${meta[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import maxFct from 'ml-array-max';\nimport minFct from 'ml-array-min';\n\n/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} variables\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creatorNtuples(variables, options) {\n  const { meta = {}, info = {} } = options;\n\n  const { title = '', owner = '', origin = '', dataType = '' } = info;\n\n  const symbol = [];\n  const varName = [];\n  const varType = [];\n  const varDim = [];\n  const units = [];\n  const first = [];\n  const last = [];\n  const min = [];\n  const max = [];\n  const factor = [];\n\n  const keys = Object.keys(variables);\n  for (let i = 0; i < keys.length; i++) {\n    const key = keys[i];\n    let variable = variables[key];\n\n    let name = variable.label && variable.label.replace(/ *\\[.*/, '');\n    let unit = variable.label && variable.label.replace(/.*\\[(.*)\\].*/, '$1');\n\n    symbol.push(variable.symbol || key);\n    varName.push(variable.name || name || key);\n    varDim.push(variables[key].data.length);\n    varType.push(i === 0 ? 'INDEPENDENT' : 'DEPENDENT');\n    units.push(variable.units || unit || '');\n    first.push(variables[key][0]);\n    last.push(variables[key][variables[key].length - 1]);\n    min.push(minFct(variables[key].data));\n    max.push(maxFct(variables[key].data));\n    factor.push(1);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=6.00\n##DATA TYPE=${dataType}\n##ORIGIN=${origin}\n##OWNER=${owner}\\n`;\n\n  for (const key of Object.keys(meta)) {\n    header += `##$${key}=${meta[key]}\\n`;\n  }\n\n  header += `##NTUPLES= ${dataType}\n##VAR_NAME=  ${varName.join()}\n##SYMBOL=    ${symbol.join()}\n##VAR_TYPE=  ${varType.join()}\n##VAR_DIM=   ${varDim.join()}\n##UNITS=     ${units.join()}\n##PAGE= N=1\\n`;\n\n  header += `##DATA TABLE= (${symbol.join('')}..${symbol.join('')}), PEAKS\\n`;\n\n  for (let i = 0; i < variables[keys[0]].data.length; i++) {\n    let point = [];\n    for (let key of keys) {\n      point.push(variables[key].data[i]);\n    }\n    header += `${point.join('\\t')}\\n`;\n  }\n\n  header += '##END';\n  return header;\n}\n","import { fromVariables } from 'convert-to-jcamp';\n\nexport function toJcamp(analysis, options = {}) {\n  let jcamps = [];\n  for (let spectrum of analysis.spectra) {\n    jcamps.push(getJcamp(spectrum, options));\n  }\n  return jcamps.join('\\n');\n}\n\nfunction getJcamp(spectrum, options) {\n  const { info = {}, meta = {} } = options;\n\n  let jcampOptions = {\n    options: {},\n    info: {\n      title: spectrum.title,\n      dataType: spectrum.dataType,\n      ...info,\n    },\n    meta: { ...spectrum.meta, ...meta },\n  };\n\n  return fromVariables(spectrum.variables, jcampOptions);\n}\n","export function parsePerkinElmer(text) {\n  let lines = text.split(/[\\r\\n]+/);\n  let result = { meta: {}, data: { time: [], weight: [], temperature: [] } };\n  let section = '';\n  let inMethodSteps = false;\n  for (let line of lines) {\n    if (inMethodSteps) {\n      if (line.startsWith('1) TGA')) {\n        inMethodSteps = false;\n      } else {\n        if (!result.meta['Method Steps']) result.meta['Method Steps'] = '';\n        result.meta['Method Steps'] += `${line.replace(/\\t/g, '  ')}\\n`;\n      }\n    } else if (line.match(/^[a-zA-Z -]+$/)) {\n      section = trim(line);\n    } else if (line.match(/.*:.*/)) {\n      let position = line.indexOf(':');\n      let description = line.substring(0, position);\n      let value = trim(line.substring(position + 1));\n      result.meta[(section ? `${section}_` : '') + description] = value;\n    } else if (line.match(/^[0-9\\t .]+$/)) {\n      let fields = line.replace(/^\\t/, '').split('\\t');\n      result.data.time.push(Number(fields[0] * 60));\n      result.data.weight.push(Number(fields[1]));\n      result.data.temperature.push(Number(fields[4]));\n    } else {\n      //  console.log('Problem: ', line);\n    }\n    if (line.startsWith('Method Steps:')) {\n      inMethodSteps = true;\n    }\n  }\n  return result;\n}\n\nfunction trim(string) {\n  return string.replace(/^[ \\t]*(.*?)[ \\t]*$/, '$1');\n}\n","/* @license\nPapa Parse\nv5.2.0\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=n&&/blob:/i.test((f.location||{}).protocol),a={},h=0,b={parse:function(e,t){var i=(t=t||{}).dynamicTyping||!1;U(i)&&(t.dynamicTypingFunction=i,i={});if(t.dynamicTyping=i,t.transform=!!U(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var r=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(i=f.URL||f.webkitURL||null,r=s.toString(),b.BLOB_URL||(b.BLOB_URL=i.createObjectURL(new Blob([\"(\",r,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var i,r;return t.onmessage=_,t.id=h++,a[t.id]=t}();return r.userStep=t.step,r.userChunk=t.chunk,r.userComplete=t.complete,r.userError=t.error,t.step=U(t.step),t.chunk=U(t.chunk),t.complete=U(t.complete),t.error=U(t.error),delete t.worker,void r.postMessage({input:e,config:t,workerId:r.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?n=t.download?new l(t):new p(t):!0===e.readable&&U(e.read)&&U(e.on)?n=new g(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var n=!1,_=!0,m=\",\",v=\"\\r\\n\",s='\"',a=s+s,i=!1,r=null;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(m=t.delimiter);(\"boolean\"==typeof t.quotes||\"function\"==typeof t.quotes||Array.isArray(t.quotes))&&(n=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(i=t.skipEmptyLines);\"string\"==typeof t.newline&&(v=t.newline);\"string\"==typeof t.quoteChar&&(s=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");r=t.columns}void 0!==t.escapeChar&&(a=t.escapeChar+s)}();var o=new RegExp(q(s),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,i);if(\"object\"==typeof e[0])return u(r||h(e[0]),e,i)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:h(e.data[0])),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],i);throw new Error(\"Unable to serialize unrecognized input\");function h(e){if(\"object\"!=typeof e)return[];var t=[];for(var i in e)t.push(i);return t}function u(e,t,i){var r=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(r+=m),r+=y(e[a],a);0<t.length&&(r+=v)}for(var o=0;o<t.length;o++){var h=n?e.length:t[o].length,u=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(i&&!n&&(u=\"greedy\"===i?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===i&&n){for(var d=[],l=0;l<h;l++){var c=s?e[l]:l;d.push(t[o][c])}u=\"\"===d.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!f&&(r+=m);var g=n&&s?e[p]:p;r+=y(t[o][g],p)}o<t.length-1&&(!i||0<h&&!f)&&(r+=v)}}return r}function y(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);var i=e.toString().replace(o,a),r=\"boolean\"==typeof n&&n||\"function\"==typeof n&&n(e,t)||Array.isArray(n)&&n[t]||function(e,t){for(var i=0;i<t.length;i++)if(-1<e.indexOf(t[i]))return!0;return!1}(i,b.BAD_DELIMITERS)||-1<i.indexOf(m)||\" \"===i.charAt(0)||\" \"===i.charAt(i.length-1);return r?s+i+s:i}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=w,b.ParserHandle=i,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=g,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var i=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},i)})}),e(),this;function e(){if(0!==h.length){var e,t,i,r,n=h[0];if(U(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,i=n.inputElem,r=s.reason,void(U(o.error)&&o.error({name:e},t,i,r));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){U(a)&&a(e,n.file,n.inputElem),u()},b.parse(n.file,n.instanceConfig)}else U(o.complete)&&o.complete()}function u(){h.splice(0,1),e()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=E(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new i(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&U(this._config.beforeFirstChunk)){var i=this._config.beforeFirstChunk(e);void 0!==i&&(e=i)}this.isFirstChunk=!1,this._halted=!1;var r=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(r,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=r.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(U(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!U(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){U(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var r;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(r=new XMLHttpRequest,this._config.withCredentials&&(r.withCredentials=this._config.withCredentials),n||(r.onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)),r.open(this._config.downloadRequestBody?\"POST\":\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)r.setRequestHeader(t,e[t])}if(this._config.chunkSize){var i=this._start+this._config.chunkSize-1;r.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+i)}try{r.send(this._config.downloadRequestBody)}catch(e){this._chunkError(e.message)}n&&0===r.status&&this._chunkError()}},this._chunkLoaded=function(){4===r.readyState&&(r.status<200||400<=r.status?this._chunkError():(this._start+=this._config.chunkSize?this._config.chunkSize:r.responseText.length,this._finished=!this._config.chunkSize||this._start>=function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substring(t.lastIndexOf(\"/\")+1))}(r),this.parseChunk(r.responseText)))},this._chunkError=function(e){var t=r.statusText||e;this._sendError(new Error(t))}}function c(e){var r,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),u.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((r=new FileReader).onload=y(this._chunkLoaded,this),r.onerror=y(this._chunkError,this)):r=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var i=r.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:i}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(r.error)}}function p(e){var i;u.call(this,e=e||{}),this.stream=function(e){return i=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e,t=this._config.chunkSize;return t?(e=i.substring(0,t),i=i.substring(t)):(e=i,i=\"\"),this._finished=!i,this.parseChunk(e)}}}function g(e){u.call(this,e=e||{});var t=[],i=!0,r=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){r&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):i=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),i&&(i=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),r=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function i(m){var a,o,h,r=Math.pow(2,53),n=-r,s=/^\\s*-?(\\d+\\.?|\\.\\d+|\\d+\\.\\d+)(e[-+]?\\d+)?\\s*$/,u=/(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,t=this,i=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(U(m.step)){var p=m.step;m.step=function(e){if(c=e,_())g();else{if(g(),0===c.data.length)return;i+=e.data.length,m.preview&&i>m.preview?o.abort():(c.data=c.data[0],p(c,t))}}}function v(e){return\"greedy\"===m.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function g(){if(c&&h&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),h=!1),m.skipEmptyLines)for(var e=0;e<c.data.length;e++)v(c.data[e])&&c.data.splice(e--,1);return _()&&function(){if(!c)return;function e(e){U(m.transformHeader)&&(e=m.transformHeader(e)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!m.header&&!m.dynamicTyping&&!m.transform)return c;function e(e,t){var i,r=m.header?{}:[];for(i=0;i<e.length;i++){var n=i,s=e[i];m.header&&(n=i>=l.length?\"__parsed_extra\":l[i]),m.transform&&(s=m.transform(s,n)),s=y(n,s),\"__parsed_extra\"===n?(r[n]=r[n]||[],r[n].push(s)):r[n]=s}return m.header&&(i>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+i,f+t):i<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+i,f+t)),r}var t=1;!c.data.length||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);m.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return m.header&&0===l.length}function y(e,t){return i=e,m.dynamicTypingFunction&&void 0===m.dynamicTyping[i]&&(m.dynamicTyping[i]=m.dynamicTypingFunction(i)),!0===(m.dynamicTyping[i]||m.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<r)return!0}return!1}(t)?parseFloat(t):u.test(t)?new Date(t):\"\"===t?null:t):t;var i}function k(e,t,i,r){var n={type:e,code:t,message:i};void 0!==r&&(n.row=r),c.errors.push(n)}this.parse=function(e,t,i){var r=m.quoteChar||'\"';if(m.newline||(m.newline=function(e,t){e=e.substring(0,1048576);var i=new RegExp(q(t)+\"([^]*?)\"+q(t),\"gm\"),r=(e=e.replace(i,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<r[0].length;if(1===r.length||s)return\"\\n\";for(var a=0,o=0;o<r.length;o++)\"\\n\"===r[o][0]&&a++;return a>=r.length/2?\"\\r\\n\":\"\\r\"}(e,r)),h=!1,m.delimiter)U(m.delimiter)&&(m.delimiter=m.delimiter(e),c.meta.delimiter=m.delimiter);else{var n=function(e,t,i,r,n){var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var u=0;u<n.length;u++){var f=n[u],d=0,l=0,c=0;o=void 0;for(var p=new w({comments:r,delimiter:f,newline:t,preview:10}).parse(e),g=0;g<p.data.length;g++)if(i&&v(p.data[g]))c++;else{var _=p.data[g].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===h||h<l)&&1.99<l&&(a=d,s=f,h=l)}return{successful:!!(m.delimiter=s),bestDelimiter:s}}(e,m.newline,m.skipEmptyLines,m.comments,m.delimitersToGuess);n.successful?m.delimiter=n.bestDelimiter:(h=!0,m.delimiter=b.DefaultDelimiter),c.meta.delimiter=m.delimiter}var s=E(m);return m.preview&&m.header&&s.preview++,a=e,o=new w(s),c=o.parse(a,t,i),g(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=U(m.chunk)?\"\":a.substring(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(t.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,U(m.complete)&&m.complete(c),a=\"\"}}function q(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function w(e){var O,D=(e=e||{}).delimiter,I=e.newline,T=e.comments,A=e.step,L=e.preview,F=e.fastMode,z=O=void 0===e.quoteChar?'\"':e.quoteChar;if(void 0!==e.escapeChar&&(z=e.escapeChar),(\"string\"!=typeof D||-1<b.BAD_DELIMITERS.indexOf(D))&&(D=\",\"),T===D)throw new Error(\"Comment character same as delimiter\");!0===T?T=\"#\":(\"string\"!=typeof T||-1<b.BAD_DELIMITERS.indexOf(T))&&(T=!1),\"\\n\"!==I&&\"\\r\"!==I&&\"\\r\\n\"!==I&&(I=\"\\n\");var M=0,j=!1;this.parse=function(a,t,i){if(\"string\"!=typeof a)throw new Error(\"Input must be a string\");var r=a.length,e=D.length,n=I.length,s=T.length,o=U(A),h=[],u=[],f=[],d=M=0;if(!a)return R();if(F||!1!==F&&-1===a.indexOf(O)){for(var l=a.split(I),c=0;c<l.length;c++){if(f=l[c],M+=f.length,c!==l.length-1)M+=I.length;else if(i)return R();if(!T||f.substring(0,s)!==T){if(o){if(h=[],b(f.split(D)),S(),j)return R()}else b(f.split(D));if(L&&L<=c)return h=h.slice(0,L),R(!0)}}return R()}for(var p=a.indexOf(D,M),g=a.indexOf(I,M),_=new RegExp(q(z)+q(O),\"g\"),m=a.indexOf(O,M);;)if(a[M]!==O)if(T&&0===f.length&&a.substring(M,M+s)===T){if(-1===g)return R();M=g+n,g=a.indexOf(I,M),p=a.indexOf(D,M)}else{if(-1!==p&&(p<g||-1===g)){if(!(p<m)){f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}var v=x(p,m,g);if(v&&void 0!==v.nextDelim){p=v.nextDelim,m=v.quoteSearch,f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}}if(-1===g)break;if(f.push(a.substring(M,g)),C(g+n),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0)}else for(m=M,M++;;){if(-1===(m=a.indexOf(O,m+1)))return i||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:M}),E();if(m===r-1)return E(a.substring(M,m).replace(_,O));if(O!==z||a[m+1]!==z){if(O===z||0===m||a[m-1]!==z){-1!==p&&p<m+1&&(p=a.indexOf(D,m+1)),-1!==g&&g<m+1&&(g=a.indexOf(I,m+1));var y=w(-1===g?p:Math.min(p,g));if(a[m+1+y]===D){f.push(a.substring(M,m).replace(_,O)),a[M=m+1+y+e]!==O&&(m=a.indexOf(O,M)),p=a.indexOf(D,M),g=a.indexOf(I,M);break}var k=w(g);if(a.substring(m+1+k,m+1+k+n)===I){if(f.push(a.substring(M,m).replace(_,O)),C(m+1+k+n),p=a.indexOf(D,M),m=a.indexOf(O,M),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:M}),m++}}else m++}return E();function b(e){h.push(e),d=M}function w(e){var t=0;if(-1!==e){var i=a.substring(m+1,e);i&&\"\"===i.trim()&&(t=i.length)}return t}function E(e){return i||(void 0===e&&(e=a.substring(M)),f.push(e),M=r,b(f),o&&S()),R()}function C(e){M=e,b(f),f=[],g=a.indexOf(I,M)}function R(e){return{data:h,errors:u,meta:{delimiter:D,linebreak:I,aborted:j,truncated:!!e,cursor:d+(t||0)}}}function S(){A(R()),h=[],u=[]}function x(e,t,i){var r={nextDelim:void 0,quoteSearch:void 0},n=a.indexOf(O,t+1);if(t<e&&e<n&&(n<i||-1===i)){var s=a.indexOf(D,n);if(-1===s)return r;n<s&&(n=a.indexOf(O,n+1)),r=x(s,n,i)}else r={nextDelim:e,quoteSearch:t};return r}},this.abort=function(){j=!0},this.getCharIndex=function(){return M}}function _(e){var t=e.data,i=a[t.workerId],r=!1;if(t.error)i.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){r=!0,m(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:v,resume:v};if(U(i.userStep)){for(var s=0;s<t.results.data.length&&(i.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!r);s++);delete t.results}else U(i.userChunk)&&(i.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!r&&m(t.workerId,t.results)}function m(e,t){var i=a[e];U(i.userComplete)&&i.userComplete(t),i.terminate(),delete a[e]}function v(){throw new Error(\"Not implemented.\")}function E(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var i in e)t[i]=E(e[i]);return t}function y(e,t){return function(){e.apply(t,arguments)}}function U(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var i=b.parse(t.input,t.config);i&&f.postMessage({workerId:b.WORKER_ID,results:i,finished:!0})}}),(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(u.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(g.prototype=Object.create(u.prototype)).constructor=g,b});","export class AnalysesManager {\n  constructor() {\n    this.analyses = [];\n  }\n\n  addAnalysis(analysis) {\n    let index = this.getAnalysisIndex(analysis.id);\n    if (index === undefined) {\n      this.analyses.push(analysis);\n    } else {\n      this.analyses[index] = analysis;\n    }\n  }\n\n  getAnalyses(options = {}) {\n    const { ids } = options;\n    let analyses = [];\n    for (const analysis of this.analyses) {\n      if (!ids || ids.includes(analysis.id)) {\n        analyses.push(analysis);\n      }\n    }\n    return analyses;\n  }\n\n  /**\n   * Remove the analysis from the AnalysesManager for the specified id\n   * @param {string} id\n   */\n  removeAnalysis(id) {\n    let index = this.getAnalysisIndex(id);\n    if (index === undefined) return undefined;\n    return this.analyses.splice(index, 1);\n  }\n\n  /**\n   * Returns the index of the analysis in the analyses array\n   * @param {string} id\n   * @returns {number}\n   */\n  getAnalysisIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.analyses.length; i++) {\n      let analysis = this.analyses[i];\n      if (analysis.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Checks if the ID of an analysis exists in the AnalysesManager\n   * @param {string} id\n   */\n  includes(id) {\n    return !isNaN(this.getAnalysisIndex(id));\n  }\n}\n","import { convert } from 'jcampconverter';\n\nimport { Analysis } from '../Analysis';\n\n/**\n * Creates a new Analysis from a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {object} [options.id=Math.random()]\n * @param {string} [options.label=options.id] human redeable label\n * @return {Analysis} - New class element with the given data\n */\nexport function fromJcamp(jcamp, options = {}) {\n  let analysis = new Analysis(options);\n  addJcamp(analysis, jcamp, options);\n  return analysis;\n}\n\nfunction addJcamp(analysis, jcamp) {\n  let converted = convert(jcamp, {\n    keepRecordsRegExp: /.*/,\n  });\n\n  for (let entry of converted.flatten) {\n    let currentSpectrum = entry.spectra[0];\n\n    // we ensure variables\n    if (!currentSpectrum.variables) {\n      const variables = {};\n      currentSpectrum.variables = variables;\n      variables.x = {\n        label: currentSpectrum.xUnits,\n        symbol: 'X',\n        data: currentSpectrum.data.x || currentSpectrum.data.X,\n      };\n      variables.y = {\n        label: currentSpectrum.yUnits,\n        symbol: 'Y',\n        data: currentSpectrum.data.y || currentSpectrum.data.Y,\n      };\n    } else {\n      for (let key in currentSpectrum.variables) {\n        const variable = currentSpectrum.variables[key];\n        if (variable.label) continue;\n        variable.label = variable.name || variable.symbol || key;\n        if (variable.units && !variable.label.includes(variable.units)) {\n          variable.label += ` [${variable.units}]`;\n        }\n      }\n    }\n\n    analysis.pushSpectrum(currentSpectrum.variables, {\n      dataType: entry.dataType,\n      title: entry.title,\n      meta: entry.meta,\n    });\n  }\n}\n","import { Analysis } from '..';\n\nimport { parsePerkinElmer } from './parsePerkinElmer';\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} text - String containing the JCAMP data\n * @return {Analysis} - New class element with the given data\n */\nexport function fromPerkinElmer(text) {\n  let analysis = new Analysis();\n  let spectrum = parsePerkinElmer(text);\n\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: spectrum.data.temperature,\n        label: 'Temperature [°C]',\n      },\n      y: {\n        data: spectrum.data.weight,\n        label: 'Weight [mg]',\n      },\n    },\n    {\n      dataType: 'TGA',\n      title: spectrum.meta['Sample ID'],\n      meta: spectrum.meta,\n    },\n  );\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: spectrum.data.time,\n        label: 'Time [s]',\n      },\n      y: {\n        data: spectrum.data.weight,\n        label: 'Weight [mg]',\n      },\n    },\n    {\n      dataType: 'TGA',\n      title: spectrum.meta['Sample ID'],\n      meta: spectrum.meta,\n    },\n  );\n  return analysis;\n}\n","import Papa from 'papaparse';\n\nimport { Analysis } from '..';\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} text - String containing the JCAMP data\n * @return {Analysis} - New class element with the given data\n */\nexport function fromPerkinElmerCSV(text) {\n  let parsed = Papa.parse(text, {\n    skipEmptyLines: true,\n    header: true,\n    dynamicTyping: true,\n  }).data;\n\n  let analysis = new Analysis();\n  analysis.pushSpectrum(\n    {\n      x: {\n        data: parsed.map((d) => d['Program Temperature']),\n        label: 'Program temperature [°C]',\n      },\n      y: {\n        data: parsed.map((d) => d['Unsubtracted Weight']),\n        label: 'Weight [mg]',\n      },\n      t: {\n        data: parsed.map((d) => d['Sample Temperature']),\n        label: 'Sample temperature [°C]',\n      },\n    },\n    { dataType: 'TGA' },\n  );\n\n  analysis.pushSpectrum(\n    {\n      x: { data: parsed.map((d) => d.Time), label: 'Time [s]' },\n      y: {\n        data: parsed.map((d) => d['Unsubtracted Weight']),\n        label: 'Weight [mg]',\n      },\n    },\n    { dataType: 'TGA' },\n  );\n  return analysis;\n}\n","import { addStyle } from './addStyle';\nimport { COLORS } from './colors';\n/**\n * Generate a jsgraph chart format from an array of Analysis\n * @param {Array<Analysis>} analyses\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by all\n * @param {Array} [options.colors] List of colors\n * @param {object} [options.selector={}]\n * @param {object} [options.normalization]\n */\nexport function getJSGraph(analyses, options = {}) {\n  const { colors = COLORS, selector, normalization } = options;\n  let series = [];\n\n  let xLabel = '';\n  let yLabel = '';\n\n  for (let i = 0; i < analyses.length; i++) {\n    const analysis = analyses[i];\n    let serie = {};\n    let currentData = analysis.getNormalizedData({\n      selector,\n      normalization,\n    });\n    if (!currentData) continue;\n    if (!xLabel) xLabel = analysis.getXLabel(selector);\n    if (!yLabel) yLabel = analysis.getYLabel(selector);\n    addStyle(serie, analysis, { color: colors[i] });\n    serie.data = currentData;\n    series.push(serie);\n  }\n  return {\n    axes: {\n      x: {\n        label: xLabel,\n        unit: '',\n        unitWrapperBefore: '',\n        unitWrapperAfter: '',\n        flipped: false,\n        display: true,\n      },\n      y: {\n        label: yLabel,\n        unit: '',\n        unitWrapperBefore: '',\n        unitWrapperAfter: '',\n        flipped: false,\n        display: true,\n      },\n    },\n    series,\n  };\n}\n","export function getNormalizationAnnotations(filter = {}, boundary) {\n  let { exclusions = [] } = filter;\n  let annotations = [];\n  exclusions = exclusions.filter((exclusion) => !exclusion.ignore);\n  annotations = exclusions.map((exclusion) => {\n    let annotation = {\n      type: 'rect',\n      position: [\n        { x: exclusion.from, y: boundary.y.min },\n        { x: exclusion.to, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    };\n    return annotation;\n  });\n  if (filter.from !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: Number.MIN_SAFE_INTEGER, y: boundary.y.min },\n        { x: filter.from, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  if (filter.to !== undefined) {\n    annotations.push({\n      type: 'rect',\n      position: [\n        { x: filter.to, y: boundary.y.min },\n        { x: Number.MAX_SAFE_INTEGER, y: boundary.y.max },\n      ],\n      strokeWidth: 0,\n      fillColor: 'rgba(255,255,224,1)',\n    });\n  }\n  return annotations;\n}\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","max","input","isArray","TypeError","length","maxValue","i","sum","sumValue","norm","output","options","arguments","undefined","_options$algorithm","algorithm","_options$sumValue","_options$maxValue","Error","Array","toLowerCase","absoluteSumValue","absoluteSum","slice","currentMaxValue","factor","_i","sumFactor","_i2","concat","Math","abs","min","minValue","rescale","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","_typeof","obj","Symbol","iterator","constructor","sequentialFill","_options","_options$from","from","_options$to","to","_options$size","size","step","floor","push","normalize","zones","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","JSON","parse","stringify","map","zone","sort","a","b","forEach","filter","currentZone","result","integral","x0","x1","slope","intercept","equallySpaced","arrayXY","x","y","xLength","reverse","variant","numberOfPoints","exclusions","isNaN","exclusion","nextExclusion","invert","unitsPerPoint","reduce","previous","current","currentTotal","round","zonesWithPoints","xResult","yResult","zoneResult","processZone","halfStep","lastStep","start","previousX","MAX_VALUE","previousY","nextX","nextY","frontOutsideSpectra","backOutsideSpectra","currentValue","currentPoints","j","main","equallySpacedSlot","initialOriginalStep","lastOriginalStep","MIN_VALUE","sumAtMin","sumAtMax","add","equallySpacedSmooth","filterX","points","currentFrom","getZones","currentZoneIndex","newX","newY","position","checkRowIndex","matrix","index","outer","rows","checkColumnIndex","columns","checkRowVector","vector","to1DArray","checkColumnVector","checkRowIndices","rowIndices","some","r","checkColumnIndices","columnIndices","c","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","value","array","name","formatNumber","num","numStr","String","padEnd","precise","toPrecision","maxNumSize","exponential","toExponential","eIndex","indexOf","e","substring","AbstractMatrix","newRows","newColumns","newData","newMatrix","Matrix","row","column","set","fill","random","isInteger","interval","this","zeros","data","l","matrix1","matrix2","checkMatrix","get","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","k","echelonForm","clone","h","iMax","swapRows","tmp","reducedEchelonForm","m","n","maxRow","p","pivot","repeat","setSubMatrix","neg","mulS","getRow","getRowVector","rowVector","setRow","row1","row2","temp","getColumn","getColumnVector","columnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","v","maxIndex","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","diag","type","sqrt","cumulativeSum","dot","vector2","vector1","mmul","other","Bcolj","Float64Array","s","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m2","m3","m4","m5","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m6","m7","m8","m9","m12","m13","m14","m15","m16","m17","m18","c02","c12","c20","c21","c22","mmulStrassen","r1","c1","r2","c2","embed","mat","cols","resultat","console","warn","blockMult","halfRows","parseInt","halfCols","subMatrix","sub","scaleRows","isFinite","scaleColumns","flipRows","middle","ceil","first","last","flipColumns","kroneckerProduct","q","transpose","sortRows","compareFunction","compareNumbers","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","checkIndices","rowIndex","columnIndex","trace","by","sumByRow","sumByColumn","sumAll","product","productByRow","productByColumn","productAll","mean","variance","unbiased","sum1","sum2","varianceByRow","varianceByColumn","varianceAll","standardDeviation","center","centerByRow","centerByColumn","centerAll","scale","pow","getScaleByRow","scaleByRow","getScaleByColumn","scaleByColumn","divider","getScaleAll","scaleAll","for","indent","indentData","maxI","maxJ","line","join","inspectData","rand","randomInt","randInt","diagonal","identity","eye","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","addS","addM","subS","subM","subtract","subtractS","subtractM","mul","mulM","multiply","multiplyS","multiplyM","div","divS","divM","divide","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","exp","expm1","fround","log","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","installMathOperations","BaseView","MatrixTransposeView","WrapperMatrix2D","LuDecomposition","t","LUcolj","kmax","lu","pivotVector","pivotSign","LU","isSingular","col","solve","count","X","determinant","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","eps","EPSILON","kase","alpha","ks","f","cs","sn","sp","spm1","epm1","sk","ek","shift","g","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","tol","ii","useSVD","leftHandSide","rightHandSide","defaultOptions","assign","matrixCase","len","cond","arrayCase","windowSize","derivative","polynomial","pad","padValue","savitzkyGolay","C","padArray","ans","J","ones","inic","Jtranspose","factorial","det","d","_ref","module","exports","window","median","quickSelectMedian","xAdd","array1","array2","constant","isConstant","array3","xMultiply","xDivide","keysShim","toStr","str","isArgs","callee","keys","has","hasOwnProperty","require$$0","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","o","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isObject","isFunction","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","shim","args","typedArrays","key","objectKeys","Function","ascending","NaN","bisector","compare","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","number$1","deviation","extent","range","stop","e10","e5","e2","ticks","tickStep","step0","step1","LN10","error","sturges","values","LN2","number","quantile","version","bisect","descending","histogram","domain","xz","tz","pop","bin","bins","_","thresholds","thresholdFreedmanDiaconis","thresholdScott","thresholdSturges","numbers","merge","arrays","merged","pairs","permute","indexes","permutes","scan","xi","xj","shuffle","i0","i1","zip","factory","xSubtract","arithmeticMean","lnsum","means","samples","percent","alreadySorted","half","theMean","theVariance","averageDeviations","stdev","quart","q1","q2","q3","pooledVariance","vari","itemCount","itemArray","mean1","mean2","cov","s2","s3","dev","s4","weights","weightedVariance","weightedMean","z","w","inPlace","standardDev","Analysis","id","label","spectra","pushSpectrum","variables","meta","dataType","title","xVariable","yVariable","variable","units","replace","flavor","standardizeData","getSpectrum","selector","getSpectra","spectrum","getNormalizedData","normalization","filters","processing","filterOptions","Stat","normed","process","kind","getXLabel","getYLabel","GC_MS_FIELDS","complexChromatogram","chromatogram","times","series","ms","dimension","existingGCMSFields","convertMSFieldToLabel","pageValue","parseFloat","isMSField","canonicDataLabel","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","ascii","currentX","firstX","currentY","firstY","endLine","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeCommentRegExp","peakTableSplitRegExp","parsePeakTable","isPeaktable","numberOfVariables","lines","split","trim","logs","parseXYZ","xFactor","parseXY","parseXYA","removeSymbolRegExp","isXYAdata","add2D","zData","minZ","maxZ","ySize","xSize","lastX","lastY","minX","maxX","minY","maxY","noise","getMedian","convertTo3DZ","noContour","contourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","pAx","pAy","pBx","pBy","lineZValue","nbSubSpectra","nbPovars","dx","y0","dy","iter","nbContourLevels","contourLevels","level","contourLevel","side","noiseMultiplier","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","generateContourLines","minMax","FFT","_n","_bitrev","_cstb","core","init","_initArray","_makeBitReversalTable","_makeCosSinTable","fft1d","re","im","fft","ifft1d","bt1d","fft2d","tre","tim","x2","y1","y2","ifft2d","inv","ik","wr","wi","xr","n4","Uint32Array","_paddingZero","n2","n8","n2p4","PI","dc","ds","apis","bt","ifft","Infinity","l1","l2","N","theSum","theProduct","medians","modes","skew","kurt","standardDeviations","standardErrors","sqrtN","scatter","divisor","scores","zScores","cor","standardize","jj","resultRow","sourceRow","weightSum","arrayStat","s1","weightedScatter","gyromagneticRatio","profiling","action","time","Date","now","simpleChromatogram","intensity","postProcessing","entriesFlat","observeFrequency","shiftOffsetVal","entry","ntuples","symbol","xUnits","toUpperCase","includes","nucleus","unit","pageSymbolIndex","pageSymbol","ratio0","ratio1","ratio","postProcessingNMR","newNtuples","twoD","wantXY","keepSpectra","prepareNtuplesDatatable","currentEntry","xIndex","yIndex","firstVariable","secondVariable","charAt","lowerCaseSymbol","vardim","nbPoints","varname","yUnits","prepareSpectrum","ntuplesSeparator","Spectrum","keepRecordsRegExp","canonicDataLabels","canonicMetadataLabels","dynamicTyping","withoutXY","addStyle","serie","color","style","width","dash","COLORS","fromVariables","info","forceNtuples","jcampOptions","xLabel","yLabel","owner","origin","header","fromJSON","varName","varType","varDim","minFct","maxFct","point","creatorNtuples","getJcamp","string","self","document","postMessage","test","location","protocol","dynamicTypingFunction","transform","worker","WORKERS_SUPPORTED","URL","webkitURL","BLOB_URL","createObjectURL","Blob","Worker","onmessage","userStep","userChunk","chunk","userComplete","complete","userError","config","workerId","download","readable","read","on","File","stream","unparse","delimiter","BAD_DELIMITERS","quotes","skipEmptyLines","newline","quoteChar","escapeChar","RegExp","u","fields","RECORD_SEP","fromCharCode","UNIT_SEP","BYTE_ORDER_MARK","NODE_STREAM_INPUT","LocalChunkSize","RemoteChunkSize","DefaultDelimiter","Parser","ParserHandle","NetworkStreamer","FileStreamer","StringStreamer","ReadableStreamStreamer","jQuery","fn","each","prop","attr","FileReader","files","file","inputElem","instanceConfig","extend","before","reason","_handle","_finished","_completed","_halted","_input","_baseIndex","_partialLine","_rowCount","_start","_nextChunk","isFirstChunk","_completeResults","errors","E","chunkSize","streamer","_config","parseChunk","beforeFirstChunk","paused","aborted","cursor","preview","results","WORKER_ID","finished","_sendError","_readChunk","_chunkLoaded","XMLHttpRequest","withCredentials","onload","onerror","_chunkError","open","downloadRequestBody","downloadRequestHeaders","setRequestHeader","send","message","status","readyState","responseText","getResponseHeader","lastIndexOf","statusText","webkitSlice","mozSlice","FileReaderSync","readAsText","encoding","target","pause","resume","_streamData","_streamEnd","_streamError","_checkIsFinished","_streamCleanUp","removeListener","abort","transformHeader","code","comments","successful","bestDelimiter","delimitersToGuess","getCharIndex","setTimeout","O","D","I","T","A","L","F","fastMode","M","R","S","nextDelim","quoteSearch","linebreak","truncated","terminate","create","analyses","addAnalysis","analysis","getAnalysisIndex","getAnalyses","ids","removeAnalysis","jcamp","converted","entries","tmpResult","children","parentsStack","ldrs","ldr","dataLabel","dataValue","infos","datatable","parentEntry","dataClass","xType","shiftOffsetNum","vartype","varform","yType","page","sampleDescription","match","startsWith","parsedValue","flatten","convert","currentSpectrum","addJcamp","text","weight","temperature","section","inMethodSteps","description","parsePerkinElmer","parsed","Papa","Time","colors","axes","unitWrapperBefore","unitWrapperAfter","flipped","display","boundary","annotations","ignore","strokeWidth","fillColor","MIN_SAFE_INTEGER","MAX_SAFE_INTEGER","jcamps"],"mappings":"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"}