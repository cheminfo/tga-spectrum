{"version":3,"file":"tga-spectrum.js","sources":["../node_modules/is-any-array/src/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/ml-stat/array.js","../node_modules/ml-array-normed/node_modules/is-any-array/src/index.js","../node_modules/.pnpm/registry.npmjs.org/is-any-array/0.0.3/node_modules/is-any-array/src/index.js","../node_modules/.pnpm/registry.npmjs.org/ml-array-max/1.1.2/node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/.pnpm/registry.npmjs.org/ml-array-min/1.1.2/node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-array-xy-filter-x/src/index.js","../src/util/getNormalized.js","../src/Spectrum.js","../src/Spectra.js","../src/from/parsePerkinElmer.js","../src/from/fromPerkinElmer.js","../node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/jcampconverter/src/2d/add2D.js","../node_modules/jcampconverter/src/profiling.js","../node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/jcampconverter/src/postProcessing.js","../node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/jcampconverter/src/convert.js","../src/addJcamp.js","../src/from/fromJcamp.js","../node_modules/.pnpm/registry.npmjs.org/ml-xy-convert/1.0.0/node_modules/ml-xy-convert/src/from.js","../node_modules/.pnpm/registry.npmjs.org/ml-xy-convert/1.0.0/node_modules/ml-xy-convert/src/to.js","../node_modules/.pnpm/registry.npmjs.org/ml-xy-convert/1.0.0/node_modules/ml-xy-convert/src/index.js","../node_modules/.pnpm/registry.npmjs.org/convert-to-jcamp/2.0.1/node_modules/convert-to-jcamp/src/creator.js","../node_modules/.pnpm/registry.npmjs.org/convert-to-jcamp/2.0.1/node_modules/convert-to-jcamp/src/index.js","../src/to/toJcamp.js","../src/jsgraph/addStyle.js","../src/jsgraph/getJSGraph.js"],"sourcesContent":["'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @param {number} [options.maxValue=1] new max value for algo max\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input);\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumValue = sum(input);\n        if (sumValue === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumValue;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","import equallySpaced from 'ml-array-xy-equally-spaced';\nimport Stat from 'ml-stat/array';\nimport normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport filterX from 'ml-array-xy-filter-x';\n\n/**\n *\n * @private\n * @param {object} spectrum\n * @param {object} [options={}]\n * @param {number} [options.from=spectrum.x[0]]\n * @param {number} [options.to=spectrum.x[spectrum.x.length-1]]\n * @param {number} [options.numberOfPoints]\n * @param {Array} [options.filters=[]]\n * @param {Array} [options.exclusions=[]]\n */\nexport default function getNormalized(spectrum, options = {}) {\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints,\n    filters = [],\n    exclusions = [],\n  } = options;\n\n  let y = spectrum.y.slice(0);\n  console.log({ filters });\n  for (let filter of filters) {\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = Stat.mean(spectrum.y);\n        let meanFct = (y) => y - mean;\n        y = y.map(meanFct);\n        break;\n      }\n      case 'scaleSD': {\n        let std = Stat.standardDeviation(spectrum.y);\n        let stdFct = (y) => y / std;\n        y = y.map(stdFct);\n        break;\n      }\n      case 'normalize': {\n        y = normed(y);\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y);\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n  console.log({ from, to, spectrum, numberOfPoints });\n  if (!numberOfPoints) {\n    return filterX({ x: spectrum.x, y }, { from, to, exclusions });\n  }\n\n  return equallySpaced(\n    { x: spectrum.x, y },\n    { from, to, numberOfPoints, exclusions },\n  );\n}\n","import getNormalized from './util/getNormalized';\nimport sortX from 'ml-array-xy-sort-x';\n\nconst DEFAULT_FLAVOR = 'weightVersusTemperature';\n\n/**\n * Class allowing to store and manipulate a spectrum\n * @class Spectrum\n * @param {object} [data={}] - object containing a spectrum\n * @param {Array} [data.x=[]] - voltage\n * @param {Array} [data.y=[]] - intensity\n * @param {object} [options={}]\n */\nexport default class Spectrum {\n  constructor(options = {}) {\n    this.id = options.id || Math.random().toString(36).substring(2, 10);\n    this.flavors = {};\n  }\n\n  set(points, options = {}) {\n    const { flavor = DEFAULT_FLAVOR } = options;\n    this.flavors[flavor.toLowerCase()] = standardizeData(points, options);\n  }\n\n  get(flavor = DEFAULT_FLAVOR) {\n    flavor = flavor.toLowerCase();\n    if (!this.flavors[flavor]) {\n      return undefined;\n    }\n    return this.flavors[flavor];\n  }\n\n  getData(options = {}) {\n    const { flavor, normalization } = options;\n    let data = this.get(flavor);\n    if (!data) return undefined;\n    return getNormalized(data, normalization);\n  }\n\n  getXLabel(flavor) {\n    return this.get(flavor).xAxis;\n  }\n\n  getYLabel(flavor) {\n    return this.get(flavor).yAxis;\n  }\n}\n\nfunction standardizeData(points, options = {}) {\n  const { meta = {}, tmp = {}, xLabel = '', yLabel = '', title = '' } = options;\n  if (false) {\n    points = sortX(points);\n  } else {\n    let { x, y } = points;\n    if (x && x.length > 1 && x[0] > x[x.length - 1]) {\n      x = x.reverse();\n      y = y.reverse();\n    } else {\n      x = x || [];\n      y = y || [];\n    }\n    points = { x, y };\n  }\n\n  return {\n    x: points.x,\n    y: points.y,\n    xLabel,\n    yLabel,\n    title,\n    meta,\n    tmp,\n  };\n}\n","export default class Spectra {\n  constructor() {\n    this.data = [];\n  }\n\n  addSpectrum(spectrum) {\n    let index = this.getSpectrumIndex(spectrum.id);\n    if (index === undefined) {\n      this.data.push(spectrum);\n    } else {\n      this.data[index] = spectrum;\n    }\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.data.splice(index, 1);\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.data.length; i++) {\n      let spectrum = this.data[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n}\n","export default function parsePerkinElmer(text) {\n  let lines = text.split(/[\\r\\n]+/);\n  let result = { meta: {}, data: { time: [], weight: [], temperature: [] } };\n  let section = '';\n  let inMethodSteps = false;\n  for (let line of lines) {\n    if (inMethodSteps) {\n      if (line.startsWith('1) TGA')) {\n        inMethodSteps = false;\n      } else {\n        if (!result.meta['Method Steps']) result.meta['Method Steps'] = '';\n        result.meta['Method Steps'] += `${line.replace(/\\t/g, '  ')}\\n`;\n      }\n    } else if (line.match(/^[a-zA-Z -]+$/)) {\n      section = trim(line);\n    } else if (line.match(/.*:.*/)) {\n      let position = line.indexOf(':');\n      let description = line.substring(0, position);\n      let value = trim(line.substring(position + 1));\n      result.meta[(section ? `${section}_` : '') + description] = value;\n    } else if (line.match(/^[0-9\\t .]+$/)) {\n      let fields = line.replace(/^\\t/, '').split('\\t');\n      result.data.time.push(Number(fields[0]));\n      result.data.weight.push(Number(fields[1]));\n      result.data.temperature.push(Number(fields[4]));\n    } else {\n      //  console.log('Problem: ', line);\n    }\n    if (line.startsWith('Method Steps:')) {\n      inMethodSteps = true;\n    }\n  }\n  return result;\n}\n\nfunction trim(string) {\n  return string.replace(/^[ \\t]*(.*?)[ \\t]*$/, '$1');\n}\n","import Spectrum from '../Spectrum';\n\nimport parsePerkinElmer from './parsePerkinElmer';\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} text - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nexport default function fromPerkinElmer(text) {\n  let spectrum = new Spectrum();\n  let result = parsePerkinElmer(text);\n\n  spectrum.set(\n    { x: result.data.temperature, y: result.data.weight },\n    {\n      xLabel: 'Temperature [°C]',\n      yLabel: 'Weight [mg]',\n      title: result.meta['Sample ID'],\n      meta: result.meta,\n      flavor: 'weightVersusTemperature',\n    },\n  );\n  spectrum.set(result.data.time, result.data.weight, {\n    xLabel: 'Time [s]',\n    yLabel: 'Weight [mg]',\n    title: result.meta['Sample ID'],\n    meta: result.meta,\n    flavor: 'weightVersusTime',\n  });\n  return spectrum;\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  // TODO to be improved using 2 array {x:[], y:[]}\n  let currentData = [];\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.push(currentX);\n                currentData.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","export default function parsePeakTable(spectrum, value, result) {\n  let removeCommentRegExp = /\\$\\$.*/;\n  let peakTableSplitRegExp = /[,\\t ]+/;\n\n  spectrum.isPeaktable = true;\n  let values;\n  let currentData = [];\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = [];\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.push(parseFloat(values[0]));\n    currentData.push(parseFloat(values[1]));\n  }\n}\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.length / 2;\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = new Array(xSize);\n    let xVector = spectra[i].data;\n    for (let j = 0; j < xSize; j++) {\n      let value = xVector[j * 2 + 1];\n      z[i][j] = value;\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data[0];\n  const lastX = spectra[0].data[spectra[0].data.length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && options.wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (entry.spectra && entry.spectra.length > 0) {\n        for (let spectrum of entry.spectra) {\n          if (spectrum.data) {\n            let data = spectrum.data;\n            let newData = {\n              x: new Array(data.length / 2),\n              y: new Array(data.length / 2),\n            };\n            for (let k = 0; k < data.length; k = k + 2) {\n              newData.x[k / 2] = data[k];\n              newData.y[k / 2] = data[k + 1];\n            }\n            spectrum.data = newData;\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n  if (spectrum.observeFrequency) {\n    if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n      spectrum.xUnit = 'PPM';\n      spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n      spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n      spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n      spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n    }\n  }\n  if (spectrum.shiftOffsetVal) {\n    let shift = spectrum.firstX - spectrum.shiftOffsetVal;\n    spectrum.firstX = spectrum.firstX - shift;\n    spectrum.lastX = spectrum.lastX - shift;\n  }\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[, \\t]+/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  dynamicTyping: false,\n  xy: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\nexport default function convert(jcamp, options) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        let xIndex = -1;\n        let yIndex = -1;\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        if (infos[0].indexOf('++') > 0) {\n          let firstVariable = infos[0].replace(\n            /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n            '$1',\n          );\n          let secondVariable = infos[0].replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n          xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n          yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n        }\n\n        if (xIndex === -1) xIndex = 0;\n        if (yIndex === -1) yIndex = 0;\n\n        if (currentEntry.ntuples.first) {\n          if (currentEntry.ntuples.first.length > xIndex) {\n            spectrum.firstX = currentEntry.ntuples.first[xIndex];\n          }\n          if (currentEntry.ntuples.first.length > yIndex) {\n            spectrum.firstY = currentEntry.ntuples.first[yIndex];\n          }\n        }\n        if (currentEntry.ntuples.last) {\n          if (currentEntry.ntuples.last.length > xIndex) {\n            spectrum.lastX = currentEntry.ntuples.last[xIndex];\n          }\n          if (currentEntry.ntuples.last.length > yIndex) {\n            spectrum.lastY = currentEntry.ntuples.last[yIndex];\n          }\n        }\n        if (\n          currentEntry.ntuples.vardim &&\n          currentEntry.ntuples.vardim.length > xIndex\n        ) {\n          spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n        }\n        if (currentEntry.ntuples.factor) {\n          if (currentEntry.ntuples.factor.length > xIndex) {\n            spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n          }\n          if (currentEntry.ntuples.factor.length > yIndex) {\n            spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n          }\n        }\n        if (currentEntry.ntuples.units) {\n          if (currentEntry.ntuples.units.length > xIndex) {\n            spectrum.xUnit = currentEntry.ntuples.units[xIndex];\n          }\n          if (currentEntry.ntuples.units.length > yIndex) {\n            spectrum.yUnit = currentEntry.ntuples.units[yIndex];\n          }\n        }\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.indexOf('nD') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.indexOf('nD') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnit = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnit = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$SFO2') {\n      if (!currentEntry.indirectFrequency) {\n        currentEntry.indirectFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n      let pageSymbolIndex = currentEntry.ntuples.symbol.indexOf(\n        spectrum.pageSymbol,\n      );\n      let unit = '';\n      if (\n        currentEntry.ntuples.units &&\n        currentEntry.ntuples.units[pageSymbolIndex]\n      ) {\n        unit = currentEntry.ntuples.units[pageSymbolIndex];\n      }\n      if (currentEntry.indirectFrequency && unit !== 'PPM') {\n        spectrum.pageValue /= currentEntry.indirectFrequency;\n      }\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n      let value = dataValue.trim();\n      if (options.dynamicTyping && !isNaN(value)) {\n        value = Number(value);\n      }\n      if (currentEntry.info[label]) {\n        if (!Array.isArray(currentEntry.info[label])) {\n          currentEntry.info[label] = [currentEntry.info[label]];\n        }\n        currentEntry.info[label].push(value);\n      } else {\n        currentEntry.info[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","import { convert } from 'jcampconverter';\n\nexport default function addJcamp(spectrum, jcamp) {\n  let converted = convert(jcamp, {\n    keepRecordsRegExp: /.*/,\n    canonicDataLabels: false,\n    dynamicTyping: true,\n  });\n\n  for (let entry of converted.flatten) {\n    let currentSpectrum = entry.spectra[0];\n\n    let xLabel = currentSpectrum.xUnit;\n    let yLabel = currentSpectrum.yUnit;\n\n    let flavor = '';\n    if (xLabel.match(/\\[.*C\\]/)) flavor = 'weightVersusTemperature';\n    if (xLabel.match(/\\[.*s\\]/)) flavor = 'weightVersusTime';\n    if (flavor) {\n      spectrum.set(currentSpectrum.data, {\n        flavor,\n        xLabel,\n        yLabel,\n        title: currentSpectrum.title,\n      });\n    }\n  }\n}\n","import Spectrum from '../Spectrum';\nimport addJcamp from '../addJcamp';\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {object} [options.id=Math.random()]\n * @return {Spectrum} - New class element with the given data\n */\nexport default function fromJcamp(jcamp, options = {}) {\n  let spectrum = new Spectrum(options);\n  addJcamp(spectrum, jcamp);\n  return spectrum;\n}\n","export function fromXxyyArray(data) {\n  return { x: data[0], y: data[1] };\n}\n\nexport function fromXyxyArray(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point[0]);\n    y.push(point[1]);\n  }\n  return { x, y };\n}\n\nexport function fromXyxyObject(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point.x);\n    y.push(point.y);\n  }\n  return { x, y };\n}\n\nexport function fromGeneral(data) {\n  if (Array.isArray(data)) {\n    if (data.length === 0) return { x: [], y: [] };\n    if (Array.isArray(data[0])) {\n      if (data.length === 2) {\n        return fromXxyyArray(data);\n      } else {\n        return fromXyxyArray(data);\n      }\n    } else {\n      return fromXyxyObject(data);\n    }\n  } else {\n    if (Array.isArray(data.x) && Array.isArray(data.x)) {\n      return data;\n    } else {\n      throw new TypeError('unknown data format');\n    }\n  }\n}\n","export function toXxyyArray({ x, y }) {\n  return [x, y];\n}\n\nexport function toXyxyArray({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push([x[index], y[index]]);\n  }\n  return ans;\n}\n\nexport function toXyxyObject({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push({ x: x[index], y: y[index] });\n  }\n  return ans;\n}\n","import { fromGeneral, fromXxyyArray, fromXyxyArray, fromXyxyObject } from './from';\nimport { toXxyyArray, toXyxyArray, toXyxyObject } from './to';\n\n/**\n * Convert between different xy formats\n * @param {*} data - input set of points to parse\n * @param {object} [options] - input and output options\n * @param {string} [options.inputFormat] - input format, if not in list infers the kind\n * @param {string} [options.outputFormat = 'xxyyObject'] - output format\n * @return {*} - output set of points\n */\nexport default function xyConvert(data, options = {}) {\n  const { inputFormat, outputFormat = 'xxyyObject' } = options;\n\n  if (inputFormat === outputFormat) return data;\n\n  let middleData;\n  switch (inputFormat) {\n    case 'xxyyArray':\n      middleData = fromXxyyArray(data);\n      break;\n\n    case 'xyxyArray':\n      middleData = fromXyxyArray(data);\n      break;\n\n    case 'xxyyObject':\n      // this is the base case\n      middleData = data;\n      break;\n\n    case 'xyxyObject':\n      middleData = fromXyxyObject(data);\n      break;\n\n    default:\n      middleData = fromGeneral(data);\n      break;\n  }\n\n  switch (outputFormat) {\n    case 'xxyyArray':\n      return toXxyyArray(middleData);\n\n    case 'xyxyArray':\n      return toXyxyArray(middleData);\n\n    case 'xxyyObject':\n      return middleData;\n\n    case 'xyxyObject':\n      return toXyxyObject(middleData);\n\n    default:\n      throw new TypeError(`unknown output format ${outputFormat}`);\n  }\n}\n","/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} data\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creator(data, meta = {}) {\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    type = '',\n    xUnit = '',\n    yUnit = '',\n    info = {},\n  } = meta;\n  let firstX = Number.POSITIVE_INFINITY;\n  let lastX = Number.NEGATIVE_INFINITY;\n  let firstY = Number.POSITIVE_INFINITY;\n  let lastY = Number.NEGATIVE_INFINITY;\n  let points = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${type}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnit}\n##YUNITS=${yUnit}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key of Object.keys(info)) {\n    header += `##$${key}=${info[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import { parseXY } from 'xy-parser';\nimport xyConvert from 'ml-xy-convert';\n\nimport creator from './creator';\n\n/**\n * Convert strings into JCAMP and add extra information\n * @param {string} data - values to add to the file, usually a csv or tsv values\n * @param {object} [options={}]\n * @param {string} [options.meta] - metadata of the file\n * @param {string} [options.meta.title = ''] - title of the file\n * @param {string} [options.meta.owner = ''] - owner of the file\n * @param {string} [options.meta.origin = ''] - origin of the file\n * @param {string} [options.meta.type = ''] - type of data\n * @param {string} [options.meta.xUnit = ''] - units for the x axis\n * @param {string} [options.meta.yUnit = ''] - units for the y axis\n * @param {object} [options.meta.info = {}] - comments to add to the file\n * @param {object} [options.parser = {}] - 'xy-parser' options. arrayType = 'xyxy' is enforced\n * @return {string} JCAMP of the input\n */\nexport function fromText(data, options = {}) {\n  const { meta = {}, parserOptions = {} } = options;\n\n  parserOptions.keepInfo = true;\n  let parsed = parseXY(data, parserOptions);\n\n  if (!meta.info) meta.info = {};\n  meta.info.header = parsed.info.map((i) => i.value).join('\\n');\n  let jcamp = creator(parsed.data, meta);\n  return jcamp;\n}\n\n/**\n * Parse from any supported format in ml-xy-convert\n * @param {*} data - object or array with a set of points\n * @param {object} [meta] - metadata object\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, meta = {}) {\n  const parsed = xyConvert(data, { outputFormat: 'xxyyObject' });\n  return creator(parsed, meta);\n}\n","import { fromJSON } from 'convert-to-jcamp';\n\nexport default function toJcamp(spectrum) {\n  let jcamps = [];\n  let weightVersusTemperature = spectrum.get('weightVersusTemperature');\n  if (weightVersusTemperature) {\n    jcamps.push(getJcamp(weightVersusTemperature));\n  }\n  let weightVersusTime = spectrum.get('weightVersusTime');\n  if (weightVersusTime) {\n    jcamps.push(getJcamp(weightVersusTime));\n  }\n\n  return jcamps.join('\\n');\n}\n\nfunction getJcamp(spectrum) {\n  let options = {\n    xUnit: spectrum.xLabel,\n    yUnit: spectrum.yLabel,\n    title: spectrum.title,\n    type: 'TGA',\n    info: spectrum.meta,\n  };\n  return fromJSON({ x: spectrum.x, y: spectrum.y }, options);\n}\n","export default function addStyle(data, spectrum, options = {}) {\n  const { color = 'darkgrey' } = options;\n  data.styles = {\n    unselected: {\n      lineColor: color,\n      lineWidth: 1,\n      lineStyle: 1,\n    },\n    selected: {\n      lineColor: color,\n      lineWidth: 3,\n      lineStyle: 1,\n    },\n  };\n  data.label = spectrum.id;\n}\n","import addStyle from './addStyle';\n\n/**\n * Retrieve a chart with selected original data\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.colors] List of colors\n * @param {Array} [options.flavor]\n * @param {object} [options.normalized]\n */\nexport default function getJSGraph(spectra, options = {}) {\n  let data = spectra.data || spectra;\n  const { ids, colors, flavor, normalized } = options;\n  let chart = {\n    data: [],\n  };\n\n  for (let i = 0; i < data.length; i++) {\n    const spectrum = data[i];\n    if (!ids || ids.includes(spectrum.id)) {\n      let currentData = spectrum.getData({ flavor, normalized });\n      if (!currentData) continue;\n      addStyle(currentData, spectrum, { color: colors[i] });\n      chart.data.push(currentData);\n    }\n  }\n  return chart;\n}\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","_typeof","obj","Symbol","iterator","constructor","sequentialFill","input","arguments","length","undefined","options","isArray","TypeError","_options","_options$from","from","_options$to","to","_options$size","size","step","Error","Math","floor","Array","i","push","_i","normalize","zones","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","JSON","parse","stringify","map","zone","sort","a","b","forEach","filter","currentZone","result","invert","exclusions","exclusion","nextExclusion","zonesWithPoints","numberOfPoints","totalSize","reduce","previous","current","unitsPerPoint","currentTotal","min","round","integral","x0","x1","slope","intercept","equallySpacedSmooth","x","y","xLength","halfStep","output","initialOriginalStep","lastOriginalStep","max","previousX","MIN_VALUE","previousY","nextX","nextY","currentValue","sumAtMin","sumAtMax","j","getSlope","y0","y1","add","main","equallySpacedSlot","lastStep","start","MAX_VALUE","frontOutsideSpectra","backOutsideSpectra","currentPoints","equallySpaced","arrayXY","reverse","slice","variant","RangeError","isNaN","xResult","yResult","zoneResult","processZone","concat","compareNumbers","exports","sum","values","l","minMax","arithmeticMean","geometricMean","mul","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","k","harmonicMean","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","mean","theVariance","standardDeviation","sqrt","standardError","robustMeanAndStdev","stdev","averageDeviations","abs","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","index","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","standardize","standardDev","cumulativeSum","array","sumValue","norm","_options$algorithm","algorithm","_options$maxValue","toLowerCase","absoluteSumValue","absoluteSum","currentMaxValue","factor","_i2","minValue","rescale","currentMin","currentMax","_options$min","autoMinMax","_options$max","getZones","currentFrom","filterX","points","currentZoneIndex","newX","newY","position","getNormalized","spectrum","filters","console","name","Stat","meanFct","std","stdFct","normed","process","kind","DEFAULT_FLAVOR","Spectrum","id","random","substring","flavors","set","flavor","standardizeData","get","getData","normalization","data","getXLabel","xAxis","getYLabel","yAxis","meta","tmp","xLabel","yLabel","title","Spectra","addSpectrum","getSpectrumIndex","removeSpectrum","splice","contains","parsePerkinElmer","text","lines","split","time","weight","temperature","section","inMethodSteps","line","startsWith","replace","match","trim","description","value","fields","string","fromPerkinElmer","GC_MS_FIELDS","complexChromatogram","spectra","chromatogram","times","series","ms","dimension","existingGCMSFields","label","convertMSFieldToLabel","pageValue","parseFloat","isMSField","canonicDataLabel","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","currentX","firstX","currentY","firstY","endLine","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","parsePeakTable","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","xFactor","logs","parseXYA","removeSymbolRegExp","isXYAdata","d","e","f","h","_ref","module","window","quickSelectMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","lastX","lastY","minX","maxX","minY","maxY","noise","getMedian","generateContourLines","zData","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","dx","yN","dy","iter","nbContourLevels","contourLevels","lineZValue","level","contourLevel","side","noiseMultiplier","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","add2D","noContour","contourLines","profiling","action","Date","now","simpleChromatogram","intensity","postProcessing","entriesFlat","entry","keys","ntuples","newNtuples","key","twoD","wantXY","keepSpectra","xy","newData","prepareSpectrum","observeFrequency","xUnit","toUpperCase","shiftOffsetVal","shift","ntuplesSeparator","defaultOptions","keepRecordsRegExp","canonicDataLabels","dynamicTyping","withoutXY","convert","jcamp","assign","entries","tmpResult","children","currentEntry","parentsStack","ldrs","ldr","dataLabel","dataValue","xIndex","yIndex","infos","firstVariable","secondVariable","symbol","first","last","vardim","nbPoints","units","yUnit","datatable","parentEntry","info","dataType","dataClass","xType","indirectFrequency","shiftOffsetNum","varname","vartype","varform","yType","page","pageSymbol","pageSymbolIndex","unit","sampleDescription","pop","flatten","addJcamp","converted","currentSpectrum","fromJcamp","fromXxyyArray","fromXyxyArray","point","fromXyxyObject","fromGeneral","toXxyyArray","toXyxyArray","ans","toXyxyObject","xyConvert","inputFormat","outputFormat","middleData","creator","owner","origin","type","header","join","fromJSON","parsed","toJcamp","jcamps","weightVersusTemperature","getJcamp","weightVersusTime","addStyle","color","styles","unselected","lineColor","lineWidth","lineStyle","selected","getJSGraph","ids","colors","normalized","chart","includes"],"mappings":"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"}