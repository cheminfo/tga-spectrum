{"version":3,"file":"tga-spectrum.js","sources":["../node_modules/ml-array-normed/node_modules/is-any-array/src/index.js","../node_modules/is-any-array/src/index.js","../node_modules/ml-array-max/lib-es6/index.js","../node_modules/ml-array-sum/lib-es6/index.js","../node_modules/ml-array-normed/lib-es6/index.js","../node_modules/ml-array-min/lib-es6/index.js","../node_modules/ml-array-rescale/lib-es6/index.js","../node_modules/ml-array-sequential-fill/lib-es6/index.js","../node_modules/ml-zones/src/normalize.js","../node_modules/ml-zones/src/invert.js","../node_modules/ml-zones/src/zonesWithPoints.js","../node_modules/ml-array-xy-equally-spaced/src/integral.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","../node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","../node_modules/ml-array-xy-equally-spaced/src/index.js","../node_modules/ml-array-xy-filter-x/src/getZones.js","../node_modules/ml-array-xy-filter-x/src/index.js","../node_modules/ml-stat/array.js","../node_modules/ml-spectra-processing/src/x/findClosestIndex.js","../node_modules/ml-spectra-processing/src/x/getFromToIndex.js","../node_modules/ml-spectra-processing/src/x/getTargetIndex.js","../node_modules/ml-spectra-processing/src/x/add.js","../node_modules/ml-spectra-processing/src/x/multiply.js","../node_modules/ml-spectra-processing/src/x/dotProduct.js","../node_modules/ml-spectra-processing/src/x/crossCorrelation.js","../node_modules/ml-spectra-processing/src/x/autoCorrelation.js","../node_modules/ml-spectra-processing/src/x/boxPlot.js","../node_modules/ml-spectra-processing/src/x/correlation.js","../node_modules/ml-spectra-processing/src/x/divide.js","../node_modules/ml-spectra-processing/src/x/rotate.js","../node_modules/ml-spectra-processing/src/x/subtract.js","../node_modules/ml-spectra-processing/src/x/index.js","../node_modules/ml-matrix/src/util.js","../node_modules/ml-matrix/src/stat.js","../node_modules/ml-matrix/src/inspect.js","../node_modules/ml-matrix/src/mathOperations.js","../node_modules/ml-matrix/src/matrix.js","../node_modules/ml-matrix/src/views/base.js","../node_modules/ml-matrix/src/views/transpose.js","../node_modules/ml-matrix/src/wrap/WrapperMatrix2D.js","../node_modules/ml-matrix/src/dc/lu.js","../node_modules/ml-matrix/src/dc/util.js","../node_modules/ml-matrix/src/dc/qr.js","../node_modules/ml-matrix/src/dc/svd.js","../node_modules/ml-matrix/src/decompositions.js","../node_modules/ml-pad-array/src/index.js","../node_modules/ml-savitzky-golay/src/index.js","../src/util/getNormalized.js","../src/Spectrum.js","../src/SpectraManager.js","../src/from/parsePerkinElmer.js","../src/from/fromPerkinElmer.js","../node_modules/jcampconverter/src/complexChromatogram.js","../node_modules/jcampconverter/src/convertToFloatArray.js","../node_modules/jcampconverter/src/parse/fastParseXYData.js","../node_modules/jcampconverter/src/parse/parsePeakTable.js","../node_modules/jcampconverter/src/parse/parseXYA.js","../node_modules/median-quickselect/lib/median-quickselect.min.js","../node_modules/ml-array-median/lib-es6/index.js","../node_modules/jcampconverter/src/2d/convertTo3DZ.js","../node_modules/jcampconverter/src/2d/generateContourLines.js","../node_modules/jcampconverter/src/2d/add2D.js","../node_modules/jcampconverter/src/profiling.js","../node_modules/jcampconverter/src/simpleChromatogram.js","../node_modules/jcampconverter/src/postProcessing.js","../node_modules/jcampconverter/src/prepareSpectrum.js","../node_modules/jcampconverter/src/convert.js","../src/addJcamp.js","../src/from/fromJcamp.js","../node_modules/ml-xy-convert/src/from.js","../node_modules/ml-xy-convert/src/to.js","../node_modules/ml-xy-convert/src/index.js","../node_modules/convert-to-jcamp/src/creator.js","../node_modules/convert-to-jcamp/src/index.js","../src/to/toJcamp.js","../src/jsgraph/addStyle.js","../src/jsgraph/getJSGraph.js"],"sourcesContent":["const toString = Object.prototype.toString;\n\nexport default function isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var maxValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > maxValue) maxValue = input[i];\n  }\n\n  return maxValue;\n}\n\nexport default max;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the mean of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction sum(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += input[i];\n  }\n\n  return sumValue;\n}\n\nexport default sum;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport sum from 'ml-array-sum';\n\n/**\n * Computes the norm of the given values\n * @param {Array<number>} input\n * @param {object} [options={}]\n * @param {string} [options.algorithm='absolute'] absolute, sum or max\n * @param {number} [options.maxValue=1] new max value for algo max\n * @param {number} [options.sumValue=1] new max value for algo absolute and sum\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n * @return {number}\n */\n\nfunction norm(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$algorithm = options.algorithm,\n      algorithm = _options$algorithm === void 0 ? 'absolute' : _options$algorithm,\n      _options$sumValue = options.sumValue,\n      sumValue = _options$sumValue === void 0 ? 1 : _options$sumValue,\n      _options$maxValue = options.maxValue,\n      maxValue = _options$maxValue === void 0 ? 1 : _options$maxValue;\n\n  if (!isArray(input)) {\n    throw new Error('input must be an array');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  if (input.length === 0) {\n    throw new Error('input must not be empty');\n  }\n\n  switch (algorithm.toLowerCase()) {\n    case 'absolute':\n      {\n        var absoluteSumValue = absoluteSum(input) / sumValue;\n        if (absoluteSumValue === 0) return input.slice(0);\n\n        for (var i = 0; i < input.length; i++) {\n          output[i] = input[i] / absoluteSumValue;\n        }\n\n        return output;\n      }\n\n    case 'max':\n      {\n        var currentMaxValue = max(input);\n        if (currentMaxValue === 0) return input.slice(0);\n        var factor = maxValue / currentMaxValue;\n\n        for (var _i = 0; _i < input.length; _i++) {\n          output[_i] = input[_i] * factor;\n        }\n\n        return output;\n      }\n\n    case 'sum':\n      {\n        var sumFactor = sum(input) / sumValue;\n        if (sumFactor === 0) return input.slice(0);\n\n        for (var _i2 = 0; _i2 < input.length; _i2++) {\n          output[_i2] = input[_i2] / sumFactor;\n        }\n\n        return output;\n      }\n\n    default:\n      throw new Error(\"norm: unknown algorithm: \".concat(algorithm));\n  }\n}\n\nfunction absoluteSum(input) {\n  var sumValue = 0;\n\n  for (var i = 0; i < input.length; i++) {\n    sumValue += Math.abs(input[i]);\n  }\n\n  return sumValue;\n}\n\nexport default norm;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var minValue = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < minValue) minValue = input[i];\n  }\n\n  return minValue;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\nimport max from 'ml-array-max';\nimport min from 'ml-array-min';\n\n/**\n *\n * @param {Array} input\n * @param {object} [options={}]\n * @param {Array} [options.output=[]] specify the output array, can be the input array for in place modification\n */\n\nfunction rescale(input) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  } else if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var output;\n\n  if (options.output !== undefined) {\n    if (!isArray(options.output)) {\n      throw new TypeError('output option must be an array if specified');\n    }\n\n    output = options.output;\n  } else {\n    output = new Array(input.length);\n  }\n\n  var currentMin = min(input);\n  var currentMax = max(input);\n\n  if (currentMin === currentMax) {\n    throw new RangeError('minimum and maximum input values are equal. Cannot rescale a constant array');\n  }\n\n  var _options$min = options.min,\n      minValue = _options$min === void 0 ? options.autoMinMax ? currentMin : 0 : _options$min,\n      _options$max = options.max,\n      maxValue = _options$max === void 0 ? options.autoMinMax ? currentMax : 1 : _options$max;\n\n  if (minValue >= maxValue) {\n    throw new RangeError('min option must be smaller than max option');\n  }\n\n  var factor = (maxValue - minValue) / (currentMax - currentMin);\n\n  for (var i = 0; i < input.length; i++) {\n    output[i] = (input[i] - currentMin) * factor + minValue;\n  }\n\n  return output;\n}\n\nexport default rescale;\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Normalize an array of zones:\n * - ensure than from < to\n * - merge overlapping zones\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [zones=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function normalize(zones = [], options = {}) {\n  if (zones.length === 0) return [];\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  zones = JSON.parse(JSON.stringify(zones)).map((zone) =>\n    zone.from > zone.to ? { from: zone.to, to: zone.from } : zone,\n  );\n  zones = zones.sort((a, b) => {\n    if (a.from !== b.from) return a.from - b.from;\n    return a.to - b.to;\n  });\n\n  zones.forEach((zone) => {\n    if (from > zone.from) zone.from = from;\n    if (to < zone.to) zone.to = to;\n  });\n\n  zones = zones.filter((zone) => zone.from <= zone.to);\n  if (zones.length === 0) return [];\n\n  let currentZone = zones[0];\n  let result = [currentZone];\n  for (let i = 1; i < zones.length; i++) {\n    let zone = zones[i];\n    if (zone.from <= currentZone.to) {\n      currentZone.to = zone.to;\n    } else {\n      currentZone = zone;\n      result.push(currentZone);\n    }\n  }\n  return result;\n}\n","import { normalize } from './normalize';\n\n/**\n * Convert an array of exclusions and keep only from / to\n *\n * The method will always check if from if lower than to and will swap if required.\n * @param {Array} [exclusions=[]]\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of zones (after inversion)\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of zones (after inversion)\n */\n\nexport function invert(exclusions = [], options = {}) {\n  let {\n    from = Number.NEGATIVE_INFINITY,\n    to = Number.POSITIVE_INFINITY,\n  } = options;\n  if (from > to) [from, to] = [to, from];\n\n  exclusions = normalize(exclusions, { from, to });\n  if (exclusions.length === 0) return [{ from, to }];\n\n  let zones = [];\n  for (let i = 0; i < exclusions.length; i++) {\n    let exclusion = exclusions[i];\n    let nextExclusion = exclusions[i + 1];\n    if (i === 0) {\n      if (exclusion.from > from) {\n        zones.push({ from, to: exclusion.from });\n      }\n    }\n    if (i === exclusions.length - 1) {\n      if (exclusion.to < to) {\n        zones.push({ from: exclusion.to, to });\n      }\n    } else {\n      zones.push({ from: exclusion.to, to: nextExclusion.from });\n    }\n  }\n\n  return zones;\n}\n","import { normalize } from './normalize';\n\n/**\n * Add the number of points per zone to reach a specified total\n * @param {Array} [zones=[]]\n * @param {number} [numberOfPoints] Total number of points to distribute between zones\n * @param {object} [options={}]\n * @param {number} [options.from=Number.NEGATIVE_INFINITY] Specify min value of a zone\n * @param {number} [options.to=Number.POSITIVE_INFINITY] Specify max value of a zone\n */\n\nexport function zonesWithPoints(zones, numberOfPoints, options = {}) {\n  if (zones.length === 0) return zones;\n  zones = normalize(zones, options);\n\n  const totalSize = zones.reduce((previous, current) => {\n    return previous + (current.to - current.from);\n  }, 0);\n\n  let unitsPerPoint = totalSize / numberOfPoints;\n  let currentTotal = 0;\n  for (let i = 0; i < zones.length - 1; i++) {\n    let zone = zones[i];\n    zone.numberOfPoints = Math.min(\n      Math.round((zone.to - zone.from) / unitsPerPoint),\n      numberOfPoints - currentTotal,\n    );\n    currentTotal += zone.numberOfPoints;\n  }\n\n  zones[zones.length - 1].numberOfPoints = numberOfPoints - currentTotal;\n\n  return zones;\n}\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param {number} x0\n * @param {number} x1\n * @param {number} slope\n * @param {number} intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (\n    0.5 * slope * x1 * x1 +\n    intercept * x1 -\n    (0.5 * slope * x0 * x0 + intercept * x0)\n  );\n}\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n\n  let output = new Array(numberOfPoints);\n\n  let initialOriginalStep = x[1] - x[0];\n  let lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  let min = from - halfStep;\n  let max = from + halfStep;\n\n  let previousX = Number.MIN_VALUE;\n  let previousY = 0;\n  let nextX = x[0] - initialOriginalStep;\n  let nextY = 0;\n\n  let currentValue = 0;\n  let slope = 0;\n  let intercept = 0;\n  let sumAtMin = 0;\n  let sumAtMax = 0;\n\n  let i = 0; // index of input\n  let j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  let add = 0;\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  let xLength = x.length;\n\n  let step = (to - from) / (numberOfPoints - 1);\n  let halfStep = step / 2;\n  let lastStep = x[x.length - 1] - x[x.length - 2];\n\n  let start = from - halfStep;\n  let output = new Array(numberOfPoints);\n\n  // Init main variables\n  let min = start;\n  let max = start + step;\n\n  let previousX = -Number.MAX_VALUE;\n  let previousY = 0;\n  let nextX = x[0];\n  let nextY = y[0];\n  let frontOutsideSpectra = 0;\n  let backOutsideSpectra = true;\n\n  let currentValue = 0;\n\n  // for slot algorithm\n  let currentPoints = 0;\n\n  let i = 1; // index of input\n  let j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\nimport { zonesWithPoints, invert } from 'ml-zones';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * If exclusions zone are present, zones are ignored !\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @param {Array} [options.exclusions=[]] array of from / to that should be skipped for the generation of the points\n * @param {Array} [options.zones=[]] array of from / to that should be kept\n * @return {object<x: Array, y:Array>} new object with x / y array with the equally spaced data.\n */\n\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  let { x, y } = arrayXY;\n  let xLength = x.length;\n  let reverse = false;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n    reverse = true;\n  }\n\n  let {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100,\n    exclusions = [],\n    zones = [],\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n\n  if (numberOfPoints < 2) {\n    throw new RangeError(\"'numberOfPoints' option must be greater than 1\");\n  }\n\n  if (zones.length === 0) {\n    zones = invert(exclusions, { from, to });\n  }\n\n  zones = zonesWithPoints(zones, numberOfPoints, { from, to });\n\n  let xResult = [];\n  let yResult = [];\n  for (let zone of zones) {\n    let zoneResult = processZone(\n      x,\n      y,\n      zone.from,\n      zone.to,\n      zone.numberOfPoints,\n      variant,\n      reverse,\n    );\n\n    xResult = xResult.concat(zoneResult.x);\n    yResult = yResult.concat(zoneResult.y);\n  }\n  if (reverse) {\n    if (from < to) {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    } else {\n      return { x: xResult, y: yResult };\n    }\n  } else {\n    if (from < to) {\n      return { x: xResult, y: yResult };\n    } else {\n      return { x: xResult.reverse(), y: yResult.reverse() };\n    }\n  }\n}\n\nfunction processZone(x, y, from, to, numberOfPoints, variant) {\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  let output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from,\n      to,\n      size: numberOfPoints,\n    }),\n    y: output,\n  };\n}\n","export default function getZones(from, to, exclusions = []) {\n  if (from > to) {\n    [from, to] = [to, from];\n  }\n\n  // in exclusions from and to have to be defined\n  exclusions = exclusions.filter(\n    (exclusion) => exclusion.from !== undefined && exclusion.to !== undefined\n  );\n\n  exclusions = JSON.parse(JSON.stringify(exclusions));\n  // we ensure that from before to\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from > exclusion.to) {\n      [exclusion.to, exclusion.from] = [exclusion.from, exclusion.to];\n    }\n  });\n\n  exclusions.sort((a, b) => a.from - b.from);\n\n  // we will rework the exclusions in order to remove overlap and outside range (from / to)\n  exclusions.forEach((exclusion) => {\n    if (exclusion.from < from) exclusion.from = from;\n    if (exclusion.to > to) exclusion.to = to;\n  });\n  for (let i = 0; i < exclusions.length - 1; i++) {\n    if (exclusions[i].to > exclusions[i + 1].from) {\n      exclusions[i].to = exclusions[i + 1].from;\n    }\n  }\n  exclusions = exclusions.filter((exclusion) => exclusion.from < exclusion.to);\n\n  if (!exclusions || exclusions.length === 0) {\n    return [{ from, to }];\n  }\n\n  let zones = [];\n  let currentFrom = from;\n  for (let exclusion of exclusions) {\n    if (currentFrom < exclusion.from) {\n      zones.push({\n        from: currentFrom,\n        to: exclusion.from\n      });\n    }\n\n    currentFrom = exclusion.to;\n  }\n  if (currentFrom < to) {\n    zones.push({\n      from: currentFrom,\n      to: to\n    });\n  }\n\n  return zones;\n}\n","import getZones from './getZones';\n\n/**\n * Filter an array x/y based on various criteria\n * x points are expected to be sorted\n *\n * @param {object} points\n * @param {object} [options={}]\n * @param {array} [options.from]\n * @param {array} [options.to]\n * @param {array} [options.exclusions=[]]\n * @return {{x: Array<number>, y: Array<number>}}\n */\n\nexport default function filterX(points, options = {}) {\n  const { x, y } = points;\n  const { from = x[0], to = x[x.length - 1], exclusions = [] } = options;\n\n  let zones = getZones(from, to, exclusions);\n\n\n  let currentZoneIndex = 0;\n  let newX = [];\n  let newY = [];\n  let position = 0;\n  while (position < x.length) {\n    if (\n      x[position] <= zones[currentZoneIndex].to &&\n      x[position] >= zones[currentZoneIndex].from\n    ) {\n      newX.push(x[position]);\n      newY.push(y[position]);\n    } else {\n      if (x[position] > zones[currentZoneIndex].to) {\n        currentZoneIndex++;\n        if (!zones[currentZoneIndex]) break;\n      }\n    }\n    position++;\n  }\n\n  return {\n    x: newX,\n    y: newY\n  };\n}\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","/**\n * Returns the closest index of a `target` in an ordered array\n * @param {array} array\n * @param {number} target\n */\n\nexport function findClosestIndex(array, target) {\n  let low = 0;\n  let high = array.length - 1;\n  let middle = 0;\n  while (high - low > 1) {\n    middle = low + ((high - low) >> 1);\n    if (array[middle] < target) {\n      low = middle;\n    } else if (array[middle] > target) {\n      high = middle;\n    } else {\n      return middle;\n    }\n  }\n\n  if (low < array.length - 1) {\n    if (Math.abs(target - array[low]) < Math.abs(array[low + 1] - target)) {\n      return low;\n    } else {\n      return low + 1;\n    }\n  } else {\n    return low;\n  }\n}\n","import { findClosestIndex } from './findClosestIndex';\n\n/**\n * Returns an object with {fromIndex, toIndex} for a specific from / to\n * @param {array} x\n * @param {object} [options={}]\n * @param {number} [options.from] - First value for integration in the X scale\n * @param {number} [options.fromIndex=0] - First point for integration\n * @param {number} [options.to] - Last value for integration in the X scale\n * @param {number} [options.toIndex=x.length-1] - Last point for integration\n */\n\nexport function getFromToIndex(x, options = {}) {\n  let { fromIndex, toIndex, from, to } = options;\n\n  if (fromIndex === undefined) {\n    if (from !== undefined) {\n      fromIndex = findClosestIndex(x, from);\n    } else {\n      fromIndex = 0;\n    }\n  }\n  if (toIndex === undefined) {\n    if (to !== undefined) {\n      toIndex = findClosestIndex(x, to);\n    } else {\n      toIndex = x.length - 1;\n    }\n  }\n  if (fromIndex > toIndex) [fromIndex, toIndex] = [toIndex, fromIndex];\n  return { fromIndex, toIndex };\n}\n","import { findClosestIndex } from './findClosestIndex';\n\n/**\n *  Returns the targetIndex\n * @param {array} [x]\n * @param {object} [options={}]\n * @param {number} [options.target]\n * @param {number} [options.targetIndex=0]\n * @param {number}\n */\n\nexport function getTargetIndex(x, options = {}) {\n  let { target, targetIndex } = options;\n  if (targetIndex === undefined) {\n    if (target !== undefined) {\n      return findClosestIndex(x, target);\n    } else {\n      return 0;\n    }\n  }\n  return targetIndex;\n}\n","/**\n\n/**\n * This function add the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function add(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] + array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n\n/**\n * This function multiply the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Float64Array}\n */\nexport function multiply(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Float64Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] * array2[i];\n    }\n  }\n\n  return array3;\n}\n","import { multiply } from './multiply';\n\nexport function dotProduct(A, B) {\n  let g = multiply(A, B);\n  let result = 0;\n  for (let i = 0; i < A.length; i++) {\n    result += g[i];\n  }\n  return result;\n}\n","import { dotProduct } from './dotProduct';\n\n/**\n * Calculates the cross-correlation between 2 vectors\n * @param {Array} [A] - fixed array\n * @param {Array} [B] - sweeping array\n * @param {object} [options={}]\n * @param {number} [options.tau = 1] - sweep increment size (in number of points, min = 1, max = A.length)\n * @param {number} [options.lag = A.length - 1] - scalar lag parameter\n */\n\nexport function crossCorrelation(A, B, options = {}) {\n  let { tau = 1, lag = A.length - 1 } = options;\n  let result = new Float64Array(1 + (2 * lag) / tau);\n  if (A.length === B.length) {\n    let n = B.length;\n    let g = new Float64Array(2 * n);\n    let q = new Float64Array(2 * n);\n    for (let i = 0; i < n; i++) {\n      q[n + i] = B[i];\n    }\n    for (let i = n * 2 - (tau - 1); i > 0; i -= tau) {\n      let k = 0;\n      for (let j = i; j < n * 2; j++) {\n        g[k] = q[j];\n        k++;\n      }\n      let w = [];\n      for (let l = 0; l < n; l++) {\n        w[l] = g[l];\n      }\n      result[(k - (n - lag)) / tau] = dotProduct(A, w);\n    }\n  }\n  return result;\n}\n","import { crossCorrelation } from './crossCorrelation';\n\n/**\n * Calculates the auto-correlation of a vector\n * @param {Array} [A] - the array that will be fixed\n * @param {object} [options={}]\n * @param {number} [options.tau = 1] - sweep increment size (in number of points, min = 1, max = A.length)\n * @param {number} [options.lag = A.length - 1] - scalar lag parameter\n */\n\nexport function autoCorrelation(A, options = {}) {\n  return crossCorrelation(A, A, options);\n}\n","/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @return {object}\n */\nexport function boxPlot(array) {\n  array = array.slice(0).sort((a, b) => a - b);\n  if (array.length < 5) {\n    throw Error(\n      'boxPlot: can not calculate info if array contains less than 3 elements',\n    );\n  }\n  let info = {\n    Q1: 0.0,\n    Q2: 0.0,\n    Q3: 0.0,\n    min: array[0],\n    max: array[array.length - 1],\n  };\n  let q1max, q3min;\n  if (array.length % 2 === 1) {\n    // odd\n    let middle = (array.length - 1) / 2;\n    info.Q2 = array[middle];\n    q1max = middle - 1;\n    q3min = middle + 1;\n  } else {\n    // even\n    q3min = array.length / 2;\n    q1max = q3min - 1;\n    info.Q2 = (array[q1max] + array[q3min]) / 2;\n  }\n  if (q1max % 2 === 0) {\n    info.Q1 = array[q1max / 2];\n    info.Q3 = array[(array.length + q3min - 1) / 2];\n  } else {\n    info.Q1 = (array[(q1max + 1) / 2] + array[(q1max - 1) / 2]) / 2;\n    let middleOver = (array.length + q3min) / 2;\n    info.Q3 = (array[middleOver] + array[middleOver - 1]) / 2;\n  }\n  return info;\n}\n","/**\n\n/**\n * Calculates the correlation between 2 vectors\n * https://en.wikipedia.org/wiki/Correlation_and_dependence\n *\n * @param {Array} [A] - the array that will be rotated\n * @param {Array} [B]\n * @return {Array}\n */\nexport function correlation(A, B) {\n  let n = A.length;\n  let sumA = 0;\n  let sumA2 = 0;\n  let sumB = 0;\n  let sumB2 = 0;\n  let sumAB = 0;\n  for (let i = 0; i < n; i++) {\n    let a = A[i];\n    let b = B[i];\n    sumA += a;\n    sumA2 += a ** 2;\n    sumB += b;\n    sumB2 += b ** 2;\n    sumAB += a * b;\n  }\n  return (\n    (n * sumAB - sumA * sumB) /\n    (Math.sqrt(n * sumA2 - sumA ** 2) * Math.sqrt(n * sumB2 - sumB ** 2))\n  );\n}\n","/**\n\n/**\n * This function divide the first array by the second array or a constant value to each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function divide(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] / array2[i];\n    }\n  }\n\n  return array3;\n}\n","/**\n * This function performs a circular shift to a new array\n * Positive values of shifts will shift to the right and negative values will do to the left\n * @example rotate([1,2,3,4],1) -> [4,1,2,3]\n * @example rotate([1,2,3,4],-1) -> [2,3,4,1]\n * @param {Array} array - the array that will be rotated\n * @param {number} shift\n * @return {Array}\n */\nexport function rotate(array, shift) {\n  shift = shift % array.length;\n  if (shift < 0) shift += array.length;\n  return array\n    .slice(array.length - shift)\n    .concat(array.slice(0, array.length - shift));\n}\n","/**\n * This function subtract the first array by the second array or a constant value from each element of the first array\n * @param {Array} array1 - the array that will be rotated\n * @param {Array|Number} array2\n * @return {Array}\n */\nexport function subtract(array1, array2) {\n  let isConstant = false;\n  let constant;\n  if (Array.isArray(array2)) {\n    if (array1.length !== array2.length) {\n      throw new Error('sub: size of array1 and array2 must be identical');\n    }\n  } else {\n    isConstant = true;\n    constant = Number(array2);\n  }\n\n  let array3 = new Array(array1.length);\n  if (isConstant) {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - constant;\n    }\n  } else {\n    for (let i = 0; i < array1.length; i++) {\n      array3[i] = array1[i] - array2[i];\n    }\n  }\n\n  return array3;\n}\n","import { add } from './add';\nimport { autoCorrelation } from './autoCorrelation';\nimport { boxPlot } from './boxPlot';\nimport { correlation } from './correlation';\nimport { crossCorrelation } from './crossCorrelation';\nimport { divide } from './divide';\nimport { findClosestIndex } from './findClosestIndex';\nimport { getFromToIndex } from './getFromToIndex';\nimport { getTargetIndex } from './getTargetIndex';\nimport { multiply } from './multiply';\nimport { rotate } from './rotate';\nimport { subtract } from './subtract';\n\nexport const X = {\n  add,\n  autoCorrelation,\n  boxPlot,\n  correlation,\n  crossCorrelation,\n  divide,\n  findClosestIndex,\n  getFromToIndex,\n  getTargetIndex,\n  multiply,\n  rotate,\n  subtract,\n};\n","/**\n * @private\n * Check that a row index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkRowIndex(matrix, index, outer) {\n  let max = outer ? matrix.rows : matrix.rows - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Row index out of range');\n  }\n}\n\n/**\n * @private\n * Check that a column index is not out of bounds\n * @param {Matrix} matrix\n * @param {number} index\n * @param {boolean} [outer]\n */\nexport function checkColumnIndex(matrix, index, outer) {\n  let max = outer ? matrix.columns : matrix.columns - 1;\n  if (index < 0 || index > max) {\n    throw new RangeError('Column index out of range');\n  }\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkRowVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.columns) {\n    throw new RangeError(\n      'vector size must be the same as the number of columns',\n    );\n  }\n  return vector;\n}\n\n/**\n * @private\n * Check that the provided vector is an array with the right length\n * @param {Matrix} matrix\n * @param {Array|Matrix} vector\n * @return {Array}\n * @throws {RangeError}\n */\nexport function checkColumnVector(matrix, vector) {\n  if (vector.to1DArray) {\n    vector = vector.to1DArray();\n  }\n  if (vector.length !== matrix.rows) {\n    throw new RangeError('vector size must be the same as the number of rows');\n  }\n  return vector;\n}\n\nexport function checkIndices(matrix, rowIndices, columnIndices) {\n  return {\n    row: checkRowIndices(matrix, rowIndices),\n    column: checkColumnIndices(matrix, columnIndices),\n  };\n}\n\nexport function checkRowIndices(matrix, rowIndices) {\n  if (typeof rowIndices !== 'object') {\n    throw new TypeError('unexpected type for row indices');\n  }\n\n  let rowOut = rowIndices.some((r) => {\n    return r < 0 || r >= matrix.rows;\n  });\n\n  if (rowOut) {\n    throw new RangeError('row indices are out of range');\n  }\n\n  if (!Array.isArray(rowIndices)) rowIndices = Array.from(rowIndices);\n\n  return rowIndices;\n}\n\nexport function checkColumnIndices(matrix, columnIndices) {\n  if (typeof columnIndices !== 'object') {\n    throw new TypeError('unexpected type for column indices');\n  }\n\n  let columnOut = columnIndices.some((c) => {\n    return c < 0 || c >= matrix.columns;\n  });\n\n  if (columnOut) {\n    throw new RangeError('column indices are out of range');\n  }\n  if (!Array.isArray(columnIndices)) columnIndices = Array.from(columnIndices);\n\n  return columnIndices;\n}\n\nexport function checkRange(matrix, startRow, endRow, startColumn, endColumn) {\n  if (arguments.length !== 5) {\n    throw new RangeError('expected 4 arguments');\n  }\n  checkNumber('startRow', startRow);\n  checkNumber('endRow', endRow);\n  checkNumber('startColumn', startColumn);\n  checkNumber('endColumn', endColumn);\n  if (\n    startRow > endRow ||\n    startColumn > endColumn ||\n    startRow < 0 ||\n    startRow >= matrix.rows ||\n    endRow < 0 ||\n    endRow >= matrix.rows ||\n    startColumn < 0 ||\n    startColumn >= matrix.columns ||\n    endColumn < 0 ||\n    endColumn >= matrix.columns\n  ) {\n    throw new RangeError('Submatrix indices are out of range');\n  }\n}\n\nexport function newArray(length, value = 0) {\n  let array = [];\n  for (let i = 0; i < length; i++) {\n    array.push(value);\n  }\n  return array;\n}\n\nfunction checkNumber(name, value) {\n  if (typeof value !== 'number') {\n    throw new TypeError(`${name} must be a number`);\n  }\n}\n","import { newArray } from './util';\n\nexport function sumByRow(matrix) {\n  let sum = newArray(matrix.rows);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumByColumn(matrix) {\n  let sum = newArray(matrix.columns);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] += matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function sumAll(matrix) {\n  let v = 0;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v += matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function productByRow(matrix) {\n  let sum = newArray(matrix.rows, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[i] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productByColumn(matrix) {\n  let sum = newArray(matrix.columns, 1);\n  for (let i = 0; i < matrix.rows; ++i) {\n    for (let j = 0; j < matrix.columns; ++j) {\n      sum[j] *= matrix.get(i, j);\n    }\n  }\n  return sum;\n}\n\nexport function productAll(matrix) {\n  let v = 1;\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      v *= matrix.get(i, j);\n    }\n  }\n  return v;\n}\n\nexport function varianceByRow(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let i = 0; i < rows; i++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean[i];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / cols) / (cols - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / cols) / cols);\n    }\n  }\n  return variance;\n}\n\nexport function varianceByColumn(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const variance = [];\n\n  for (let j = 0; j < cols; j++) {\n    let sum1 = 0;\n    let sum2 = 0;\n    let x = 0;\n    for (let i = 0; i < rows; i++) {\n      x = matrix.get(i, j) - mean[j];\n      sum1 += x;\n      sum2 += x * x;\n    }\n    if (unbiased) {\n      variance.push((sum2 - (sum1 * sum1) / rows) / (rows - 1));\n    } else {\n      variance.push((sum2 - (sum1 * sum1) / rows) / rows);\n    }\n  }\n  return variance;\n}\n\nexport function varianceAll(matrix, unbiased, mean) {\n  const rows = matrix.rows;\n  const cols = matrix.columns;\n  const size = rows * cols;\n\n  let sum1 = 0;\n  let sum2 = 0;\n  let x = 0;\n  for (let i = 0; i < rows; i++) {\n    for (let j = 0; j < cols; j++) {\n      x = matrix.get(i, j) - mean;\n      sum1 += x;\n      sum2 += x * x;\n    }\n  }\n  if (unbiased) {\n    return (sum2 - (sum1 * sum1) / size) / (size - 1);\n  } else {\n    return (sum2 - (sum1 * sum1) / size) / size;\n  }\n}\n\nexport function centerByRow(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[i]);\n    }\n  }\n}\n\nexport function centerByColumn(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean[j]);\n    }\n  }\n}\n\nexport function centerAll(matrix, mean) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) - mean);\n    }\n  }\n}\n\nexport function getScaleByRow(matrix) {\n  const scale = [];\n  for (let i = 0; i < matrix.rows; i++) {\n    let sum = 0;\n    for (let j = 0; j < matrix.columns; j++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.columns - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByRow(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[i]);\n    }\n  }\n}\n\nexport function getScaleByColumn(matrix) {\n  const scale = [];\n  for (let j = 0; j < matrix.columns; j++) {\n    let sum = 0;\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / (matrix.rows - 1);\n    }\n    scale.push(Math.sqrt(sum));\n  }\n  return scale;\n}\n\nexport function scaleByColumn(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale[j]);\n    }\n  }\n}\n\nexport function getScaleAll(matrix) {\n  const divider = matrix.size - 1;\n  let sum = 0;\n  for (let j = 0; j < matrix.columns; j++) {\n    for (let i = 0; i < matrix.rows; i++) {\n      sum += Math.pow(matrix.get(i, j), 2) / divider;\n    }\n  }\n  return Math.sqrt(sum);\n}\n\nexport function scaleAll(matrix, scale) {\n  for (let i = 0; i < matrix.rows; i++) {\n    for (let j = 0; j < matrix.columns; j++) {\n      matrix.set(i, j, matrix.get(i, j) / scale);\n    }\n  }\n}\n","export function inspectMatrix() {\n  const indent = ' '.repeat(2);\n  const indentData = ' '.repeat(4);\n  return `${this.constructor.name} {\n${indent}[\n${indentData}${inspectData(this, indentData)}\n${indent}]\n${indent}rows: ${this.rows}\n${indent}columns: ${this.columns}\n}`;\n}\n\nconst maxRows = 15;\nconst maxColumns = 10;\nconst maxNumSize = 8;\n\nfunction inspectData(matrix, indent) {\n  const { rows, columns } = matrix;\n  const maxI = Math.min(rows, maxRows);\n  const maxJ = Math.min(columns, maxColumns);\n  const result = [];\n  for (let i = 0; i < maxI; i++) {\n    let line = [];\n    for (let j = 0; j < maxJ; j++) {\n      line.push(formatNumber(matrix.get(i, j)));\n    }\n    result.push(`${line.join(' ')}`);\n  }\n  if (maxJ !== columns) {\n    result[result.length - 1] += ` ... ${columns - maxColumns} more columns`;\n  }\n  if (maxI !== rows) {\n    result.push(`... ${rows - maxRows} more rows`);\n  }\n  return result.join(`\\n${indent}`);\n}\n\nfunction formatNumber(num) {\n  const numStr = String(num);\n  if (numStr.length <= maxNumSize) {\n    return numStr.padEnd(maxNumSize, ' ');\n  }\n  const precise = num.toPrecision(maxNumSize - 2);\n  if (precise.length <= maxNumSize) {\n    return precise;\n  }\n  const exponential = num.toExponential(maxNumSize - 2);\n  const eIndex = exponential.indexOf('e');\n  const e = exponential.substring(eIndex);\n  return exponential.substring(0, maxNumSize - e.length) + e;\n}\n","export function installMathOperations(AbstractMatrix, Matrix) {\n  AbstractMatrix.prototype.add = function add(value) {\n    if (typeof value === 'number') return this.addS(value);\n    return this.addM(value);\n  };\n\n  AbstractMatrix.prototype.addS = function addS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.addM = function addM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.add = function add(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.add(value);\n  };\n\n  AbstractMatrix.prototype.sub = function sub(value) {\n    if (typeof value === 'number') return this.subS(value);\n    return this.subM(value);\n  };\n\n  AbstractMatrix.prototype.subS = function subS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.subM = function subM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sub = function sub(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sub(value);\n  };\n  AbstractMatrix.prototype.subtract = AbstractMatrix.prototype.sub;\n  AbstractMatrix.prototype.subtractS = AbstractMatrix.prototype.subS;\n  AbstractMatrix.prototype.subtractM = AbstractMatrix.prototype.subM;\n  AbstractMatrix.subtract = AbstractMatrix.sub;\n\n  AbstractMatrix.prototype.mul = function mul(value) {\n    if (typeof value === 'number') return this.mulS(value);\n    return this.mulM(value);\n  };\n\n  AbstractMatrix.prototype.mulS = function mulS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.mulM = function mulM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mul = function mul(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mul(value);\n  };\n  AbstractMatrix.prototype.multiply = AbstractMatrix.prototype.mul;\n  AbstractMatrix.prototype.multiplyS = AbstractMatrix.prototype.mulS;\n  AbstractMatrix.prototype.multiplyM = AbstractMatrix.prototype.mulM;\n  AbstractMatrix.multiply = AbstractMatrix.mul;\n\n  AbstractMatrix.prototype.div = function div(value) {\n    if (typeof value === 'number') return this.divS(value);\n    return this.divM(value);\n  };\n\n  AbstractMatrix.prototype.divS = function divS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.divM = function divM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.div = function div(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.div(value);\n  };\n  AbstractMatrix.prototype.divide = AbstractMatrix.prototype.div;\n  AbstractMatrix.prototype.divideS = AbstractMatrix.prototype.divS;\n  AbstractMatrix.prototype.divideM = AbstractMatrix.prototype.divM;\n  AbstractMatrix.divide = AbstractMatrix.div;\n\n  AbstractMatrix.prototype.mod = function mod(value) {\n    if (typeof value === 'number') return this.modS(value);\n    return this.modM(value);\n  };\n\n  AbstractMatrix.prototype.modS = function modS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.modM = function modM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) % matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.mod = function mod(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.mod(value);\n  };\n  AbstractMatrix.prototype.modulus = AbstractMatrix.prototype.mod;\n  AbstractMatrix.prototype.modulusS = AbstractMatrix.prototype.modS;\n  AbstractMatrix.prototype.modulusM = AbstractMatrix.prototype.modM;\n  AbstractMatrix.modulus = AbstractMatrix.mod;\n\n  AbstractMatrix.prototype.and = function and(value) {\n    if (typeof value === 'number') return this.andS(value);\n    return this.andM(value);\n  };\n\n  AbstractMatrix.prototype.andS = function andS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.andM = function andM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) & matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.and = function and(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.and(value);\n  };\n\n  AbstractMatrix.prototype.or = function or(value) {\n    if (typeof value === 'number') return this.orS(value);\n    return this.orM(value);\n  };\n\n  AbstractMatrix.prototype.orS = function orS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.orM = function orM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) | matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.or = function or(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.or(value);\n  };\n\n  AbstractMatrix.prototype.xor = function xor(value) {\n    if (typeof value === 'number') return this.xorS(value);\n    return this.xorM(value);\n  };\n\n  AbstractMatrix.prototype.xorS = function xorS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.xorM = function xorM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) ^ matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.xor = function xor(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.xor(value);\n  };\n\n  AbstractMatrix.prototype.leftShift = function leftShift(value) {\n    if (typeof value === 'number') return this.leftShiftS(value);\n    return this.leftShiftM(value);\n  };\n\n  AbstractMatrix.prototype.leftShiftS = function leftShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.leftShiftM = function leftShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) << matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.leftShift = function leftShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.leftShift(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShift = function signPropagatingRightShift(value) {\n    if (typeof value === 'number') return this.signPropagatingRightShiftS(value);\n    return this.signPropagatingRightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftS = function signPropagatingRightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.signPropagatingRightShiftM = function signPropagatingRightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.signPropagatingRightShift = function signPropagatingRightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.signPropagatingRightShift(value);\n  };\n\n  AbstractMatrix.prototype.rightShift = function rightShift(value) {\n    if (typeof value === 'number') return this.rightShiftS(value);\n    return this.rightShiftM(value);\n  };\n\n  AbstractMatrix.prototype.rightShiftS = function rightShiftS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> value);\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.rightShiftM = function rightShiftM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) >>> matrix.get(i, j));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.rightShift = function rightShift(matrix, value) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.rightShift(value);\n  };\n  AbstractMatrix.prototype.zeroFillRightShift = AbstractMatrix.prototype.rightShift;\n  AbstractMatrix.prototype.zeroFillRightShiftS = AbstractMatrix.prototype.rightShiftS;\n  AbstractMatrix.prototype.zeroFillRightShiftM = AbstractMatrix.prototype.rightShiftM;\n  AbstractMatrix.zeroFillRightShift = AbstractMatrix.rightShift;\n\n  AbstractMatrix.prototype.not = function not() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, ~(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.not = function not(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.not();\n  };\n\n  AbstractMatrix.prototype.abs = function abs() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.abs(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.abs = function abs(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.abs();\n  };\n\n  AbstractMatrix.prototype.acos = function acos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acos = function acos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acos();\n  };\n\n  AbstractMatrix.prototype.acosh = function acosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.acosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.acosh = function acosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.acosh();\n  };\n\n  AbstractMatrix.prototype.asin = function asin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asin = function asin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asin();\n  };\n\n  AbstractMatrix.prototype.asinh = function asinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.asinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.asinh = function asinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.asinh();\n  };\n\n  AbstractMatrix.prototype.atan = function atan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atan = function atan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atan();\n  };\n\n  AbstractMatrix.prototype.atanh = function atanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.atanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.atanh = function atanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.atanh();\n  };\n\n  AbstractMatrix.prototype.cbrt = function cbrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cbrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cbrt = function cbrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cbrt();\n  };\n\n  AbstractMatrix.prototype.ceil = function ceil() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.ceil(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.ceil = function ceil(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.ceil();\n  };\n\n  AbstractMatrix.prototype.clz32 = function clz32() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.clz32(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.clz32 = function clz32(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.clz32();\n  };\n\n  AbstractMatrix.prototype.cos = function cos() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cos(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cos = function cos(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cos();\n  };\n\n  AbstractMatrix.prototype.cosh = function cosh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.cosh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.cosh = function cosh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.cosh();\n  };\n\n  AbstractMatrix.prototype.exp = function exp() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.exp(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.exp = function exp(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.exp();\n  };\n\n  AbstractMatrix.prototype.expm1 = function expm1() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.expm1(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.expm1 = function expm1(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.expm1();\n  };\n\n  AbstractMatrix.prototype.floor = function floor() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.floor(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.floor = function floor(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.floor();\n  };\n\n  AbstractMatrix.prototype.fround = function fround() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.fround(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.fround = function fround(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.fround();\n  };\n\n  AbstractMatrix.prototype.log = function log() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log = function log(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log();\n  };\n\n  AbstractMatrix.prototype.log1p = function log1p() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log1p(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log1p = function log1p(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log1p();\n  };\n\n  AbstractMatrix.prototype.log10 = function log10() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log10(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log10 = function log10(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log10();\n  };\n\n  AbstractMatrix.prototype.log2 = function log2() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.log2(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.log2 = function log2(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.log2();\n  };\n\n  AbstractMatrix.prototype.round = function round() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.round(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.round = function round(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.round();\n  };\n\n  AbstractMatrix.prototype.sign = function sign() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sign(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sign = function sign(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sign();\n  };\n\n  AbstractMatrix.prototype.sin = function sin() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sin(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sin = function sin(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sin();\n  };\n\n  AbstractMatrix.prototype.sinh = function sinh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sinh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sinh = function sinh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sinh();\n  };\n\n  AbstractMatrix.prototype.sqrt = function sqrt() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.sqrt(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.sqrt = function sqrt(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.sqrt();\n  };\n\n  AbstractMatrix.prototype.tan = function tan() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tan(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tan = function tan(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tan();\n  };\n\n  AbstractMatrix.prototype.tanh = function tanh() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.tanh(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.tanh = function tanh(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.tanh();\n  };\n\n  AbstractMatrix.prototype.trunc = function trunc() {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.trunc(this.get(i, j)));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.trunc = function trunc(matrix) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.trunc();\n  };\n\n  AbstractMatrix.pow = function pow(matrix, arg0) {\n    const newMatrix = new Matrix(matrix);\n    return newMatrix.pow(arg0);\n  };\n\n  AbstractMatrix.prototype.pow = function pow(value) {\n    if (typeof value === 'number') return this.powS(value);\n    return this.powM(value);\n  };\n\n  AbstractMatrix.prototype.powS = function powS(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), value));\n      }\n    }\n    return this;\n  };\n\n  AbstractMatrix.prototype.powM = function powM(matrix) {\n    matrix = Matrix.checkMatrix(matrix);\n    if (this.rows !== matrix.rows ||\n      this.columns !== matrix.columns) {\n      throw new RangeError('Matrices dimensions must be equal');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, Math.pow(this.get(i, j), matrix.get(i, j)));\n      }\n    }\n    return this;\n  };\n}\n","import rescale from 'ml-array-rescale';\n\nimport {\n  checkRowVector,\n  checkRowIndex,\n  checkColumnIndex,\n  checkColumnVector,\n  checkRange,\n  checkIndices,\n} from './util';\nimport {\n  sumByRow,\n  sumByColumn,\n  sumAll,\n  productByRow,\n  productByColumn,\n  productAll,\n  varianceByRow,\n  varianceByColumn,\n  varianceAll,\n  centerByRow,\n  centerByColumn,\n  centerAll,\n  scaleByRow,\n  scaleByColumn,\n  scaleAll,\n  getScaleByRow,\n  getScaleByColumn,\n  getScaleAll,\n} from './stat';\nimport { inspectMatrix } from './inspect';\nimport { installMathOperations } from './mathOperations';\n\nexport class AbstractMatrix {\n  static from1DArray(newRows, newColumns, newData) {\n    let length = newRows * newColumns;\n    if (length !== newData.length) {\n      throw new RangeError('data length does not match given dimensions');\n    }\n    let newMatrix = new Matrix(newRows, newColumns);\n    for (let row = 0; row < newRows; row++) {\n      for (let column = 0; column < newColumns; column++) {\n        newMatrix.set(row, column, newData[row * newColumns + column]);\n      }\n    }\n    return newMatrix;\n  }\n\n  static rowVector(newData) {\n    let vector = new Matrix(1, newData.length);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(0, i, newData[i]);\n    }\n    return vector;\n  }\n\n  static columnVector(newData) {\n    let vector = new Matrix(newData.length, 1);\n    for (let i = 0; i < newData.length; i++) {\n      vector.set(i, 0, newData[i]);\n    }\n    return vector;\n  }\n\n  static zeros(rows, columns) {\n    return new Matrix(rows, columns);\n  }\n\n  static ones(rows, columns) {\n    return new Matrix(rows, columns).fill(1);\n  }\n\n  static rand(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { random = Math.random } = options;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.set(i, j, random());\n      }\n    }\n    return matrix;\n  }\n\n  static randInt(rows, columns, options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1000, random = Math.random } = options;\n    if (!Number.isInteger(min)) throw new TypeError('min must be an integer');\n    if (!Number.isInteger(max)) throw new TypeError('max must be an integer');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let interval = max - min;\n    let matrix = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        let value = min + Math.round(random() * interval);\n        matrix.set(i, j, value);\n      }\n    }\n    return matrix;\n  }\n\n  static eye(rows, columns, value) {\n    if (columns === undefined) columns = rows;\n    if (value === undefined) value = 1;\n    let min = Math.min(rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, value);\n    }\n    return matrix;\n  }\n\n  static diag(data, rows, columns) {\n    let l = data.length;\n    if (rows === undefined) rows = l;\n    if (columns === undefined) columns = rows;\n    let min = Math.min(l, rows, columns);\n    let matrix = this.zeros(rows, columns);\n    for (let i = 0; i < min; i++) {\n      matrix.set(i, i, data[i]);\n    }\n    return matrix;\n  }\n\n  static min(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.min(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static max(matrix1, matrix2) {\n    matrix1 = this.checkMatrix(matrix1);\n    matrix2 = this.checkMatrix(matrix2);\n    let rows = matrix1.rows;\n    let columns = matrix1.columns;\n    let result = new this(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        result.set(i, j, Math.max(matrix1.get(i, j), matrix2.get(i, j)));\n      }\n    }\n    return result;\n  }\n\n  static checkMatrix(value) {\n    return AbstractMatrix.isMatrix(value) ? value : new Matrix(value);\n  }\n\n  static isMatrix(value) {\n    return value != null && value.klass === 'Matrix';\n  }\n\n  get size() {\n    return this.rows * this.columns;\n  }\n\n  apply(callback) {\n    if (typeof callback !== 'function') {\n      throw new TypeError('callback must be a function');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        callback.call(this, i, j);\n      }\n    }\n    return this;\n  }\n\n  to1DArray() {\n    let array = [];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        array.push(this.get(i, j));\n      }\n    }\n    return array;\n  }\n\n  to2DArray() {\n    let copy = [];\n    for (let i = 0; i < this.rows; i++) {\n      copy.push([]);\n      for (let j = 0; j < this.columns; j++) {\n        copy[i].push(this.get(i, j));\n      }\n    }\n    return copy;\n  }\n\n  toJSON() {\n    return this.to2DArray();\n  }\n\n  isRowVector() {\n    return this.rows === 1;\n  }\n\n  isColumnVector() {\n    return this.columns === 1;\n  }\n\n  isVector() {\n    return this.rows === 1 || this.columns === 1;\n  }\n\n  isSquare() {\n    return this.rows === this.columns;\n  }\n\n  isSymmetric() {\n    if (this.isSquare()) {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j <= i; j++) {\n          if (this.get(i, j) !== this.get(j, i)) {\n            return false;\n          }\n        }\n      }\n      return true;\n    }\n    return false;\n  }\n\n  isEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isEchelonForm = false;\n          checked = true;\n        }\n      }\n      i++;\n    }\n    return isEchelonForm;\n  }\n\n  isReducedEchelonForm() {\n    let i = 0;\n    let j = 0;\n    let previousColumn = -1;\n    let isReducedEchelonForm = true;\n    let checked = false;\n    while (i < this.rows && isReducedEchelonForm) {\n      j = 0;\n      checked = false;\n      while (j < this.columns && checked === false) {\n        if (this.get(i, j) === 0) {\n          j++;\n        } else if (this.get(i, j) === 1 && j > previousColumn) {\n          checked = true;\n          previousColumn = j;\n        } else {\n          isReducedEchelonForm = false;\n          checked = true;\n        }\n      }\n      for (let k = j + 1; k < this.rows; k++) {\n        if (this.get(i, k) !== 0) {\n          isReducedEchelonForm = false;\n        }\n      }\n      i++;\n    }\n    return isReducedEchelonForm;\n  }\n\n  echelonForm() {\n    let result = this.clone();\n    let h = 0;\n    let k = 0;\n    while (h < result.rows && k < result.columns) {\n      let iMax = h;\n      for (let i = h; i < result.rows; i++) {\n        if (result.get(i, k) > result.get(iMax, k)) {\n          iMax = i;\n        }\n      }\n      if (result.get(iMax, k) === 0) {\n        k++;\n      } else {\n        result.swapRows(h, iMax);\n        let tmp = result.get(h, k);\n        for (let j = k; j < result.columns; j++) {\n          result.set(h, j, result.get(h, j) / tmp);\n        }\n        for (let i = h + 1; i < result.rows; i++) {\n          let factor = result.get(i, k) / result.get(h, k);\n          result.set(i, k, 0);\n          for (let j = k + 1; j < result.columns; j++) {\n            result.set(i, j, result.get(i, j) - result.get(h, j) * factor);\n          }\n        }\n        h++;\n        k++;\n      }\n    }\n    return result;\n  }\n\n  reducedEchelonForm() {\n    let result = this.echelonForm();\n    let m = result.columns;\n    let n = result.rows;\n    let h = n - 1;\n    while (h >= 0) {\n      if (result.maxRow(h) === 0) {\n        h--;\n      } else {\n        let p = 0;\n        let pivot = false;\n        while (p < n && pivot === false) {\n          if (result.get(h, p) === 1) {\n            pivot = true;\n          } else {\n            p++;\n          }\n        }\n        for (let i = 0; i < h; i++) {\n          let factor = result.get(i, p);\n          for (let j = p; j < m; j++) {\n            let tmp = result.get(i, j) - factor * result.get(h, j);\n            result.set(i, j, tmp);\n          }\n        }\n        h--;\n      }\n    }\n    return result;\n  }\n\n  set() {\n    throw new Error('set method is unimplemented');\n  }\n\n  get() {\n    throw new Error('get method is unimplemented');\n  }\n\n  repeat(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { rows = 1, columns = 1 } = options;\n    if (!Number.isInteger(rows) || rows <= 0) {\n      throw new TypeError('rows must be a positive integer');\n    }\n    if (!Number.isInteger(columns) || columns <= 0) {\n      throw new TypeError('columns must be a positive integer');\n    }\n    let matrix = new Matrix(this.rows * rows, this.columns * columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        matrix.setSubMatrix(this, this.rows * i, this.columns * j);\n      }\n    }\n    return matrix;\n  }\n\n  fill(value) {\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, value);\n      }\n    }\n    return this;\n  }\n\n  neg() {\n    return this.mulS(-1);\n  }\n\n  getRow(index) {\n    checkRowIndex(this, index);\n    let row = [];\n    for (let i = 0; i < this.columns; i++) {\n      row.push(this.get(index, i));\n    }\n    return row;\n  }\n\n  getRowVector(index) {\n    return Matrix.rowVector(this.getRow(index));\n  }\n\n  setRow(index, array) {\n    checkRowIndex(this, index);\n    array = checkRowVector(this, array);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, array[i]);\n    }\n    return this;\n  }\n\n  swapRows(row1, row2) {\n    checkRowIndex(this, row1);\n    checkRowIndex(this, row2);\n    for (let i = 0; i < this.columns; i++) {\n      let temp = this.get(row1, i);\n      this.set(row1, i, this.get(row2, i));\n      this.set(row2, i, temp);\n    }\n    return this;\n  }\n\n  getColumn(index) {\n    checkColumnIndex(this, index);\n    let column = [];\n    for (let i = 0; i < this.rows; i++) {\n      column.push(this.get(i, index));\n    }\n    return column;\n  }\n\n  getColumnVector(index) {\n    return Matrix.columnVector(this.getColumn(index));\n  }\n\n  setColumn(index, array) {\n    checkColumnIndex(this, index);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, array[i]);\n    }\n    return this;\n  }\n\n  swapColumns(column1, column2) {\n    checkColumnIndex(this, column1);\n    checkColumnIndex(this, column2);\n    for (let i = 0; i < this.rows; i++) {\n      let temp = this.get(i, column1);\n      this.set(i, column1, this.get(i, column2));\n      this.set(i, column2, temp);\n    }\n    return this;\n  }\n\n  addRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[j]);\n      }\n    }\n    return this;\n  }\n\n  subRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[j]);\n      }\n    }\n    return this;\n  }\n\n  mulRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[j]);\n      }\n    }\n    return this;\n  }\n\n  divRowVector(vector) {\n    vector = checkRowVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[j]);\n      }\n    }\n    return this;\n  }\n\n  addColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) + vector[i]);\n      }\n    }\n    return this;\n  }\n\n  subColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) - vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) * vector[i]);\n      }\n    }\n    return this;\n  }\n\n  divColumnVector(vector) {\n    vector = checkColumnVector(this, vector);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        this.set(i, j, this.get(i, j) / vector[i]);\n      }\n    }\n    return this;\n  }\n\n  mulRow(index, value) {\n    checkRowIndex(this, index);\n    for (let i = 0; i < this.columns; i++) {\n      this.set(index, i, this.get(index, i) * value);\n    }\n    return this;\n  }\n\n  mulColumn(index, value) {\n    checkColumnIndex(this, index);\n    for (let i = 0; i < this.rows; i++) {\n      this.set(i, index, this.get(i, index) * value);\n    }\n    return this;\n  }\n\n  max() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  maxIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) > v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  min() {\n    let v = this.get(0, 0);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n        }\n      }\n    }\n    return v;\n  }\n\n  minIndex() {\n    let v = this.get(0, 0);\n    let idx = [0, 0];\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        if (this.get(i, j) < v) {\n          v = this.get(i, j);\n          idx[0] = i;\n          idx[1] = j;\n        }\n      }\n    }\n    return idx;\n  }\n\n  maxRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  maxRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) > v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  minRow(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n      }\n    }\n    return v;\n  }\n\n  minRowIndex(row) {\n    checkRowIndex(this, row);\n    let v = this.get(row, 0);\n    let idx = [row, 0];\n    for (let i = 1; i < this.columns; i++) {\n      if (this.get(row, i) < v) {\n        v = this.get(row, i);\n        idx[1] = i;\n      }\n    }\n    return idx;\n  }\n\n  maxColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  maxColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) > v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  minColumn(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n      }\n    }\n    return v;\n  }\n\n  minColumnIndex(column) {\n    checkColumnIndex(this, column);\n    let v = this.get(0, column);\n    let idx = [0, column];\n    for (let i = 1; i < this.rows; i++) {\n      if (this.get(i, column) < v) {\n        v = this.get(i, column);\n        idx[0] = i;\n      }\n    }\n    return idx;\n  }\n\n  diag() {\n    let min = Math.min(this.rows, this.columns);\n    let diag = [];\n    for (let i = 0; i < min; i++) {\n      diag.push(this.get(i, i));\n    }\n    return diag;\n  }\n\n  norm(type = 'frobenius') {\n    let result = 0;\n    if (type === 'max') {\n      return this.max();\n    } else if (type === 'frobenius') {\n      for (let i = 0; i < this.rows; i++) {\n        for (let j = 0; j < this.columns; j++) {\n          result = result + this.get(i, j) * this.get(i, j);\n        }\n      }\n      return Math.sqrt(result);\n    } else {\n      throw new RangeError(`unknown norm type: ${type}`);\n    }\n  }\n\n  cumulativeSum() {\n    let sum = 0;\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        sum += this.get(i, j);\n        this.set(i, j, sum);\n      }\n    }\n    return this;\n  }\n\n  dot(vector2) {\n    if (AbstractMatrix.isMatrix(vector2)) vector2 = vector2.to1DArray();\n    let vector1 = this.to1DArray();\n    if (vector1.length !== vector2.length) {\n      throw new RangeError('vectors do not have the same size');\n    }\n    let dot = 0;\n    for (let i = 0; i < vector1.length; i++) {\n      dot += vector1[i] * vector2[i];\n    }\n    return dot;\n  }\n\n  mmul(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.columns;\n\n    let result = new Matrix(m, p);\n\n    let Bcolj = new Float64Array(n);\n    for (let j = 0; j < p; j++) {\n      for (let k = 0; k < n; k++) {\n        Bcolj[k] = other.get(k, j);\n      }\n\n      for (let i = 0; i < m; i++) {\n        let s = 0;\n        for (let k = 0; k < n; k++) {\n          s += this.get(i, k) * Bcolj[k];\n        }\n\n        result.set(i, j, s);\n      }\n    }\n    return result;\n  }\n\n  strassen2x2(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(2, 2);\n    const a11 = this.get(0, 0);\n    const b11 = other.get(0, 0);\n    const a12 = this.get(0, 1);\n    const b12 = other.get(0, 1);\n    const a21 = this.get(1, 0);\n    const b21 = other.get(1, 0);\n    const a22 = this.get(1, 1);\n    const b22 = other.get(1, 1);\n\n    // Compute intermediate values.\n    const m1 = (a11 + a22) * (b11 + b22);\n    const m2 = (a21 + a22) * b11;\n    const m3 = a11 * (b12 - b22);\n    const m4 = a22 * (b21 - b11);\n    const m5 = (a11 + a12) * b22;\n    const m6 = (a21 - a11) * (b11 + b12);\n    const m7 = (a12 - a22) * (b21 + b22);\n\n    // Combine intermediate values into the output.\n    const c00 = m1 + m4 - m5 + m7;\n    const c01 = m3 + m5;\n    const c10 = m2 + m4;\n    const c11 = m1 - m2 + m3 + m6;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    return result;\n  }\n\n  strassen3x3(other) {\n    other = Matrix.checkMatrix(other);\n    let result = new Matrix(3, 3);\n\n    const a00 = this.get(0, 0);\n    const a01 = this.get(0, 1);\n    const a02 = this.get(0, 2);\n    const a10 = this.get(1, 0);\n    const a11 = this.get(1, 1);\n    const a12 = this.get(1, 2);\n    const a20 = this.get(2, 0);\n    const a21 = this.get(2, 1);\n    const a22 = this.get(2, 2);\n\n    const b00 = other.get(0, 0);\n    const b01 = other.get(0, 1);\n    const b02 = other.get(0, 2);\n    const b10 = other.get(1, 0);\n    const b11 = other.get(1, 1);\n    const b12 = other.get(1, 2);\n    const b20 = other.get(2, 0);\n    const b21 = other.get(2, 1);\n    const b22 = other.get(2, 2);\n\n    const m1 = (a00 + a01 + a02 - a10 - a11 - a21 - a22) * b11;\n    const m2 = (a00 - a10) * (-b01 + b11);\n    const m3 = a11 * (-b00 + b01 + b10 - b11 - b12 - b20 + b22);\n    const m4 = (-a00 + a10 + a11) * (b00 - b01 + b11);\n    const m5 = (a10 + a11) * (-b00 + b01);\n    const m6 = a00 * b00;\n    const m7 = (-a00 + a20 + a21) * (b00 - b02 + b12);\n    const m8 = (-a00 + a20) * (b02 - b12);\n    const m9 = (a20 + a21) * (-b00 + b02);\n    const m10 = (a00 + a01 + a02 - a11 - a12 - a20 - a21) * b12;\n    const m11 = a21 * (-b00 + b02 + b10 - b11 - b12 - b20 + b21);\n    const m12 = (-a02 + a21 + a22) * (b11 + b20 - b21);\n    const m13 = (a02 - a22) * (b11 - b21);\n    const m14 = a02 * b20;\n    const m15 = (a21 + a22) * (-b20 + b21);\n    const m16 = (-a02 + a11 + a12) * (b12 + b20 - b22);\n    const m17 = (a02 - a12) * (b12 - b22);\n    const m18 = (a11 + a12) * (-b20 + b22);\n    const m19 = a01 * b10;\n    const m20 = a12 * b21;\n    const m21 = a10 * b02;\n    const m22 = a20 * b01;\n    const m23 = a22 * b22;\n\n    const c00 = m6 + m14 + m19;\n    const c01 = m1 + m4 + m5 + m6 + m12 + m14 + m15;\n    const c02 = m6 + m7 + m9 + m10 + m14 + m16 + m18;\n    const c10 = m2 + m3 + m4 + m6 + m14 + m16 + m17;\n    const c11 = m2 + m4 + m5 + m6 + m20;\n    const c12 = m14 + m16 + m17 + m18 + m21;\n    const c20 = m6 + m7 + m8 + m11 + m12 + m13 + m14;\n    const c21 = m12 + m13 + m14 + m15 + m22;\n    const c22 = m6 + m7 + m8 + m9 + m23;\n\n    result.set(0, 0, c00);\n    result.set(0, 1, c01);\n    result.set(0, 2, c02);\n    result.set(1, 0, c10);\n    result.set(1, 1, c11);\n    result.set(1, 2, c12);\n    result.set(2, 0, c20);\n    result.set(2, 1, c21);\n    result.set(2, 2, c22);\n    return result;\n  }\n\n  mmulStrassen(y) {\n    y = Matrix.checkMatrix(y);\n    let x = this.clone();\n    let r1 = x.rows;\n    let c1 = x.columns;\n    let r2 = y.rows;\n    let c2 = y.columns;\n    if (c1 !== r2) {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Multiplying ${r1} x ${c1} and ${r2} x ${c2} matrix: dimensions do not match.`,\n      );\n    }\n\n    // Put a matrix into the top left of a matrix of zeros.\n    // `rows` and `cols` are the dimensions of the output matrix.\n    function embed(mat, rows, cols) {\n      let r = mat.rows;\n      let c = mat.columns;\n      if (r === rows && c === cols) {\n        return mat;\n      } else {\n        let resultat = AbstractMatrix.zeros(rows, cols);\n        resultat = resultat.setSubMatrix(mat, 0, 0);\n        return resultat;\n      }\n    }\n\n    // Make sure both matrices are the same size.\n    // This is exclusively for simplicity:\n    // this algorithm can be implemented with matrices of different sizes.\n\n    let r = Math.max(r1, r2);\n    let c = Math.max(c1, c2);\n    x = embed(x, r, c);\n    y = embed(y, r, c);\n\n    // Our recursive multiplication function.\n    function blockMult(a, b, rows, cols) {\n      // For small matrices, resort to naive multiplication.\n      if (rows <= 512 || cols <= 512) {\n        return a.mmul(b); // a is equivalent to this\n      }\n\n      // Apply dynamic padding.\n      if (rows % 2 === 1 && cols % 2 === 1) {\n        a = embed(a, rows + 1, cols + 1);\n        b = embed(b, rows + 1, cols + 1);\n      } else if (rows % 2 === 1) {\n        a = embed(a, rows + 1, cols);\n        b = embed(b, rows + 1, cols);\n      } else if (cols % 2 === 1) {\n        a = embed(a, rows, cols + 1);\n        b = embed(b, rows, cols + 1);\n      }\n\n      let halfRows = parseInt(a.rows / 2, 10);\n      let halfCols = parseInt(a.columns / 2, 10);\n      // Subdivide input matrices.\n      let a11 = a.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n      let b11 = b.subMatrix(0, halfRows - 1, 0, halfCols - 1);\n\n      let a12 = a.subMatrix(0, halfRows - 1, halfCols, a.columns - 1);\n      let b12 = b.subMatrix(0, halfRows - 1, halfCols, b.columns - 1);\n\n      let a21 = a.subMatrix(halfRows, a.rows - 1, 0, halfCols - 1);\n      let b21 = b.subMatrix(halfRows, b.rows - 1, 0, halfCols - 1);\n\n      let a22 = a.subMatrix(halfRows, a.rows - 1, halfCols, a.columns - 1);\n      let b22 = b.subMatrix(halfRows, b.rows - 1, halfCols, b.columns - 1);\n\n      // Compute intermediate values.\n      let m1 = blockMult(\n        AbstractMatrix.add(a11, a22),\n        AbstractMatrix.add(b11, b22),\n        halfRows,\n        halfCols,\n      );\n      let m2 = blockMult(AbstractMatrix.add(a21, a22), b11, halfRows, halfCols);\n      let m3 = blockMult(a11, AbstractMatrix.sub(b12, b22), halfRows, halfCols);\n      let m4 = blockMult(a22, AbstractMatrix.sub(b21, b11), halfRows, halfCols);\n      let m5 = blockMult(AbstractMatrix.add(a11, a12), b22, halfRows, halfCols);\n      let m6 = blockMult(\n        AbstractMatrix.sub(a21, a11),\n        AbstractMatrix.add(b11, b12),\n        halfRows,\n        halfCols,\n      );\n      let m7 = blockMult(\n        AbstractMatrix.sub(a12, a22),\n        AbstractMatrix.add(b21, b22),\n        halfRows,\n        halfCols,\n      );\n\n      // Combine intermediate values into the output.\n      let c11 = AbstractMatrix.add(m1, m4);\n      c11.sub(m5);\n      c11.add(m7);\n      let c12 = AbstractMatrix.add(m3, m5);\n      let c21 = AbstractMatrix.add(m2, m4);\n      let c22 = AbstractMatrix.sub(m1, m2);\n      c22.add(m3);\n      c22.add(m6);\n\n      // Crop output to the desired size (undo dynamic padding).\n      let resultat = AbstractMatrix.zeros(2 * c11.rows, 2 * c11.columns);\n      resultat = resultat.setSubMatrix(c11, 0, 0);\n      resultat = resultat.setSubMatrix(c12, c11.rows, 0);\n      resultat = resultat.setSubMatrix(c21, 0, c11.columns);\n      resultat = resultat.setSubMatrix(c22, c11.rows, c11.columns);\n      return resultat.subMatrix(0, rows - 1, 0, cols - 1);\n    }\n    return blockMult(x, y, r, c);\n  }\n\n  scaleRows(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.rows; i++) {\n      const row = this.getRow(i);\n      rescale(row, { min, max, output: row });\n      newMatrix.setRow(i, row);\n    }\n    return newMatrix;\n  }\n\n  scaleColumns(options = {}) {\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { min = 0, max = 1 } = options;\n    if (!Number.isFinite(min)) throw new TypeError('min must be a number');\n    if (!Number.isFinite(max)) throw new TypeError('max must be a number');\n    if (min >= max) throw new RangeError('min must be smaller than max');\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let i = 0; i < this.columns; i++) {\n      const column = this.getColumn(i);\n      rescale(column, {\n        min: min,\n        max: max,\n        output: column,\n      });\n      newMatrix.setColumn(i, column);\n    }\n    return newMatrix;\n  }\n\n  flipRows() {\n    const middle = Math.ceil(this.columns / 2);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < middle; j++) {\n        let first = this.get(i, j);\n        let last = this.get(i, this.columns - 1 - j);\n        this.set(i, j, last);\n        this.set(i, this.columns - 1 - j, first);\n      }\n    }\n    return this;\n  }\n\n  flipColumns() {\n    const middle = Math.ceil(this.rows / 2);\n    for (let j = 0; j < this.columns; j++) {\n      for (let i = 0; i < middle; i++) {\n        let first = this.get(i, j);\n        let last = this.get(this.rows - 1 - i, j);\n        this.set(i, j, last);\n        this.set(this.rows - 1 - i, j, first);\n      }\n    }\n    return this;\n  }\n\n  kroneckerProduct(other) {\n    other = Matrix.checkMatrix(other);\n\n    let m = this.rows;\n    let n = this.columns;\n    let p = other.rows;\n    let q = other.columns;\n\n    let result = new Matrix(m * p, n * q);\n    for (let i = 0; i < m; i++) {\n      for (let j = 0; j < n; j++) {\n        for (let k = 0; k < p; k++) {\n          for (let l = 0; l < q; l++) {\n            result.set(p * i + k, q * j + l, this.get(i, j) * other.get(k, l));\n          }\n        }\n      }\n    }\n    return result;\n  }\n\n  transpose() {\n    let result = new Matrix(this.columns, this.rows);\n    for (let i = 0; i < this.rows; i++) {\n      for (let j = 0; j < this.columns; j++) {\n        result.set(j, i, this.get(i, j));\n      }\n    }\n    return result;\n  }\n\n  sortRows(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.rows; i++) {\n      this.setRow(i, this.getRow(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  sortColumns(compareFunction = compareNumbers) {\n    for (let i = 0; i < this.columns; i++) {\n      this.setColumn(i, this.getColumn(i).sort(compareFunction));\n    }\n    return this;\n  }\n\n  subMatrix(startRow, endRow, startColumn, endColumn) {\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    let newMatrix = new Matrix(\n      endRow - startRow + 1,\n      endColumn - startColumn + 1,\n    );\n    for (let i = startRow; i <= endRow; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        newMatrix.set(i - startRow, j - startColumn, this.get(i, j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixRow(indices, startColumn, endColumn) {\n    if (startColumn === undefined) startColumn = 0;\n    if (endColumn === undefined) endColumn = this.columns - 1;\n    if (\n      startColumn > endColumn ||\n      startColumn < 0 ||\n      startColumn >= this.columns ||\n      endColumn < 0 ||\n      endColumn >= this.columns\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(indices.length, endColumn - startColumn + 1);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startColumn; j <= endColumn; j++) {\n        if (indices[i] < 0 || indices[i] >= this.rows) {\n          throw new RangeError(`Row index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(i, j - startColumn, this.get(indices[i], j));\n      }\n    }\n    return newMatrix;\n  }\n\n  subMatrixColumn(indices, startRow, endRow) {\n    if (startRow === undefined) startRow = 0;\n    if (endRow === undefined) endRow = this.rows - 1;\n    if (\n      startRow > endRow ||\n      startRow < 0 ||\n      startRow >= this.rows ||\n      endRow < 0 ||\n      endRow >= this.rows\n    ) {\n      throw new RangeError('Argument out of range');\n    }\n\n    let newMatrix = new Matrix(endRow - startRow + 1, indices.length);\n    for (let i = 0; i < indices.length; i++) {\n      for (let j = startRow; j <= endRow; j++) {\n        if (indices[i] < 0 || indices[i] >= this.columns) {\n          throw new RangeError(`Column index out of range: ${indices[i]}`);\n        }\n        newMatrix.set(j - startRow, i, this.get(j, indices[i]));\n      }\n    }\n    return newMatrix;\n  }\n\n  setSubMatrix(matrix, startRow, startColumn) {\n    matrix = Matrix.checkMatrix(matrix);\n    let endRow = startRow + matrix.rows - 1;\n    let endColumn = startColumn + matrix.columns - 1;\n    checkRange(this, startRow, endRow, startColumn, endColumn);\n    for (let i = 0; i < matrix.rows; i++) {\n      for (let j = 0; j < matrix.columns; j++) {\n        this.set(startRow + i, startColumn + j, matrix.get(i, j));\n      }\n    }\n    return this;\n  }\n\n  selection(rowIndices, columnIndices) {\n    let indices = checkIndices(this, rowIndices, columnIndices);\n    let newMatrix = new Matrix(rowIndices.length, columnIndices.length);\n    for (let i = 0; i < indices.row.length; i++) {\n      let rowIndex = indices.row[i];\n      for (let j = 0; j < indices.column.length; j++) {\n        let columnIndex = indices.column[j];\n        newMatrix.set(i, j, this.get(rowIndex, columnIndex));\n      }\n    }\n    return newMatrix;\n  }\n\n  trace() {\n    let min = Math.min(this.rows, this.columns);\n    let trace = 0;\n    for (let i = 0; i < min; i++) {\n      trace += this.get(i, i);\n    }\n    return trace;\n  }\n\n  clone() {\n    let newMatrix = new Matrix(this.rows, this.columns);\n    for (let row = 0; row < this.rows; row++) {\n      for (let column = 0; column < this.columns; column++) {\n        newMatrix.set(row, column, this.get(row, column));\n      }\n    }\n    return newMatrix;\n  }\n\n  sum(by) {\n    switch (by) {\n      case 'row':\n        return sumByRow(this);\n      case 'column':\n        return sumByColumn(this);\n      case undefined:\n        return sumAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  product(by) {\n    switch (by) {\n      case 'row':\n        return productByRow(this);\n      case 'column':\n        return productByColumn(this);\n      case undefined:\n        return productAll(this);\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  mean(by) {\n    const sum = this.sum(by);\n    switch (by) {\n      case 'row': {\n        for (let i = 0; i < this.rows; i++) {\n          sum[i] /= this.columns;\n        }\n        return sum;\n      }\n      case 'column': {\n        for (let i = 0; i < this.columns; i++) {\n          sum[i] /= this.rows;\n        }\n        return sum;\n      }\n      case undefined:\n        return sum / this.size;\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  variance(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { unbiased = true, mean = this.mean(by) } = options;\n    if (typeof unbiased !== 'boolean') {\n      throw new TypeError('unbiased must be a boolean');\n    }\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByRow(this, unbiased, mean);\n      }\n      case 'column': {\n        if (!Array.isArray(mean)) {\n          throw new TypeError('mean must be an array');\n        }\n        return varianceByColumn(this, unbiased, mean);\n      }\n      case undefined: {\n        if (typeof mean !== 'number') {\n          throw new TypeError('mean must be a number');\n        }\n        return varianceAll(this, unbiased, mean);\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  standardDeviation(by, options) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    const variance = this.variance(by, options);\n    if (by === undefined) {\n      return Math.sqrt(variance);\n    } else {\n      for (let i = 0; i < variance.length; i++) {\n        variance[i] = Math.sqrt(variance[i]);\n      }\n      return variance;\n    }\n  }\n\n  center(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    const { center = this.mean(by) } = options;\n    switch (by) {\n      case 'row': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByRow(this, center);\n        return this;\n      }\n      case 'column': {\n        if (!Array.isArray(center)) {\n          throw new TypeError('center must be an array');\n        }\n        centerByColumn(this, center);\n        return this;\n      }\n      case undefined: {\n        if (typeof center !== 'number') {\n          throw new TypeError('center must be a number');\n        }\n        centerAll(this, center);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n\n  scale(by, options = {}) {\n    if (typeof by === 'object') {\n      options = by;\n      by = undefined;\n    }\n    if (typeof options !== 'object') {\n      throw new TypeError('options must be an object');\n    }\n    let scale = options.scale;\n    switch (by) {\n      case 'row': {\n        if (scale === undefined) {\n          scale = getScaleByRow(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByRow(this, scale);\n        return this;\n      }\n      case 'column': {\n        if (scale === undefined) {\n          scale = getScaleByColumn(this);\n        } else if (!Array.isArray(scale)) {\n          throw new TypeError('scale must be an array');\n        }\n        scaleByColumn(this, scale);\n        return this;\n      }\n      case undefined: {\n        if (scale === undefined) {\n          scale = getScaleAll(this);\n        } else if (typeof scale !== 'number') {\n          throw new TypeError('scale must be a number');\n        }\n        scaleAll(this, scale);\n        return this;\n      }\n      default:\n        throw new Error(`invalid option: ${by}`);\n    }\n  }\n}\n\nAbstractMatrix.prototype.klass = 'Matrix';\nif (typeof Symbol !== 'undefined') {\n  AbstractMatrix.prototype[\n    Symbol.for('nodejs.util.inspect.custom')\n  ] = inspectMatrix;\n}\n\nfunction compareNumbers(a, b) {\n  return a - b;\n}\n\n// Synonyms\nAbstractMatrix.random = AbstractMatrix.rand;\nAbstractMatrix.randomInt = AbstractMatrix.randInt;\nAbstractMatrix.diagonal = AbstractMatrix.diag;\nAbstractMatrix.prototype.diagonal = AbstractMatrix.prototype.diag;\nAbstractMatrix.identity = AbstractMatrix.eye;\nAbstractMatrix.prototype.negate = AbstractMatrix.prototype.neg;\nAbstractMatrix.prototype.tensorProduct =\n  AbstractMatrix.prototype.kroneckerProduct;\n\nexport default class Matrix extends AbstractMatrix {\n  constructor(nRows, nColumns) {\n    super();\n    if (Matrix.isMatrix(nRows)) {\n      return nRows.clone();\n    } else if (Number.isInteger(nRows) && nRows > 0) {\n      // Create an empty matrix\n      this.data = [];\n      if (Number.isInteger(nColumns) && nColumns > 0) {\n        for (let i = 0; i < nRows; i++) {\n          this.data.push(new Float64Array(nColumns));\n        }\n      } else {\n        throw new TypeError('nColumns must be a positive integer');\n      }\n    } else if (Array.isArray(nRows)) {\n      // Copy the values from the 2D array\n      const arrayData = nRows;\n      nRows = arrayData.length;\n      nColumns = arrayData[0].length;\n      if (typeof nColumns !== 'number' || nColumns === 0) {\n        throw new TypeError(\n          'Data must be a 2D array with at least one element',\n        );\n      }\n      this.data = [];\n      for (let i = 0; i < nRows; i++) {\n        if (arrayData[i].length !== nColumns) {\n          throw new RangeError('Inconsistent array dimensions');\n        }\n        this.data.push(Float64Array.from(arrayData[i]));\n      }\n    } else {\n      throw new TypeError(\n        'First argument must be a positive number or an array',\n      );\n    }\n    this.rows = nRows;\n    this.columns = nColumns;\n    return this;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n\n  removeRow(index) {\n    checkRowIndex(this, index);\n    if (this.rows === 1) {\n      throw new RangeError('A matrix cannot have less than one row');\n    }\n    this.data.splice(index, 1);\n    this.rows -= 1;\n    return this;\n  }\n\n  addRow(index, array) {\n    if (array === undefined) {\n      array = index;\n      index = this.rows;\n    }\n    checkRowIndex(this, index, true);\n    array = Float64Array.from(checkRowVector(this, array, true));\n    this.data.splice(index, 0, array);\n    this.rows += 1;\n    return this;\n  }\n\n  removeColumn(index) {\n    checkColumnIndex(this, index);\n    if (this.columns === 1) {\n      throw new RangeError('A matrix cannot have less than one column');\n    }\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns - 1);\n      for (let j = 0; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      for (let j = index + 1; j < this.columns; j++) {\n        newRow[j - 1] = this.data[i][j];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns -= 1;\n    return this;\n  }\n\n  addColumn(index, array) {\n    if (typeof array === 'undefined') {\n      array = index;\n      index = this.columns;\n    }\n    checkColumnIndex(this, index, true);\n    array = checkColumnVector(this, array);\n    for (let i = 0; i < this.rows; i++) {\n      const newRow = new Float64Array(this.columns + 1);\n      let j = 0;\n      for (; j < index; j++) {\n        newRow[j] = this.data[i][j];\n      }\n      newRow[j++] = array[i];\n      for (; j < this.columns + 1; j++) {\n        newRow[j] = this.data[i][j - 1];\n      }\n      this.data[i] = newRow;\n    }\n    this.columns += 1;\n    return this;\n  }\n}\n\ninstallMathOperations(AbstractMatrix, Matrix);\n","import { AbstractMatrix } from '../matrix';\n\nexport default class BaseView extends AbstractMatrix {\n  constructor(matrix, rows, columns) {\n    super();\n    this.matrix = matrix;\n    this.rows = rows;\n    this.columns = columns;\n  }\n}\n","import BaseView from './base';\r\n\r\nexport default class MatrixTransposeView extends BaseView {\r\n  constructor(matrix) {\r\n    super(matrix, matrix.columns, matrix.rows);\r\n  }\r\n\r\n  set(rowIndex, columnIndex, value) {\r\n    this.matrix.set(columnIndex, rowIndex, value);\r\n    return this;\r\n  }\r\n\r\n  get(rowIndex, columnIndex) {\r\n    return this.matrix.get(columnIndex, rowIndex);\r\n  }\r\n}\r\n","import { AbstractMatrix } from '../matrix';\n\nexport default class WrapperMatrix2D extends AbstractMatrix {\n  constructor(data) {\n    super();\n    this.data = data;\n    this.rows = data.length;\n    this.columns = data[0].length;\n  }\n\n  set(rowIndex, columnIndex, value) {\n    this.data[rowIndex][columnIndex] = value;\n    return this;\n  }\n\n  get(rowIndex, columnIndex) {\n    return this.data[rowIndex][columnIndex];\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nexport default class LuDecomposition {\n  constructor(matrix) {\n    matrix = WrapperMatrix2D.checkMatrix(matrix);\n\n    let lu = matrix.clone();\n    let rows = lu.rows;\n    let columns = lu.columns;\n    let pivotVector = new Float64Array(rows);\n    let pivotSign = 1;\n    let i, j, k, p, s, t, v;\n    let LUcolj, kmax;\n\n    for (i = 0; i < rows; i++) {\n      pivotVector[i] = i;\n    }\n\n    LUcolj = new Float64Array(rows);\n\n    for (j = 0; j < columns; j++) {\n      for (i = 0; i < rows; i++) {\n        LUcolj[i] = lu.get(i, j);\n      }\n\n      for (i = 0; i < rows; i++) {\n        kmax = Math.min(i, j);\n        s = 0;\n        for (k = 0; k < kmax; k++) {\n          s += lu.get(i, k) * LUcolj[k];\n        }\n        LUcolj[i] -= s;\n        lu.set(i, j, LUcolj[i]);\n      }\n\n      p = j;\n      for (i = j + 1; i < rows; i++) {\n        if (Math.abs(LUcolj[i]) > Math.abs(LUcolj[p])) {\n          p = i;\n        }\n      }\n\n      if (p !== j) {\n        for (k = 0; k < columns; k++) {\n          t = lu.get(p, k);\n          lu.set(p, k, lu.get(j, k));\n          lu.set(j, k, t);\n        }\n\n        v = pivotVector[p];\n        pivotVector[p] = pivotVector[j];\n        pivotVector[j] = v;\n\n        pivotSign = -pivotSign;\n      }\n\n      if (j < rows && lu.get(j, j) !== 0) {\n        for (i = j + 1; i < rows; i++) {\n          lu.set(i, j, lu.get(i, j) / lu.get(j, j));\n        }\n      }\n    }\n\n    this.LU = lu;\n    this.pivotVector = pivotVector;\n    this.pivotSign = pivotSign;\n  }\n\n  isSingular() {\n    let data = this.LU;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      if (data.get(j, j) === 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let lu = this.LU;\n    let rows = lu.rows;\n\n    if (rows !== value.rows) {\n      throw new Error('Invalid matrix dimensions');\n    }\n    if (this.isSingular()) {\n      throw new Error('LU matrix is singular');\n    }\n\n    let count = value.columns;\n    let X = value.subMatrixRow(this.pivotVector, 0, count - 1);\n    let columns = lu.columns;\n    let i, j, k;\n\n    for (k = 0; k < columns; k++) {\n      for (i = k + 1; i < columns; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    for (k = columns - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / lu.get(k, k));\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * lu.get(i, k));\n        }\n      }\n    }\n    return X;\n  }\n\n  get determinant() {\n    let data = this.LU;\n    if (!data.isSquare()) {\n      throw new Error('Matrix must be square');\n    }\n    let determinant = this.pivotSign;\n    let col = data.columns;\n    for (let j = 0; j < col; j++) {\n      determinant *= data.get(j, j);\n    }\n    return determinant;\n  }\n\n  get lowerTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i > j) {\n          X.set(i, j, data.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, 1);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get upperTriangularMatrix() {\n    let data = this.LU;\n    let rows = data.rows;\n    let columns = data.columns;\n    let X = new Matrix(rows, columns);\n    for (let i = 0; i < rows; i++) {\n      for (let j = 0; j < columns; j++) {\n        if (i <= j) {\n          X.set(i, j, data.get(i, j));\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get pivotPermutationVector() {\n    return Array.from(this.pivotVector);\n  }\n}\n","export function hypotenuse(a, b) {\n  let r = 0;\n  if (Math.abs(a) > Math.abs(b)) {\n    r = b / a;\n    return Math.abs(a) * Math.sqrt(1 + r * r);\n  }\n  if (b !== 0) {\n    r = a / b;\n    return Math.abs(b) * Math.sqrt(1 + r * r);\n  }\n  return 0;\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class QrDecomposition {\n  constructor(value) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let qr = value.clone();\n    let m = value.rows;\n    let n = value.columns;\n    let rdiag = new Float64Array(n);\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      let nrm = 0;\n      for (i = k; i < m; i++) {\n        nrm = hypotenuse(nrm, qr.get(i, k));\n      }\n      if (nrm !== 0) {\n        if (qr.get(k, k) < 0) {\n          nrm = -nrm;\n        }\n        for (i = k; i < m; i++) {\n          qr.set(i, k, qr.get(i, k) / nrm);\n        }\n        qr.set(k, k, qr.get(k, k) + 1);\n        for (j = k + 1; j < n; j++) {\n          s = 0;\n          for (i = k; i < m; i++) {\n            s += qr.get(i, k) * qr.get(i, j);\n          }\n          s = -s / qr.get(k, k);\n          for (i = k; i < m; i++) {\n            qr.set(i, j, qr.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n      rdiag[k] = -nrm;\n    }\n\n    this.QR = qr;\n    this.Rdiag = rdiag;\n  }\n\n  solve(value) {\n    value = Matrix.checkMatrix(value);\n\n    let qr = this.QR;\n    let m = qr.rows;\n\n    if (value.rows !== m) {\n      throw new Error('Matrix row dimensions must agree');\n    }\n    if (!this.isFullRank()) {\n      throw new Error('Matrix is rank deficient');\n    }\n\n    let count = value.columns;\n    let X = value.clone();\n    let n = qr.columns;\n    let i, j, k, s;\n\n    for (k = 0; k < n; k++) {\n      for (j = 0; j < count; j++) {\n        s = 0;\n        for (i = k; i < m; i++) {\n          s += qr.get(i, k) * X.get(i, j);\n        }\n        s = -s / qr.get(k, k);\n        for (i = k; i < m; i++) {\n          X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n        }\n      }\n    }\n    for (k = n - 1; k >= 0; k--) {\n      for (j = 0; j < count; j++) {\n        X.set(k, j, X.get(k, j) / this.Rdiag[k]);\n      }\n      for (i = 0; i < k; i++) {\n        for (j = 0; j < count; j++) {\n          X.set(i, j, X.get(i, j) - X.get(k, j) * qr.get(i, k));\n        }\n      }\n    }\n\n    return X.subMatrix(0, n - 1, 0, count - 1);\n  }\n\n  isFullRank() {\n    let columns = this.QR.columns;\n    for (let i = 0; i < columns; i++) {\n      if (this.Rdiag[i] === 0) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  get upperTriangularMatrix() {\n    let qr = this.QR;\n    let n = qr.columns;\n    let X = new Matrix(n, n);\n    let i, j;\n    for (i = 0; i < n; i++) {\n      for (j = 0; j < n; j++) {\n        if (i < j) {\n          X.set(i, j, qr.get(i, j));\n        } else if (i === j) {\n          X.set(i, j, this.Rdiag[i]);\n        } else {\n          X.set(i, j, 0);\n        }\n      }\n    }\n    return X;\n  }\n\n  get orthogonalMatrix() {\n    let qr = this.QR;\n    let rows = qr.rows;\n    let columns = qr.columns;\n    let X = new Matrix(rows, columns);\n    let i, j, k, s;\n\n    for (k = columns - 1; k >= 0; k--) {\n      for (i = 0; i < rows; i++) {\n        X.set(i, k, 0);\n      }\n      X.set(k, k, 1);\n      for (j = k; j < columns; j++) {\n        if (qr.get(k, k) !== 0) {\n          s = 0;\n          for (i = k; i < rows; i++) {\n            s += qr.get(i, k) * X.get(i, j);\n          }\n\n          s = -s / qr.get(k, k);\n\n          for (i = k; i < rows; i++) {\n            X.set(i, j, X.get(i, j) + s * qr.get(i, k));\n          }\n        }\n      }\n    }\n    return X;\n  }\n}\n","import Matrix from '../matrix';\nimport WrapperMatrix2D from '../wrap/WrapperMatrix2D';\n\nimport { hypotenuse } from './util';\n\nexport default class SingularValueDecomposition {\n  constructor(value, options = {}) {\n    value = WrapperMatrix2D.checkMatrix(value);\n\n    let m = value.rows;\n    let n = value.columns;\n\n    const {\n      computeLeftSingularVectors = true,\n      computeRightSingularVectors = true,\n      autoTranspose = false,\n    } = options;\n\n    let wantu = Boolean(computeLeftSingularVectors);\n    let wantv = Boolean(computeRightSingularVectors);\n\n    let swapped = false;\n    let a;\n    if (m < n) {\n      if (!autoTranspose) {\n        a = value.clone();\n        // eslint-disable-next-line no-console\n        console.warn(\n          'Computing SVD on a matrix with more columns than rows. Consider enabling autoTranspose',\n        );\n      } else {\n        a = value.transpose();\n        m = a.rows;\n        n = a.columns;\n        swapped = true;\n        let aux = wantu;\n        wantu = wantv;\n        wantv = aux;\n      }\n    } else {\n      a = value.clone();\n    }\n\n    let nu = Math.min(m, n);\n    let ni = Math.min(m + 1, n);\n    let s = new Float64Array(ni);\n    let U = new Matrix(m, nu);\n    let V = new Matrix(n, n);\n\n    let e = new Float64Array(n);\n    let work = new Float64Array(m);\n\n    let si = new Float64Array(ni);\n    for (let i = 0; i < ni; i++) si[i] = i;\n\n    let nct = Math.min(m - 1, n);\n    let nrt = Math.max(0, Math.min(n - 2, m));\n    let mrc = Math.max(nct, nrt);\n\n    for (let k = 0; k < mrc; k++) {\n      if (k < nct) {\n        s[k] = 0;\n        for (let i = k; i < m; i++) {\n          s[k] = hypotenuse(s[k], a.get(i, k));\n        }\n        if (s[k] !== 0) {\n          if (a.get(k, k) < 0) {\n            s[k] = -s[k];\n          }\n          for (let i = k; i < m; i++) {\n            a.set(i, k, a.get(i, k) / s[k]);\n          }\n          a.set(k, k, a.get(k, k) + 1);\n        }\n        s[k] = -s[k];\n      }\n\n      for (let j = k + 1; j < n; j++) {\n        if (k < nct && s[k] !== 0) {\n          let t = 0;\n          for (let i = k; i < m; i++) {\n            t += a.get(i, k) * a.get(i, j);\n          }\n          t = -t / a.get(k, k);\n          for (let i = k; i < m; i++) {\n            a.set(i, j, a.get(i, j) + t * a.get(i, k));\n          }\n        }\n        e[j] = a.get(k, j);\n      }\n\n      if (wantu && k < nct) {\n        for (let i = k; i < m; i++) {\n          U.set(i, k, a.get(i, k));\n        }\n      }\n\n      if (k < nrt) {\n        e[k] = 0;\n        for (let i = k + 1; i < n; i++) {\n          e[k] = hypotenuse(e[k], e[i]);\n        }\n        if (e[k] !== 0) {\n          if (e[k + 1] < 0) {\n            e[k] = 0 - e[k];\n          }\n          for (let i = k + 1; i < n; i++) {\n            e[i] /= e[k];\n          }\n          e[k + 1] += 1;\n        }\n        e[k] = -e[k];\n        if (k + 1 < m && e[k] !== 0) {\n          for (let i = k + 1; i < m; i++) {\n            work[i] = 0;\n          }\n          for (let i = k + 1; i < m; i++) {\n            for (let j = k + 1; j < n; j++) {\n              work[i] += e[j] * a.get(i, j);\n            }\n          }\n          for (let j = k + 1; j < n; j++) {\n            let t = -e[j] / e[k + 1];\n            for (let i = k + 1; i < m; i++) {\n              a.set(i, j, a.get(i, j) + t * work[i]);\n            }\n          }\n        }\n        if (wantv) {\n          for (let i = k + 1; i < n; i++) {\n            V.set(i, k, e[i]);\n          }\n        }\n      }\n    }\n\n    let p = Math.min(n, m + 1);\n    if (nct < n) {\n      s[nct] = a.get(nct, nct);\n    }\n    if (m < p) {\n      s[p - 1] = 0;\n    }\n    if (nrt + 1 < p) {\n      e[nrt] = a.get(nrt, p - 1);\n    }\n    e[p - 1] = 0;\n\n    if (wantu) {\n      for (let j = nct; j < nu; j++) {\n        for (let i = 0; i < m; i++) {\n          U.set(i, j, 0);\n        }\n        U.set(j, j, 1);\n      }\n      for (let k = nct - 1; k >= 0; k--) {\n        if (s[k] !== 0) {\n          for (let j = k + 1; j < nu; j++) {\n            let t = 0;\n            for (let i = k; i < m; i++) {\n              t += U.get(i, k) * U.get(i, j);\n            }\n            t = -t / U.get(k, k);\n            for (let i = k; i < m; i++) {\n              U.set(i, j, U.get(i, j) + t * U.get(i, k));\n            }\n          }\n          for (let i = k; i < m; i++) {\n            U.set(i, k, -U.get(i, k));\n          }\n          U.set(k, k, 1 + U.get(k, k));\n          for (let i = 0; i < k - 1; i++) {\n            U.set(i, k, 0);\n          }\n        } else {\n          for (let i = 0; i < m; i++) {\n            U.set(i, k, 0);\n          }\n          U.set(k, k, 1);\n        }\n      }\n    }\n\n    if (wantv) {\n      for (let k = n - 1; k >= 0; k--) {\n        if (k < nrt && e[k] !== 0) {\n          for (let j = k + 1; j < n; j++) {\n            let t = 0;\n            for (let i = k + 1; i < n; i++) {\n              t += V.get(i, k) * V.get(i, j);\n            }\n            t = -t / V.get(k + 1, k);\n            for (let i = k + 1; i < n; i++) {\n              V.set(i, j, V.get(i, j) + t * V.get(i, k));\n            }\n          }\n        }\n        for (let i = 0; i < n; i++) {\n          V.set(i, k, 0);\n        }\n        V.set(k, k, 1);\n      }\n    }\n\n    let pp = p - 1;\n    let iter = 0;\n    let eps = Number.EPSILON;\n    while (p > 0) {\n      let k, kase;\n      for (k = p - 2; k >= -1; k--) {\n        if (k === -1) {\n          break;\n        }\n        const alpha =\n          Number.MIN_VALUE + eps * Math.abs(s[k] + Math.abs(s[k + 1]));\n        if (Math.abs(e[k]) <= alpha || Number.isNaN(e[k])) {\n          e[k] = 0;\n          break;\n        }\n      }\n      if (k === p - 2) {\n        kase = 4;\n      } else {\n        let ks;\n        for (ks = p - 1; ks >= k; ks--) {\n          if (ks === k) {\n            break;\n          }\n          let t =\n            (ks !== p ? Math.abs(e[ks]) : 0) +\n            (ks !== k + 1 ? Math.abs(e[ks - 1]) : 0);\n          if (Math.abs(s[ks]) <= eps * t) {\n            s[ks] = 0;\n            break;\n          }\n        }\n        if (ks === k) {\n          kase = 3;\n        } else if (ks === p - 1) {\n          kase = 1;\n        } else {\n          kase = 2;\n          k = ks;\n        }\n      }\n\n      k++;\n\n      switch (kase) {\n        case 1: {\n          let f = e[p - 2];\n          e[p - 2] = 0;\n          for (let j = p - 2; j >= k; j--) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            if (j !== k) {\n              f = -sn * e[j - 1];\n              e[j - 1] = cs * e[j - 1];\n            }\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, p - 1);\n                V.set(i, p - 1, -sn * V.get(i, j) + cs * V.get(i, p - 1));\n                V.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 2: {\n          let f = e[k - 1];\n          e[k - 1] = 0;\n          for (let j = k; j < p; j++) {\n            let t = hypotenuse(s[j], f);\n            let cs = s[j] / t;\n            let sn = f / t;\n            s[j] = t;\n            f = -sn * e[j];\n            e[j] = cs * e[j];\n            if (wantu) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, k - 1);\n                U.set(i, k - 1, -sn * U.get(i, j) + cs * U.get(i, k - 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          break;\n        }\n        case 3: {\n          const scale = Math.max(\n            Math.abs(s[p - 1]),\n            Math.abs(s[p - 2]),\n            Math.abs(e[p - 2]),\n            Math.abs(s[k]),\n            Math.abs(e[k]),\n          );\n          const sp = s[p - 1] / scale;\n          const spm1 = s[p - 2] / scale;\n          const epm1 = e[p - 2] / scale;\n          const sk = s[k] / scale;\n          const ek = e[k] / scale;\n          const b = ((spm1 + sp) * (spm1 - sp) + epm1 * epm1) / 2;\n          const c = sp * epm1 * (sp * epm1);\n          let shift = 0;\n          if (b !== 0 || c !== 0) {\n            if (b < 0) {\n              shift = 0 - Math.sqrt(b * b + c);\n            } else {\n              shift = Math.sqrt(b * b + c);\n            }\n            shift = c / (b + shift);\n          }\n          let f = (sk + sp) * (sk - sp) + shift;\n          let g = sk * ek;\n          for (let j = k; j < p - 1; j++) {\n            let t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            let cs = f / t;\n            let sn = g / t;\n            if (j !== k) {\n              e[j - 1] = t;\n            }\n            f = cs * s[j] + sn * e[j];\n            e[j] = cs * e[j] - sn * s[j];\n            g = sn * s[j + 1];\n            s[j + 1] = cs * s[j + 1];\n            if (wantv) {\n              for (let i = 0; i < n; i++) {\n                t = cs * V.get(i, j) + sn * V.get(i, j + 1);\n                V.set(i, j + 1, -sn * V.get(i, j) + cs * V.get(i, j + 1));\n                V.set(i, j, t);\n              }\n            }\n            t = hypotenuse(f, g);\n            if (t === 0) t = Number.MIN_VALUE;\n            cs = f / t;\n            sn = g / t;\n            s[j] = t;\n            f = cs * e[j] + sn * s[j + 1];\n            s[j + 1] = -sn * e[j] + cs * s[j + 1];\n            g = sn * e[j + 1];\n            e[j + 1] = cs * e[j + 1];\n            if (wantu && j < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = cs * U.get(i, j) + sn * U.get(i, j + 1);\n                U.set(i, j + 1, -sn * U.get(i, j) + cs * U.get(i, j + 1));\n                U.set(i, j, t);\n              }\n            }\n          }\n          e[p - 2] = f;\n          iter = iter + 1;\n          break;\n        }\n        case 4: {\n          if (s[k] <= 0) {\n            s[k] = s[k] < 0 ? -s[k] : 0;\n            if (wantv) {\n              for (let i = 0; i <= pp; i++) {\n                V.set(i, k, -V.get(i, k));\n              }\n            }\n          }\n          while (k < pp) {\n            if (s[k] >= s[k + 1]) {\n              break;\n            }\n            let t = s[k];\n            s[k] = s[k + 1];\n            s[k + 1] = t;\n            if (wantv && k < n - 1) {\n              for (let i = 0; i < n; i++) {\n                t = V.get(i, k + 1);\n                V.set(i, k + 1, V.get(i, k));\n                V.set(i, k, t);\n              }\n            }\n            if (wantu && k < m - 1) {\n              for (let i = 0; i < m; i++) {\n                t = U.get(i, k + 1);\n                U.set(i, k + 1, U.get(i, k));\n                U.set(i, k, t);\n              }\n            }\n            k++;\n          }\n          iter = 0;\n          p--;\n          break;\n        }\n        // no default\n      }\n    }\n\n    if (swapped) {\n      let tmp = V;\n      V = U;\n      U = tmp;\n    }\n\n    this.m = m;\n    this.n = n;\n    this.s = s;\n    this.U = U;\n    this.V = V;\n  }\n\n  solve(value) {\n    let Y = value;\n    let e = this.threshold;\n    let scols = this.s.length;\n    let Ls = Matrix.zeros(scols, scols);\n\n    for (let i = 0; i < scols; i++) {\n      if (Math.abs(this.s[i]) <= e) {\n        Ls.set(i, i, 0);\n      } else {\n        Ls.set(i, i, 1 / this.s[i]);\n      }\n    }\n\n    let U = this.U;\n    let V = this.rightSingularVectors;\n\n    let VL = V.mmul(Ls);\n    let vrows = V.rows;\n    let urows = U.rows;\n    let VLU = Matrix.zeros(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < scols; k++) {\n          sum += VL.get(i, k) * U.get(j, k);\n        }\n        VLU.set(i, j, sum);\n      }\n    }\n\n    return VLU.mmul(Y);\n  }\n\n  solveForDiagonal(value) {\n    return this.solve(Matrix.diag(value));\n  }\n\n  inverse() {\n    let V = this.V;\n    let e = this.threshold;\n    let vrows = V.rows;\n    let vcols = V.columns;\n    let X = new Matrix(vrows, this.s.length);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < vcols; j++) {\n        if (Math.abs(this.s[j]) > e) {\n          X.set(i, j, V.get(i, j) / this.s[j]);\n        }\n      }\n    }\n\n    let U = this.U;\n\n    let urows = U.rows;\n    let ucols = U.columns;\n    let Y = new Matrix(vrows, urows);\n\n    for (let i = 0; i < vrows; i++) {\n      for (let j = 0; j < urows; j++) {\n        let sum = 0;\n        for (let k = 0; k < ucols; k++) {\n          sum += X.get(i, k) * U.get(j, k);\n        }\n        Y.set(i, j, sum);\n      }\n    }\n\n    return Y;\n  }\n\n  get condition() {\n    return this.s[0] / this.s[Math.min(this.m, this.n) - 1];\n  }\n\n  get norm2() {\n    return this.s[0];\n  }\n\n  get rank() {\n    let tol = Math.max(this.m, this.n) * this.s[0] * Number.EPSILON;\n    let r = 0;\n    let s = this.s;\n    for (let i = 0, ii = s.length; i < ii; i++) {\n      if (s[i] > tol) {\n        r++;\n      }\n    }\n    return r;\n  }\n\n  get diagonal() {\n    return Array.from(this.s);\n  }\n\n  get threshold() {\n    return (Number.EPSILON / 2) * Math.max(this.m, this.n) * this.s[0];\n  }\n\n  get leftSingularVectors() {\n    return this.U;\n  }\n\n  get rightSingularVectors() {\n    return this.V;\n  }\n\n  get diagonalMatrix() {\n    return Matrix.diag(this.s);\n  }\n}\n","import LuDecomposition from './dc/lu';\nimport QrDecomposition from './dc/qr';\nimport SingularValueDecomposition from './dc/svd';\nimport Matrix from './matrix';\nimport WrapperMatrix2D from './wrap/WrapperMatrix2D';\n\nexport function inverse(matrix, useSVD = false) {\n  matrix = WrapperMatrix2D.checkMatrix(matrix);\n  if (useSVD) {\n    return new SingularValueDecomposition(matrix).inverse();\n  } else {\n    return solve(matrix, Matrix.eye(matrix.rows));\n  }\n}\n\nexport function solve(leftHandSide, rightHandSide, useSVD = false) {\n  leftHandSide = WrapperMatrix2D.checkMatrix(leftHandSide);\n  rightHandSide = WrapperMatrix2D.checkMatrix(rightHandSide);\n  if (useSVD) {\n    return new SingularValueDecomposition(leftHandSide).solve(rightHandSide);\n  } else {\n    return leftHandSide.isSquare()\n      ? new LuDecomposition(leftHandSide).solve(rightHandSide)\n      : new QrDecomposition(leftHandSide).solve(rightHandSide);\n  }\n}\n","'use strict';\n\nvar defaultOptions = {\n  size: 1,\n  value: 0\n};\n\n/**\n * Case when the entry is an array\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction arrayCase(data, options) {\n  var len = data.length;\n  if (typeof options.size === 'number') {\n    options.size = [options.size, options.size];\n  }\n\n  var cond = len + options.size[0] + options.size[1];\n\n  var output;\n  if (options.output) {\n    if (options.output.length !== cond) {\n      throw new RangeError('Wrong output size');\n    }\n    output = options.output;\n  } else {\n    output = new Array(cond);\n  }\n\n  var i;\n  if (options.value === 'circular') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) {\n        output[i] = data[(len - (options.size[0] % len) + i) % len];\n      } else if (i < options.size[0] + len) {\n        output[i] = data[i - options.size[0]];\n      } else {\n        output[i] = data[(i - options.size[0]) % len];\n      }\n    }\n  } else if (options.value === 'replicate') {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[0];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[len - 1];\n    }\n  } else if (options.value === 'symmetric') {\n    if (options.size[0] > len || options.size[1] > len) {\n      throw new RangeError(\n        'expanded value should not be bigger than the data length'\n      );\n    }\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = data[options.size[0] - 1 - i];\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = data[2 * len + options.size[0] - i - 1];\n    }\n  } else {\n    for (i = 0; i < cond; i++) {\n      if (i < options.size[0]) output[i] = options.value;\n      else if (i < options.size[0] + len) output[i] = data[i - options.size[0]];\n      else output[i] = options.value;\n    }\n  }\n\n  return output;\n}\n\n/**\n * Case when the entry is a matrix\n * @param data\n * @param options\n * @returns {Array}\n */\nfunction matrixCase(data, options) {\n  // var row = data.length;\n  // var col = data[0].length;\n  if (options.size[0] === undefined) {\n    options.size = [options.size, options.size, options.size, options.size];\n  }\n  throw new Error('matrix not supported yet, sorry');\n}\n\n/**\n * Pads and array\n * @param {Array <number>} data\n * @param {object} options\n */\nfunction padArray(data, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (Array.isArray(data)) {\n    if (Array.isArray(data[0])) return matrixCase(data, options);\n    else return arrayCase(data, options);\n  } else {\n    throw new TypeError('data should be an array');\n  }\n}\n\nmodule.exports = padArray;\n","import { Matrix, MatrixTransposeView, inverse } from 'ml-matrix';\nimport padArray from 'ml-pad-array';\n\n/**\n * Factorial of a number\n * @ignore\n * @param n\n * @return {number}\n */\nfunction factorial(n) {\n  let r = 1;\n  while (n > 0) r *= n--;\n  return r;\n}\n\nconst defaultOptions = {\n  windowSize: 5,\n  derivative: 1,\n  polynomial: 2,\n  pad: 'none',\n  padValue: 'replicate',\n};\n\n/**\n * Savitzky-Golay filter\n * @param {Array <number>} data\n * @param {number} h\n * @param {Object} options\n * @returns {Array}\n */\nexport default function savitzkyGolay(data, h, options) {\n  options = Object.assign({}, defaultOptions, options);\n  if (\n    options.windowSize % 2 === 0 ||\n    options.windowSize < 5 ||\n    !Number.isInteger(options.windowSize)\n  ) {\n    throw new RangeError(\n      'Invalid window size (should be odd and at least 5 integer number)',\n    );\n  }\n  if (options.derivative < 0 || !Number.isInteger(options.derivative)) {\n    throw new RangeError('Derivative should be a positive integer');\n  }\n  if (options.polynomial < 1 || !Number.isInteger(options.polynomial)) {\n    throw new RangeError('Polynomial should be a positive integer');\n  }\n\n  let C, norm;\n  let step = Math.floor(options.windowSize / 2);\n\n  if (options.pad === 'pre') {\n    data = padArray(data, { size: step, value: options.padValue });\n  }\n\n  let ans = new Array(data.length - 2 * step);\n\n  if (\n    options.windowSize === 5 &&\n    options.polynomial === 2 &&\n    (options.derivative === 1 || options.derivative === 2)\n  ) {\n    if (options.derivative === 1) {\n      C = [-2, -1, 0, 1, 2];\n      norm = 10;\n    } else {\n      C = [2, -1, -2, -1, 2];\n      norm = 7;\n    }\n  } else {\n    let J = Matrix.ones(options.windowSize, options.polynomial + 1);\n    let inic = -(options.windowSize - 1) / 2;\n    for (let i = 0; i < J.rows; i++) {\n      for (let j = 0; j < J.columns; j++) {\n        if (inic + 1 !== 0 || j !== 0) J.set(i, j, Math.pow(inic + i, j));\n      }\n    }\n    let Jtranspose = new MatrixTransposeView(J);\n    let Jinv = inverse(Jtranspose.mmul(J));\n    C = Jinv.mmul(Jtranspose);\n    C = C.getRow(options.derivative);\n    norm = 1 / factorial(options.derivative);\n  }\n  let det = norm * Math.pow(h, options.derivative);\n  for (let k = step; k < data.length - step; k++) {\n    let d = 0;\n    for (let l = 0; l < C.length; l++) d += (C[l] * data[l + k - step]) / det;\n    ans[k - step] = d;\n  }\n\n  if (options.pad === 'post') {\n    ans = padArray(ans, { size: step, value: options.padValue });\n  }\n\n  return ans;\n}\n","import normed from 'ml-array-normed';\nimport rescale from 'ml-array-rescale';\nimport equallySpaced from 'ml-array-xy-equally-spaced';\nimport filterX from 'ml-array-xy-filter-x';\nimport Stat from 'ml-stat/array';\nimport { X } from 'ml-spectra-processing';\nimport savitzkyGolay from 'ml-savitzky-golay';\n/**\n *\n * @private\n * @param {object} spectrum\n * @param {object} [options={}]\n * @param {number} [options.from=spectrum.x[0]]\n * @param {number} [options.to=spectrum.x[spectrum.x.length-1]]\n * @param {number} [options.numberOfPoints]\n * @param {Array} [options.filters=[]]\n * @param {Array} [options.exclusions=[]]\n */\nexport default function getNormalized(spectrum, options = {}) {\n  let {\n    from = spectrum.x[0],\n    to = spectrum.x[spectrum.x.length - 1],\n    numberOfPoints,\n    filters = [],\n    exclusions = [],\n    processing = '',\n  } = options;\n\n  let { x, y } = filterX(spectrum, { from, to });\n\n  switch (processing) {\n    case 'firstDerivative':\n      if (options.processing) {\n        y = savitzkyGolay(y, 1, {\n          derivative: 1,\n          polynomial: 2,\n          windowSize: 5,\n        });\n        x = x.slice(2, x.length - 2);\n      }\n      break;\n    case 'secondDerivative':\n      if (options.processing) {\n        y = savitzkyGolay(y, 1, {\n          derivative: 2,\n          polynomial: 2,\n          windowSize: 5,\n        });\n        x = x.slice(2, x.length - 2);\n      }\n      break;\n    default:\n  }\n\n  for (let filter of filters) {\n    let filterOptions = filter.options || {};\n    switch (filter.name) {\n      case 'centerMean': {\n        let mean = Stat.mean(y);\n        y = X.subtract(mean);\n        break;\n      }\n      case 'scaleSD': {\n        let std = Stat.standardDeviation(y);\n        y = X.divide(std);\n        break;\n      }\n      case 'normalize': {\n        // should be an integration in fact\n        y = normed(y, {\n          sumValue: filterOptions.value ? Number(filterOptions.value) : 1,\n          algorithm: 'absolute',\n        });\n        break;\n      }\n      case 'rescale': {\n        y = rescale(y, {\n          min: filterOptions.min ? Number(filter.options.min) : 0,\n          max: filterOptions.max ? Number(filter.options.max) : 1,\n        });\n        break;\n      }\n      case '':\n      case undefined:\n        break;\n      default:\n        throw new Error(`Unknown process kind: ${process.kind}`);\n    }\n  }\n\n  if (!numberOfPoints) {\n    return filterX({ x, y }, { from, to, exclusions });\n  }\n\n  return equallySpaced({ x, y }, { from, to, numberOfPoints, exclusions });\n}\n","import getNormalized from './util/getNormalized';\n\nconst DEFAULT_FLAVOR = 'weightVersusTemperature';\n\n/**\n * Class allowing to store and manipulate a spectrum\n * @class Spectrum\n * @param {object} [options={}]\n * @param {string} [options.id=randomString] unique identifier\n * @param {string} [options.label] human redeable label\n */\nexport default class Spectrum {\n  constructor(options = {}) {\n    this.id = options.id || Math.random().toString(36).substring(2, 10);\n    this.label = options.label || this.id;\n    this.flavors = {};\n  }\n\n  set(points, options = {}) {\n    const { flavor = DEFAULT_FLAVOR } = options;\n    this.flavors[flavor.toLowerCase()] = standardizeData(points, options);\n  }\n\n  get(flavor = DEFAULT_FLAVOR) {\n    flavor = flavor.toLowerCase();\n    if (!this.flavors[flavor]) {\n      return undefined;\n    }\n    return this.flavors[flavor];\n  }\n\n  getData(options = {}) {\n    const { flavor, normalization } = options;\n    let data = this.get(flavor);\n    if (!data) return undefined;\n    return getNormalized(data, normalization);\n  }\n\n  getXLabel(flavor) {\n    return this.get(flavor).xLabel;\n  }\n\n  getYLabel(flavor) {\n    return this.get(flavor).yLabel;\n  }\n}\n\nfunction standardizeData(points, options = {}) {\n  const { meta = {}, tmp = {}, xLabel = '', yLabel = '', title = '' } = options;\n  let { x, y } = points;\n  if (x && x.length > 1 && x[0] > x[x.length - 1]) {\n    x = x.reverse();\n    y = y.reverse();\n  } else {\n    x = x || [];\n    y = y || [];\n  }\n  points = { x, y };\n\n  return {\n    x: points.x,\n    y: points.y,\n    xLabel,\n    yLabel,\n    title,\n    meta,\n    tmp,\n  };\n}\n","export default class SpectraManager {\n  constructor() {\n    this.spectra = [];\n  }\n\n  addSpectrum(spectrum) {\n    let index = this.getSpectrumIndex(spectrum.id);\n    if (index === undefined) {\n      this.spectra.push(spectrum);\n    } else {\n      this.spectra[index] = spectrum;\n    }\n  }\n\n  getSpectra(options = {}) {\n    const { ids } = options;\n    let spectra = [];\n    for (const spectrum of this.spectra) {\n      if (!ids || ids.includes(spectrum.id)) {\n        spectra.push(spectrum);\n      }\n    }\n    return spectra;\n  }\n\n  /**\n   * Remove the spectrum from the SpectraProcessor for the specified id\n   * @param {string} id\n   */\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.spectra.splice(index, 1);\n  }\n\n  /**\n   * Returns the index of the spectrum in the spectra array\n   * @param {string} id\n   * @returns {number}\n   */\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.spectra.length; i++) {\n      let spectrum = this.spectra[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  /**\n   * Checks if the ID of a spectrum exists in the SpectraProcessor\n   * @param {string} id\n   */\n  contains(id) {\n    return !isNaN(this.getSpectrumIndex(id));\n  }\n}\n","export default function parsePerkinElmer(text) {\n  let lines = text.split(/[\\r\\n]+/);\n  let result = { meta: {}, data: { time: [], weight: [], temperature: [] } };\n  let section = '';\n  let inMethodSteps = false;\n  for (let line of lines) {\n    if (inMethodSteps) {\n      if (line.startsWith('1) TGA')) {\n        inMethodSteps = false;\n      } else {\n        if (!result.meta['Method Steps']) result.meta['Method Steps'] = '';\n        result.meta['Method Steps'] += `${line.replace(/\\t/g, '  ')}\\n`;\n      }\n    } else if (line.match(/^[a-zA-Z -]+$/)) {\n      section = trim(line);\n    } else if (line.match(/.*:.*/)) {\n      let position = line.indexOf(':');\n      let description = line.substring(0, position);\n      let value = trim(line.substring(position + 1));\n      result.meta[(section ? `${section}_` : '') + description] = value;\n    } else if (line.match(/^[0-9\\t .]+$/)) {\n      let fields = line.replace(/^\\t/, '').split('\\t');\n      result.data.time.push(Number(fields[0]));\n      result.data.weight.push(Number(fields[1]));\n      result.data.temperature.push(Number(fields[4]));\n    } else {\n      //  console.log('Problem: ', line);\n    }\n    if (line.startsWith('Method Steps:')) {\n      inMethodSteps = true;\n    }\n  }\n  return result;\n}\n\nfunction trim(string) {\n  return string.replace(/^[ \\t]*(.*?)[ \\t]*$/, '$1');\n}\n","import Spectrum from '../Spectrum';\n\nimport parsePerkinElmer from './parsePerkinElmer';\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} text - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nexport default function fromPerkinElmer(text) {\n  let spectrum = new Spectrum();\n  let result = parsePerkinElmer(text);\n\n  spectrum.set(\n    { x: result.data.temperature, y: result.data.weight },\n    {\n      xLabel: 'Temperature [°C]',\n      yLabel: 'Weight [mg]',\n      title: result.meta['Sample ID'],\n      meta: result.meta,\n      flavor: 'weightVersusTemperature',\n    },\n  );\n  spectrum.set(result.data.time, result.data.weight, {\n    xLabel: 'Time [s]',\n    yLabel: 'Weight [mg]',\n    title: result.meta['Sample ID'],\n    meta: result.meta,\n    flavor: 'weightVersusTime',\n  });\n  return spectrum;\n}\n","const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\nexport function complexChromatogram(result) {\n  let spectra = result.spectra;\n  let length = spectra.length;\n  let chromatogram = {\n    times: new Array(length),\n    series: {\n      ms: {\n        dimension: 2,\n        data: new Array(length),\n      },\n    },\n  };\n\n  let existingGCMSFields = [];\n  for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n    let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n    if (spectra[0][label]) {\n      existingGCMSFields.push(label);\n      chromatogram.series[label] = {\n        dimension: 1,\n        data: new Array(length),\n      };\n    }\n  }\n\n  for (let i = 0; i < length; i++) {\n    let spectrum = spectra[i];\n    chromatogram.times[i] = spectrum.pageValue;\n    for (let j = 0; j < existingGCMSFields.length; j++) {\n      chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n        spectrum[existingGCMSFields[j]],\n      );\n    }\n    if (spectrum.data) {\n      chromatogram.series.ms.data[i] = [spectrum.data.x, spectrum.data.y];\n    }\n  }\n  result.chromatogram = chromatogram;\n}\n\nexport function isMSField(canonicDataLabel) {\n  return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n}\n\nexport function convertMSFieldToLabel(value) {\n  return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n}\n","export default function convertToFloatArray(stringArray) {\n  let floatArray = [];\n  for (let i = 0; i < stringArray.length; i++) {\n    floatArray.push(parseFloat(stringArray[i]));\n  }\n  return floatArray;\n}\n","export default function fastParseXYData(spectrum, value) {\n  // TODO need to deal with result\n  //  console.log(value);\n  // we check if deltaX is defined otherwise we calculate it\n\n  let yFactor = spectrum.yFactor;\n  let deltaX = spectrum.deltaX;\n\n  spectrum.isXYdata = true;\n  // TODO to be improved using 2 array {x:[], y:[]}\n  let currentData = [];\n  spectrum.data = currentData;\n\n  let currentX = spectrum.firstX;\n  let currentY = spectrum.firstY;\n\n  // we skip the first line\n  //\n  let endLine = false;\n  let ascii;\n  let i = 0;\n  for (; i < value.length; i++) {\n    ascii = value.charCodeAt(i);\n    if (ascii === 13 || ascii === 10) {\n      endLine = true;\n    } else {\n      if (endLine) break;\n    }\n  }\n\n  // we proceed taking the i after the first line\n  let newLine = true;\n  let isDifference = false;\n  let isLastDifference = false;\n  let lastDifference = 0;\n  let isDuplicate = false;\n  let inComment = false;\n  let currentValue = 0; // can be a difference or a duplicate\n  let lastValue = 0; // must be the real last value\n  let isNegative = false;\n  let inValue = false;\n  let skipFirstValue = false;\n  let decimalPosition = 0;\n  for (; i <= value.length; i++) {\n    if (i === value.length) ascii = 13;\n    else ascii = value.charCodeAt(i);\n    if (inComment) {\n      // we should ignore the text if we are after $$\n      if (ascii === 13 || ascii === 10) {\n        newLine = true;\n        inComment = false;\n      }\n    } else {\n      // when is it a new value ?\n      // when it is not a digit, . or comma\n      // it is a number that is either new or we continue\n      if (ascii <= 57 && ascii >= 48) {\n        // a number\n        inValue = true;\n        if (decimalPosition > 0) {\n          currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n        } else {\n          currentValue *= 10;\n          currentValue += ascii - 48;\n        }\n      } else if (ascii === 44 || ascii === 46) {\n        // a \",\" or \".\"\n        inValue = true;\n        decimalPosition++;\n      } else {\n        if (inValue) {\n          // need to process the previous value\n          if (newLine) {\n            newLine = false; // we don't check the X value\n            // console.log(\"NEW LINE\",isDifference, lastDifference);\n            // if new line and lastDifference, the first value is just a check !\n            // that we don't check ...\n            if (isLastDifference) skipFirstValue = true;\n          } else {\n            // need to deal with duplicate and differences\n            if (skipFirstValue) {\n              skipFirstValue = false;\n            } else {\n              if (isDifference) {\n                lastDifference = isNegative ? 0 - currentValue : currentValue;\n                isLastDifference = true;\n                isDifference = false;\n              } else if (!isDuplicate) {\n                lastValue = isNegative ? 0 - currentValue : currentValue;\n              }\n              let duplicate = isDuplicate ? currentValue - 1 : 1;\n              for (let j = 0; j < duplicate; j++) {\n                if (isLastDifference) {\n                  currentY += lastDifference;\n                } else {\n                  currentY = lastValue;\n                }\n                currentData.push(currentX);\n                currentData.push(currentY * yFactor);\n                currentX += deltaX;\n              }\n            }\n          }\n          isNegative = false;\n          currentValue = 0;\n          decimalPosition = 0;\n          inValue = false;\n          isDuplicate = false;\n        }\n\n        // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n        if (ascii < 74 && ascii > 63) {\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 64;\n        } else if (ascii > 96 && ascii < 106) {\n          // negative SQZ digits a b c d e f g h i (ascii 97-105)\n          inValue = true;\n          isLastDifference = false;\n          currentValue = ascii - 96;\n          isNegative = true;\n        } else if (ascii === 115) {\n          // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n          inValue = true;\n          isDuplicate = true;\n          currentValue = 9;\n        } else if (ascii > 82 && ascii < 91) {\n          inValue = true;\n          isDuplicate = true;\n          currentValue = ascii - 82;\n        } else if (ascii > 73 && ascii < 83) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 73;\n        } else if (ascii > 105 && ascii < 115) {\n          // negative DIF digits j k l m n o p q r (ascii 106-114)\n          inValue = true;\n          isDifference = true;\n          currentValue = ascii - 105;\n          isNegative = true;\n        } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n          // $ sign, we need to check the next one\n          inValue = true;\n          inComment = true;\n        } else if (ascii === 37) {\n          // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n          inValue = true;\n          isDifference = true;\n          currentValue = 0;\n          isNegative = false;\n        } else if (ascii === 45) {\n          // a \"-\"\n          // check if after there is a number, decimal or comma\n          let ascii2 = value.charCodeAt(i + 1);\n          if (\n            (ascii2 >= 48 && ascii2 <= 57) ||\n            ascii2 === 44 ||\n            ascii2 === 46\n          ) {\n            inValue = true;\n            if (!newLine) isLastDifference = false;\n            isNegative = true;\n          }\n        } else if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n        // and now analyse the details ... space or tabulation\n        // if \"+\" we just don't care\n      }\n    }\n  }\n}\n","export default function parsePeakTable(spectrum, value, result) {\n  let removeCommentRegExp = /\\$\\$.*/;\n  let peakTableSplitRegExp = /[,\\t ]+/;\n\n  spectrum.isPeaktable = true;\n  let values;\n  let currentData = [];\n  spectrum.data = currentData;\n\n  // counts for around 20% of the time\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i]\n      .trim()\n      .replace(removeCommentRegExp, '')\n      .split(peakTableSplitRegExp);\n    if (values.length % 2 === 0) {\n      for (let j = 0; j < values.length; j = j + 2) {\n        // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n        currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n        currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n      }\n    } else {\n      result.logs.push(`Format error: ${values}`);\n    }\n  }\n}\n","export default function parseXYA(spectrum, value) {\n  let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n  spectrum.isXYAdata = true;\n  let values;\n  let currentData = [];\n  spectrum.data = currentData;\n\n  let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n  for (let i = 1; i < lines.length; i++) {\n    values = lines[i].trim().replace(removeSymbolRegExp, '').split(',');\n    currentData.push(parseFloat(values[0]));\n    currentData.push(parseFloat(values[1]));\n  }\n}\n","(function(){function a(d){for(var e=0,f=d.length-1,g=void 0,h=void 0,i=void 0,j=c(e,f);!0;){if(f<=e)return d[j];if(f==e+1)return d[e]>d[f]&&b(d,e,f),d[j];for(g=c(e,f),d[g]>d[f]&&b(d,g,f),d[e]>d[f]&&b(d,e,f),d[g]>d[e]&&b(d,g,e),b(d,g,e+1),h=e+1,i=f;!0;){do h++;while(d[e]>d[h]);do i--;while(d[i]>d[e]);if(i<h)break;b(d,h,i)}b(d,e,i),i<=j&&(e=h),i>=j&&(f=i-1)}}var b=function b(d,e,f){var _ref;return _ref=[d[f],d[e]],d[e]=_ref[0],d[f]=_ref[1],_ref},c=function c(d,e){return~~((d+e)/2)};'undefined'!=typeof module&&module.exports?module.exports=a:window.median=a})();\n","import isArray from 'is-any-array';\nimport quickSelectMedian from 'median-quickselect';\n\n/**\n * Computes the median of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction median(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  return quickSelectMedian(input.slice());\n}\n\nexport default median;\n","import getMedian from 'ml-array-median';\n\nexport default function convertTo3DZ(spectra) {\n  let minZ = spectra[0].data[0];\n  let maxZ = minZ;\n  let ySize = spectra.length;\n  let xSize = spectra[0].data.length / 2;\n  let z = new Array(ySize);\n  for (let i = 0; i < ySize; i++) {\n    z[i] = new Array(xSize);\n    let xVector = spectra[i].data;\n    for (let j = 0; j < xSize; j++) {\n      let value = xVector[j * 2 + 1];\n      z[i][j] = value;\n      if (value < minZ) minZ = value;\n      if (value > maxZ) maxZ = value;\n    }\n  }\n\n  const firstX = spectra[0].data[0];\n  const lastX = spectra[0].data[spectra[0].data.length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n  const firstY = spectra[0].pageValue;\n  const lastY = spectra[ySize - 1].pageValue;\n\n  // Because the min / max value are the only information about the matrix if we invert\n  // min and max we need to invert the array\n  if (firstX > lastX) {\n    for (let spectrum of z) {\n      spectrum.reverse();\n    }\n  }\n  if (firstY > lastY) {\n    z.reverse();\n  }\n\n  return {\n    z: z,\n    minX: Math.min(firstX, lastX),\n    maxX: Math.max(firstX, lastX),\n    minY: Math.min(firstY, lastY),\n    maxY: Math.max(firstY, lastY),\n    minZ: minZ,\n    maxZ: maxZ,\n    noise: getMedian(z[0].map(Math.abs)),\n  };\n}\n","export default function generateContourLines(zData, options) {\n  let noise = zData.noise;\n  let z = zData.z;\n  let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n  let isOver0, isOver1, isOver2, isOver3;\n  let nbSubSpectra = z.length;\n  let nbPovars = z[0].length;\n  let pAx, pAy, pBx, pBy;\n\n  let x0 = zData.minX;\n  let xN = zData.maxX;\n  let dx = (xN - x0) / (nbPovars - 1);\n  let y0 = zData.minY;\n  let yN = zData.maxY;\n  let dy = (yN - y0) / (nbSubSpectra - 1);\n  let minZ = zData.minZ;\n  let maxZ = zData.maxZ;\n\n  // System.out.prvarln('y0 '+y0+' yN '+yN);\n  // -------------------------\n  // Povars attribution\n  //\n  // 0----1\n  // |  / |\n  // | /  |\n  // 2----3\n  //\n  // ---------------------d------\n\n  let iter = options.nbContourLevels * 2;\n  let contourLevels = new Array(iter);\n  let lineZValue;\n  for (let level = 0; level < iter; level++) {\n    // multiply by 2 for positif and negatif\n    let contourLevel = {};\n    contourLevels[level] = contourLevel;\n    let side = level % 2;\n    let factor =\n      (maxZ - options.noiseMultiplier * noise) *\n      Math.exp((level >> 1) - options.nbContourLevels);\n    if (side === 0) {\n      lineZValue = factor + options.noiseMultiplier * noise;\n    } else {\n      lineZValue = 0 - factor - options.noiseMultiplier * noise;\n    }\n    let lines = [];\n    contourLevel.zValue = lineZValue;\n    contourLevel.lines = lines;\n\n    if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n    for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n      let subSpectra = z[iSubSpectra];\n      let subSpectraAfter = z[iSubSpectra + 1];\n      for (let povar = 0; povar < nbPovars - 1; povar++) {\n        povarHeight0 = subSpectra[povar];\n        povarHeight1 = subSpectra[povar + 1];\n        povarHeight2 = subSpectraAfter[povar];\n        povarHeight3 = subSpectraAfter[povar + 1];\n\n        isOver0 = povarHeight0 > lineZValue;\n        isOver1 = povarHeight1 > lineZValue;\n        isOver2 = povarHeight2 > lineZValue;\n        isOver3 = povarHeight3 > lineZValue;\n\n        // Example povar0 is over the plane and povar1 and\n        // povar2 are below, we find the varersections and add\n        // the segment\n        if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n          pAx =\n            povar + (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n          pAy = iSubSpectra;\n          pBx = povar;\n          pBy =\n            iSubSpectra +\n            (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // remove push does not help !!!!\n        if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n          pAx = povar + 1;\n          pAy =\n            iSubSpectra +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n          pBx =\n            povar +\n            1 -\n            (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n          pBy = iSubSpectra + 1;\n          lines.push(pAx * dx + x0);\n          lines.push(pAy * dy + y0);\n          lines.push(pBx * dx + x0);\n          lines.push(pBy * dy + y0);\n        }\n        // test around the diagonal\n        if (isOver1 !== isOver2) {\n          pAx =\n            (povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dx +\n            x0;\n          pAy =\n            (iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n              dy +\n            y0;\n          if (isOver1 !== isOver0) {\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n            pBy = iSubSpectra;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver0) {\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver1 !== isOver3) {\n            pBx = povar + 1;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          if (isOver2 !== isOver3) {\n            pBx =\n              povar +\n              (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx);\n            lines.push(pAy);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n        }\n      }\n    }\n  }\n\n  return {\n    minX: zData.minX,\n    maxX: zData.maxX,\n    minY: zData.minY,\n    maxY: zData.maxY,\n    segments: contourLevels,\n  };\n}\n","import convertTo3DZ from './convertTo3DZ';\nimport generateContourLines from './generateContourLines';\n\nexport default function add2D(result, options) {\n  let zData = convertTo3DZ(result.spectra);\n  if (!options.noContour) {\n    result.contourLines = generateContourLines(zData, options);\n    delete zData.z;\n  }\n  result.minMax = zData;\n}\n","export default function profiling(result, action, options) {\n  if (result.profiling) {\n    result.profiling.push({\n      action,\n      time: Date.now() - options.start,\n    });\n  }\n}\n","export default function simpleChromatogram(result) {\n  let data = result.spectra[0].data;\n  result.chromatogram = {\n    times: data.x.slice(),\n    series: {\n      intensity: {\n        dimension: 1,\n        data: data.y.slice(),\n      },\n    },\n  };\n}\n","import add2D from './2d/add2D';\nimport { complexChromatogram } from './complexChromatogram';\nimport profiling from './profiling';\nimport simpleChromatogram from './simpleChromatogram';\n\nexport default function postProcessing(entriesFlat, result, options) {\n  for (let entry of entriesFlat) {\n    if (Object.keys(entry.ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(entry.ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = entry.ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      entry.ntuples = newNtuples;\n    }\n\n    if (entry.twoD && options.wantXY) {\n      add2D(entry, options);\n\n      profiling(result, 'Finished countour plot calculation', options);\n\n      if (!options.keepSpectra) {\n        delete entry.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && options.wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (entry.spectra && entry.spectra.length > 0) {\n        for (let spectrum of entry.spectra) {\n          if (spectrum.data) {\n            let data = spectrum.data;\n            let newData = {\n              x: new Array(data.length / 2),\n              y: new Array(data.length / 2),\n            };\n            for (let k = 0; k < data.length; k = k + 2) {\n              newData.x[k / 2] = data[k];\n              newData.y[k / 2] = data[k + 1];\n            }\n            spectrum.data = newData;\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (entry.spectra.length > 1) {\n        complexChromatogram(entry);\n      } else {\n        simpleChromatogram(entry);\n      }\n      profiling(result, 'Finished chromatogram calculation', options);\n    }\n  }\n}\n","export default function prepareSpectrum(spectrum) {\n  if (!spectrum.xFactor) spectrum.xFactor = 1;\n  if (!spectrum.yFactor) spectrum.yFactor = 1;\n  if (spectrum.observeFrequency) {\n    if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n      spectrum.xUnit = 'PPM';\n      spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n      spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n      spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n      spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n    }\n  }\n  if (spectrum.shiftOffsetVal) {\n    let shift = spectrum.firstX - spectrum.shiftOffsetVal;\n    spectrum.firstX = spectrum.firstX - shift;\n    spectrum.lastX = spectrum.lastX - shift;\n  }\n}\n","import { isMSField, convertMSFieldToLabel } from './complexChromatogram';\nimport convertToFloatArray from './convertToFloatArray';\nimport fastParseXYData from './parse/fastParseXYData';\nimport parsePeakTable from './parse/parsePeakTable';\nimport parseXYA from './parse/parseXYA';\nimport postProcessing from './postProcessing';\nimport prepareSpectrum from './prepareSpectrum';\nimport profiling from './profiling';\n\n// the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\nconst ntuplesSeparator = /[, \\t]+/;\n\nclass Spectrum {}\n\nconst defaultOptions = {\n  keepRecordsRegExp: /^$/,\n  canonicDataLabels: true,\n  dynamicTyping: false,\n  xy: true,\n  withoutXY: false,\n  chromatogram: false,\n  keepSpectra: false,\n  noContour: false,\n  nbContourLevels: 7,\n  noiseMultiplier: 5,\n  profiling: false,\n};\n\nexport default function convert(jcamp, options) {\n  options = Object.assign({}, defaultOptions, options);\n  options.wantXY = !options.withoutXY;\n  options.start = Date.now();\n\n  let entriesFlat = [];\n\n  let result = {\n    profiling: options.profiling ? [] : false,\n    logs: [],\n    entries: [],\n  };\n\n  let tmpResult = { children: [] };\n  let currentEntry = tmpResult;\n  let parentsStack = [];\n\n  let spectrum = new Spectrum();\n\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  profiling(result, 'Before split to LDRS', options);\n\n  let ldrs = jcamp.replace(/[\\r\\n]+##/g, '\\n##').split('\\n##');\n\n  profiling(result, 'Split to LDRS', options);\n\n  if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n  for (let ldr of ldrs) {\n    // This is a new LDR\n    let position = ldr.indexOf('=');\n    let dataLabel = position > 0 ? ldr.substring(0, position) : ldr;\n    let dataValue = position > 0 ? ldr.substring(position + 1).trim() : '';\n\n    let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n    if (canonicDataLabel === 'DATATABLE') {\n      let endLine = dataValue.indexOf('\\n');\n      if (endLine === -1) endLine = dataValue.indexOf('\\r');\n      if (endLine > 0) {\n        let xIndex = -1;\n        let yIndex = -1;\n        // ##DATA TABLE= (X++(I..I)), XYDATA\n        // We need to find the variables\n\n        let infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n        if (infos[0].indexOf('++') > 0) {\n          let firstVariable = infos[0].replace(\n            /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n            '$1',\n          );\n          let secondVariable = infos[0].replace(/.*\\.\\.([a-zA-Z0-9]+).*/, '$1');\n          xIndex = currentEntry.ntuples.symbol.indexOf(firstVariable);\n          yIndex = currentEntry.ntuples.symbol.indexOf(secondVariable);\n        }\n\n        if (xIndex === -1) xIndex = 0;\n        if (yIndex === -1) yIndex = 0;\n\n        if (currentEntry.ntuples.first) {\n          if (currentEntry.ntuples.first.length > xIndex) {\n            spectrum.firstX = currentEntry.ntuples.first[xIndex];\n          }\n          if (currentEntry.ntuples.first.length > yIndex) {\n            spectrum.firstY = currentEntry.ntuples.first[yIndex];\n          }\n        }\n        if (currentEntry.ntuples.last) {\n          if (currentEntry.ntuples.last.length > xIndex) {\n            spectrum.lastX = currentEntry.ntuples.last[xIndex];\n          }\n          if (currentEntry.ntuples.last.length > yIndex) {\n            spectrum.lastY = currentEntry.ntuples.last[yIndex];\n          }\n        }\n        if (\n          currentEntry.ntuples.vardim &&\n          currentEntry.ntuples.vardim.length > xIndex\n        ) {\n          spectrum.nbPoints = currentEntry.ntuples.vardim[xIndex];\n        }\n        if (currentEntry.ntuples.factor) {\n          if (currentEntry.ntuples.factor.length > xIndex) {\n            spectrum.xFactor = currentEntry.ntuples.factor[xIndex];\n          }\n          if (currentEntry.ntuples.factor.length > yIndex) {\n            spectrum.yFactor = currentEntry.ntuples.factor[yIndex];\n          }\n        }\n        if (currentEntry.ntuples.units) {\n          if (currentEntry.ntuples.units.length > xIndex) {\n            spectrum.xUnit = currentEntry.ntuples.units[xIndex];\n          }\n          if (currentEntry.ntuples.units.length > yIndex) {\n            spectrum.yUnit = currentEntry.ntuples.units[yIndex];\n          }\n        }\n        spectrum.datatable = infos[0];\n        if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n          canonicDataLabel = 'PEAKTABLE';\n        } else if (\n          infos[1] &&\n          (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n        ) {\n          canonicDataLabel = 'XYDATA';\n          spectrum.deltaX =\n            (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n        }\n      }\n    }\n\n    if (canonicDataLabel === 'XYDATA') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n        if (dataValue.match(/.*\\+\\+.*/)) {\n          // ex: (X++(Y..Y))\n          if (!spectrum.deltaX) {\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n          fastParseXYData(spectrum, dataValue, result);\n        } else {\n          parsePeakTable(spectrum, dataValue, result);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    } else if (canonicDataLabel === 'PEAKTABLE') {\n      if (options.wantXY) {\n        prepareSpectrum(spectrum);\n        parsePeakTable(spectrum, dataValue, result);\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n    if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n      if (options.wantXY) {\n        if (dataValue.match(/.*(XYA).*/)) {\n          // ex: (XYA)\n          parseXYA(spectrum, dataValue);\n        }\n        currentEntry.spectra.push(spectrum);\n        spectrum = new Spectrum();\n      }\n      continue;\n    }\n\n    if (canonicDataLabel === 'TITLE') {\n      let parentEntry = currentEntry;\n      if (!parentEntry.children) {\n        parentEntry.children = [];\n      }\n      currentEntry = {\n        spectra: [],\n        ntuples: {},\n        info: {},\n      };\n      parentEntry.children.push(currentEntry);\n      parentsStack.push(parentEntry);\n      entriesFlat.push(currentEntry);\n      currentEntry.title = dataValue;\n    } else if (canonicDataLabel === 'DATATYPE') {\n      currentEntry.dataType = dataValue;\n      if (dataValue.indexOf('nD') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'NTUPLES') {\n      if (dataValue.indexOf('nD') > -1) {\n        currentEntry.twoD = true;\n      }\n    } else if (canonicDataLabel === 'DATACLASS') {\n      currentEntry.dataClass = dataValue;\n    } else if (canonicDataLabel === 'XUNITS') {\n      spectrum.xUnit = dataValue;\n    } else if (canonicDataLabel === 'YUNITS') {\n      spectrum.yUnit = dataValue;\n    } else if (canonicDataLabel === 'FIRSTX') {\n      spectrum.firstX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTX') {\n      spectrum.lastX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'FIRSTY') {\n      spectrum.firstY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'LASTY') {\n      spectrum.lastY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'NPOINTS') {\n      spectrum.nbPoints = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'XFACTOR') {\n      spectrum.xFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'YFACTOR') {\n      spectrum.yFactor = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXX') {\n      spectrum.maxX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINX') {\n      spectrum.minX = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MAXY') {\n      spectrum.maxY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'MINY') {\n      spectrum.minY = parseFloat(dataValue);\n    } else if (canonicDataLabel === 'DELTAX') {\n      spectrum.deltaX = parseFloat(dataValue);\n    } else if (\n      canonicDataLabel === '.OBSERVEFREQUENCY' ||\n      canonicDataLabel === '$SFO1'\n    ) {\n      if (!spectrum.observeFrequency) {\n        spectrum.observeFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n      if (!spectrum.xType) {\n        currentEntry.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n      }\n    } else if (canonicDataLabel === '$SFO2') {\n      if (!currentEntry.indirectFrequency) {\n        currentEntry.indirectFrequency = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$OFFSET') {\n      // OFFSET for Bruker spectra\n      currentEntry.shiftOffsetNum = 0;\n      if (!spectrum.shiftOffsetVal) {\n        spectrum.shiftOffsetVal = parseFloat(dataValue);\n      }\n    } else if (canonicDataLabel === '$REFERENCEPOINT') {\n      // OFFSET for Varian spectra\n      // if we activate this part it does not work for ACD specmanager\n      //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n      //                 var parts = dataValue.split(/ *, */);\n      //                 currentEntry.shiftOffsetNum = parseInt(parts[2].trim());\n      //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n    } else if (canonicDataLabel === 'VARNAME') {\n      currentEntry.ntuples.varname = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'SYMBOL') {\n      currentEntry.ntuples.symbol = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARTYPE') {\n      currentEntry.ntuples.vartype = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARFORM') {\n      currentEntry.ntuples.varform = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'VARDIM') {\n      currentEntry.ntuples.vardim = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'UNITS') {\n      currentEntry.ntuples.units = dataValue.split(ntuplesSeparator);\n    } else if (canonicDataLabel === 'FACTOR') {\n      currentEntry.ntuples.factor = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'FIRST') {\n      currentEntry.ntuples.first = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'LAST') {\n      currentEntry.ntuples.last = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MIN') {\n      currentEntry.ntuples.min = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === 'MAX') {\n      currentEntry.ntuples.max = convertToFloatArray(\n        dataValue.split(ntuplesSeparator),\n      );\n    } else if (canonicDataLabel === '.NUCLEUS') {\n      if (currentEntry.twoD) {\n        currentEntry.yType = dataValue.split(ntuplesSeparator)[0];\n      }\n    } else if (canonicDataLabel === 'PAGE') {\n      spectrum.page = dataValue.trim();\n      spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n      spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n      let pageSymbolIndex = currentEntry.ntuples.symbol.indexOf(\n        spectrum.pageSymbol,\n      );\n      let unit = '';\n      if (\n        currentEntry.ntuples.units &&\n        currentEntry.ntuples.units[pageSymbolIndex]\n      ) {\n        unit = currentEntry.ntuples.units[pageSymbolIndex];\n      }\n      if (currentEntry.indirectFrequency && unit !== 'PPM') {\n        spectrum.pageValue /= currentEntry.indirectFrequency;\n      }\n    } else if (canonicDataLabel === 'RETENTIONTIME') {\n      spectrum.pageValue = parseFloat(dataValue);\n    } else if (isMSField(canonicDataLabel)) {\n      spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n    } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n      spectrum.sampleDescription = dataValue;\n    } else if (canonicDataLabel === 'END') {\n      currentEntry = parentsStack.pop();\n    }\n\n    if (\n      currentEntry &&\n      currentEntry.info &&\n      canonicDataLabel.match(options.keepRecordsRegExp)\n    ) {\n      let label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n      let value = dataValue.trim();\n      if (options.dynamicTyping && !isNaN(value)) {\n        value = Number(value);\n      }\n      if (currentEntry.info[label]) {\n        if (!Array.isArray(currentEntry.info[label])) {\n          currentEntry.info[label] = [currentEntry.info[label]];\n        }\n        currentEntry.info[label].push(value);\n      } else {\n        currentEntry.info[label] = value;\n      }\n    }\n  }\n\n  profiling(result, 'Finished parsing', options);\n\n  postProcessing(entriesFlat, result, options);\n\n  profiling(result, 'Total time', options);\n\n  /*\n  if (result.children && result.children.length>0) {\n    result = { ...result, ...result.children[0] };\n  }\n  */\n  result.entries = tmpResult.children;\n  result.flatten = entriesFlat;\n\n  return result;\n}\n","import { convert } from 'jcampconverter';\n\nexport default function addJcamp(spectrum, jcamp) {\n  let converted = convert(jcamp, {\n    keepRecordsRegExp: /.*/,\n    canonicDataLabels: false,\n    dynamicTyping: true,\n  });\n\n  for (let entry of converted.flatten) {\n    let currentSpectrum = entry.spectra[0];\n\n    let xLabel = currentSpectrum.xUnit;\n    let yLabel = currentSpectrum.yUnit;\n\n    let flavor = '';\n    if (xLabel.match(/\\[.*C\\]/)) flavor = 'weightVersusTemperature';\n    if (xLabel.match(/\\[.*s\\]/)) flavor = 'weightVersusTime';\n    if (flavor) {\n      spectrum.set(currentSpectrum.data, {\n        flavor,\n        xLabel,\n        yLabel,\n        title: currentSpectrum.title,\n      });\n    }\n  }\n}\n","import Spectrum from '../Spectrum';\nimport addJcamp from '../addJcamp';\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @param {object} [options={}]\n * @param {object} [options.id=Math.random()]\n * @return {Spectrum} - New class element with the given data\n */\nexport default function fromJcamp(jcamp, options = {}) {\n  let spectrum = new Spectrum(options);\n  addJcamp(spectrum, jcamp);\n  return spectrum;\n}\n","export function fromXxyyArray(data) {\n  return { x: data[0], y: data[1] };\n}\n\nexport function fromXyxyArray(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point[0]);\n    y.push(point[1]);\n  }\n  return { x, y };\n}\n\nexport function fromXyxyObject(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point.x);\n    y.push(point.y);\n  }\n  return { x, y };\n}\n\nexport function fromGeneral(data) {\n  if (Array.isArray(data)) {\n    if (data.length === 0) return { x: [], y: [] };\n    if (Array.isArray(data[0])) {\n      if (data.length === 2) {\n        return fromXxyyArray(data);\n      } else {\n        return fromXyxyArray(data);\n      }\n    } else {\n      return fromXyxyObject(data);\n    }\n  } else {\n    if (Array.isArray(data.x) && Array.isArray(data.x)) {\n      return data;\n    } else {\n      throw new TypeError('unknown data format');\n    }\n  }\n}\n","export function toXxyyArray({ x, y }) {\n  return [x, y];\n}\n\nexport function toXyxyArray({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push([x[index], y[index]]);\n  }\n  return ans;\n}\n\nexport function toXyxyObject({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push({ x: x[index], y: y[index] });\n  }\n  return ans;\n}\n","import { fromGeneral, fromXxyyArray, fromXyxyArray, fromXyxyObject } from './from';\nimport { toXxyyArray, toXyxyArray, toXyxyObject } from './to';\n\n/**\n * Convert between different xy formats\n * @param {*} data - input set of points to parse\n * @param {object} [options] - input and output options\n * @param {string} [options.inputFormat] - input format, if not in list infers the kind\n * @param {string} [options.outputFormat = 'xxyyObject'] - output format\n * @return {*} - output set of points\n */\nexport default function xyConvert(data, options = {}) {\n  const { inputFormat, outputFormat = 'xxyyObject' } = options;\n\n  if (inputFormat === outputFormat) return data;\n\n  let middleData;\n  switch (inputFormat) {\n    case 'xxyyArray':\n      middleData = fromXxyyArray(data);\n      break;\n\n    case 'xyxyArray':\n      middleData = fromXyxyArray(data);\n      break;\n\n    case 'xxyyObject':\n      // this is the base case\n      middleData = data;\n      break;\n\n    case 'xyxyObject':\n      middleData = fromXyxyObject(data);\n      break;\n\n    default:\n      middleData = fromGeneral(data);\n      break;\n  }\n\n  switch (outputFormat) {\n    case 'xxyyArray':\n      return toXxyyArray(middleData);\n\n    case 'xyxyArray':\n      return toXyxyArray(middleData);\n\n    case 'xxyyObject':\n      return middleData;\n\n    case 'xyxyObject':\n      return toXyxyObject(middleData);\n\n    default:\n      throw new TypeError(`unknown output format ${outputFormat}`);\n  }\n}\n","/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} data\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creator(data, meta = {}) {\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    type = '',\n    xUnit = '',\n    yUnit = '',\n    info = {},\n  } = meta;\n  let firstX = Number.POSITIVE_INFINITY;\n  let lastX = Number.NEGATIVE_INFINITY;\n  let firstY = Number.POSITIVE_INFINITY;\n  let lastY = Number.NEGATIVE_INFINITY;\n  let points = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${type}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnit}\n##YUNITS=${yUnit}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key of Object.keys(info)) {\n    header += `##$${key}=${info[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import { parseXY } from 'xy-parser';\nimport xyConvert from 'ml-xy-convert';\n\nimport creator from './creator';\n\n/**\n * Convert strings into JCAMP and add extra information\n * @param {string} data - values to add to the file, usually a csv or tsv values\n * @param {object} [options={}]\n * @param {string} [options.meta] - metadata of the file\n * @param {string} [options.meta.title = ''] - title of the file\n * @param {string} [options.meta.owner = ''] - owner of the file\n * @param {string} [options.meta.origin = ''] - origin of the file\n * @param {string} [options.meta.type = ''] - type of data\n * @param {string} [options.meta.xUnit = ''] - units for the x axis\n * @param {string} [options.meta.yUnit = ''] - units for the y axis\n * @param {object} [options.meta.info = {}] - comments to add to the file\n * @param {object} [options.parser = {}] - 'xy-parser' options. arrayType = 'xyxy' is enforced\n * @return {string} JCAMP of the input\n */\nexport function fromText(data, options = {}) {\n  const { meta = {}, parserOptions = {} } = options;\n\n  parserOptions.keepInfo = true;\n  let parsed = parseXY(data, parserOptions);\n\n  if (!meta.info) meta.info = {};\n  meta.info.header = parsed.info.map((i) => i.value).join('\\n');\n  let jcamp = creator(parsed.data, meta);\n  return jcamp;\n}\n\n/**\n * Parse from any supported format in ml-xy-convert\n * @param {*} data - object or array with a set of points\n * @param {object} [meta] - metadata object\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, meta = {}) {\n  const parsed = xyConvert(data, { outputFormat: 'xxyyObject' });\n  return creator(parsed, meta);\n}\n","import { fromJSON } from 'convert-to-jcamp';\n\nexport default function toJcamp(spectrum) {\n  let jcamps = [];\n  let weightVersusTemperature = spectrum.get('weightVersusTemperature');\n  if (weightVersusTemperature) {\n    jcamps.push(getJcamp(weightVersusTemperature));\n  }\n  let weightVersusTime = spectrum.get('weightVersusTime');\n  if (weightVersusTime) {\n    jcamps.push(getJcamp(weightVersusTime));\n  }\n\n  return jcamps.join('\\n');\n}\n\nfunction getJcamp(spectrum) {\n  let options = {\n    xUnit: spectrum.xLabel,\n    yUnit: spectrum.yLabel,\n    title: spectrum.title,\n    type: 'TGA',\n    info: spectrum.meta,\n  };\n  return fromJSON({ x: spectrum.x, y: spectrum.y }, options);\n}\n","export default function addStyle(serie, spectrum, options = {}) {\n  const { color = 'darkgrey' } = options;\n  serie.style = [\n    {\n      name: 'unselected',\n      style: {\n        line: {\n          color,\n          width: 1,\n          dash: 1,\n        },\n      },\n    },\n    {\n      name: 'selected',\n      style: {\n        line: {\n          color,\n          width: 3,\n          dash: 1,\n        },\n      },\n    },\n  ];\n  serie.name = spectrum.label || spectrum.id;\n}\n","import addStyle from './addStyle';\n\n/**\n * Retrieve a chart with selected original data\n * @param {SpectraManager} spectraManager\n * @param {object} [options={}]\n * @param {Array} [options.ids] List of spectra ids, by default all\n * @param {Array} [options.colors] List of colors\n * @param {Array} [options.flavor]\n * @param {object} [options.normalization]\n */\nexport default function getJSGraph(spectraManager, options = {}) {\n  const { ids, colors, flavor, normalization } = options;\n  let spectra = spectraManager.getSpectra({ ids });\n  let series = [];\n\n  let xLabel = '';\n  let yLabel = '';\n\n  for (let i = 0; i < spectra.length; i++) {\n    const spectrum = spectra[i];\n    let serie = {};\n    let currentData = spectrum.getData({ flavor, normalization });\n    if (!currentData) continue;\n    if (!xLabel) xLabel = spectrum.getXLabel(flavor);\n    if (!yLabel) yLabel = spectrum.getYLabel(flavor);\n    addStyle(serie, spectrum, { color: colors[i] });\n    serie.data = currentData;\n    series.push(serie);\n  }\n  return {\n    axes: {\n      x: {\n        label: xLabel,\n        unit: '',\n        unitWrapperBefore: '',\n        unitWrapperAfter: '',\n        flipped: false,\n        display: true,\n      },\n      y: {\n        label: yLabel,\n        unit: '',\n        unitWrapperBefore: '',\n        unitWrapperAfter: '',\n        flipped: false,\n        display: true,\n      },\n    },\n    series,\n  };\n}\n"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","max","input","isArray","TypeError","length","maxValue","i","sum","sumValue","norm","options","arguments","undefined","_options$algorithm","algorithm","_options$sumValue","_options$maxValue","Error","output","Array","toLowerCase","absoluteSumValue","absoluteSum","slice","currentMaxValue","factor","_i","sumFactor","_i2","concat","Math","abs","min","minValue","rescale","currentMin","currentMax","RangeError","_options$min","autoMinMax","_options$max","_typeof","obj","Symbol","iterator","constructor","sequentialFill","_options","_options$from","from","_options$to","to","_options$size","size","step","floor","push","normalize","zones","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","JSON","parse","stringify","map","zone","sort","a","b","forEach","filter","currentZone","result","invert","exclusions","exclusion","nextExclusion","zonesWithPoints","numberOfPoints","totalSize","reduce","previous","current","unitsPerPoint","currentTotal","round","integral","x0","x1","slope","intercept","equallySpacedSmooth","x","y","xLength","halfStep","initialOriginalStep","lastOriginalStep","previousX","MIN_VALUE","previousY","nextX","nextY","currentValue","sumAtMin","sumAtMax","j","getSlope","y0","y1","add","main","equallySpacedSlot","lastStep","start","MAX_VALUE","frontOutsideSpectra","backOutsideSpectra","currentPoints","equallySpaced","arrayXY","reverse","variant","isNaN","xResult","yResult","zoneResult","processZone","getZones","currentFrom","filterX","points","currentZoneIndex","newX","newY","position","compareNumbers","exports","values","l","minMax","arithmeticMean","geometricMean","mul","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","k","harmonicMean","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","mean","theVariance","standardDeviation","sqrt","standardError","robustMeanAndStdev","stdev","averageDeviations","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","index","indexOf","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","standardize","standardDev","cumulativeSum","array","findClosestIndex","target","low","high","middle","getFromToIndex","fromIndex","toIndex","getTargetIndex","targetIndex","array1","array2","isConstant","constant","array3","multiply","Float64Array","dotProduct","A","B","crossCorrelation","tau","lag","q","autoCorrelation","boxPlot","info","Q1","Q2","Q3","q1max","q3min","middleOver","correlation","sumA","sumA2","sumB","sumB2","sumAB","divide","rotate","shift","subtract","X","checkRowIndex","matrix","outer","rows","checkColumnIndex","columns","checkRowVector","vector","to1DArray","checkColumnVector","checkIndices","rowIndices","columnIndices","row","checkRowIndices","column","checkColumnIndices","rowOut","some","r","columnOut","checkRange","startRow","endRow","startColumn","endColumn","checkNumber","newArray","value","name","sumByRow","get","sumByColumn","sumAll","productByRow","productByColumn","productAll","varianceByRow","cols","sum1","sum2","varianceByColumn","varianceAll","centerByRow","set","centerByColumn","centerAll","getScaleByRow","scale","scaleByRow","getScaleByColumn","scaleByColumn","getScaleAll","divider","scaleAll","inspectMatrix","indent","repeat","indentData","inspectData","maxRows","maxColumns","maxNumSize","maxI","maxJ","line","formatNumber","join","num","numStr","String","padEnd","precise","toPrecision","exponential","toExponential","eIndex","e","substring","installMathOperations","AbstractMatrix","Matrix","addS","addM","checkMatrix","newMatrix","sub","subS","subM","subtractS","subtractM","mulS","mulM","multiplyS","multiplyM","div","divS","divM","divideS","divideM","mod","modS","modM","modulus","modulusS","modulusM","and","andS","andM","or","orS","orM","xor","xorS","xorM","leftShift","leftShiftS","leftShiftM","signPropagatingRightShift","signPropagatingRightShiftS","signPropagatingRightShiftM","rightShift","rightShiftS","rightShiftM","zeroFillRightShift","zeroFillRightShiftS","zeroFillRightShiftM","not","acos","acosh","asin","asinh","atan","atanh","cbrt","clz32","cos","cosh","exp","expm1","fround","log1p","log10","log2","sign","sin","sinh","tan","tanh","trunc","arg0","powS","powM","from1DArray","newRows","newColumns","newData","rowVector","columnVector","zeros","ones","fill","rand","random","randInt","isInteger","interval","eye","diag","data","matrix1","matrix2","isMatrix","klass","apply","callback","to2DArray","copy","toJSON","isRowVector","isColumnVector","isVector","isSquare","isSymmetric","isEchelonForm","previousColumn","checked","isReducedEchelonForm","echelonForm","clone","h","iMax","swapRows","tmp","reducedEchelonForm","m","maxRow","p","pivot","setSubMatrix","neg","getRow","getRowVector","setRow","row1","row2","temp","getColumn","getColumnVector","setColumn","swapColumns","column1","column2","addRowVector","subRowVector","mulRowVector","divRowVector","addColumnVector","subColumnVector","mulColumnVector","divColumnVector","mulRow","mulColumn","idx","minIndex","maxRowIndex","minRow","minRowIndex","maxColumn","maxColumnIndex","minColumn","minColumnIndex","type","dot","mmul","other","Bcolj","s","strassen2x2","a11","b11","a12","b12","a21","b21","a22","b22","m1","m5","m6","m7","c00","c01","c10","c11","strassen3x3","a00","a01","a02","a10","a20","b00","b01","b02","b10","b20","m8","m9","m10","m11","m12","m13","m14","m15","m16","m17","m18","m19","m20","m21","m22","m23","c02","c12","c20","c21","c22","mmulStrassen","c1","c2","console","warn","embed","mat","resultat","blockMult","halfRows","parseInt","halfCols","subMatrix","scaleRows","isFinite","scaleColumns","flipRows","first","last","flipColumns","kroneckerProduct","transpose","sortRows","compareFunction","sortColumns","subMatrixRow","indices","subMatrixColumn","selection","rowIndex","columnIndex","trace","by","product","for","randomInt","diagonal","identity","negate","tensorProduct","nRows","nColumns","arrayData","removeRow","splice","addRow","removeColumn","newRow","addColumn","BaseView","MatrixTransposeView","WrapperMatrix2D","LuDecomposition","lu","pivotVector","pivotSign","t","LUcolj","kmax","LU","isSingular","col","solve","determinant","lowerTriangularMatrix","upperTriangularMatrix","pivotPermutationVector","hypotenuse","QrDecomposition","qr","rdiag","nrm","QR","Rdiag","isFullRank","orthogonalMatrix","SingularValueDecomposition","computeLeftSingularVectors","computeRightSingularVectors","autoTranspose","wantu","Boolean","wantv","swapped","aux","nu","ni","U","V","work","si","nct","nrt","mrc","pp","EPSILON","kase","alpha","ks","f","cs","sn","sp","spm1","epm1","sk","ek","Y","threshold","scols","Ls","rightSingularVectors","VL","vrows","urows","VLU","solveForDiagonal","inverse","vcols","ucols","condition","norm2","rank","tol","ii","leftSingularVectors","diagonalMatrix","useSVD","leftHandSide","rightHandSide","defaultOptions","arrayCase","len","cond","matrixCase","padArray","assign","factorial","windowSize","derivative","polynomial","pad","padValue","savitzkyGolay","C","ans","J","inic","Jtranspose","Jinv","det","d","getNormalized","spectrum","filters","processing","filterOptions","Stat","std","normed","process","kind","DEFAULT_FLAVOR","Spectrum","id","label","flavors","flavor","standardizeData","getData","normalization","getXLabel","xLabel","getYLabel","yLabel","meta","title","SpectraManager","spectra","addSpectrum","getSpectrumIndex","getSpectra","ids","includes","removeSpectrum","contains","parsePerkinElmer","text","lines","split","time","weight","temperature","section","inMethodSteps","startsWith","replace","match","trim","description","fields","string","fromPerkinElmer","GC_MS_FIELDS","complexChromatogram","chromatogram","times","series","ms","dimension","existingGCMSFields","convertMSFieldToLabel","pageValue","parseFloat","isMSField","canonicDataLabel","convertToFloatArray","stringArray","floatArray","fastParseXYData","yFactor","deltaX","isXYdata","currentData","currentX","firstX","currentY","firstY","endLine","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","parsePeakTable","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","xFactor","logs","parseXYA","removeSymbolRegExp","isXYAdata","_ref","module","window","quickSelectMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","lastX","lastY","minX","maxX","minY","maxY","noise","getMedian","generateContourLines","zData","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","dx","yN","dy","iter","nbContourLevels","contourLevels","lineZValue","level","contourLevel","side","noiseMultiplier","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","add2D","noContour","contourLines","profiling","action","Date","now","simpleChromatogram","intensity","postProcessing","entriesFlat","entry","keys","ntuples","newNtuples","key","twoD","wantXY","keepSpectra","xy","prepareSpectrum","observeFrequency","xUnit","toUpperCase","shiftOffsetVal","ntuplesSeparator","keepRecordsRegExp","canonicDataLabels","dynamicTyping","withoutXY","convert","jcamp","entries","tmpResult","children","currentEntry","parentsStack","ldrs","ldr","dataLabel","dataValue","xIndex","yIndex","infos","firstVariable","secondVariable","symbol","vardim","nbPoints","units","yUnit","datatable","parentEntry","dataType","dataClass","xType","indirectFrequency","shiftOffsetNum","varname","vartype","varform","yType","page","pageSymbol","pageSymbolIndex","unit","sampleDescription","pop","flatten","addJcamp","converted","currentSpectrum","fromJcamp","fromXxyyArray","fromXyxyArray","point","fromXyxyObject","fromGeneral","toXxyyArray","toXyxyArray","toXyxyObject","xyConvert","inputFormat","outputFormat","middleData","creator","owner","origin","header","fromJSON","parsed","toJcamp","jcamps","weightVersusTemperature","getJcamp","weightVersusTime","addStyle","serie","color","style","width","dash","getJSGraph","spectraManager","colors","axes","unitWrapperBefore","unitWrapperAfter","flipped","display"],"mappings":"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"}